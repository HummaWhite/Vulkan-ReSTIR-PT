; SPIR-V
; Version: 1.5
; Generator: Google Shaderc over Glslang; 11
; Bound: 2978
; Schema: 0
               OpCapability Shader
               OpCapability RayQueryKHR
               OpCapability ShaderNonUniform
               OpCapability RuntimeDescriptorArray
               OpCapability SampledImageArrayNonUniformIndexing
               OpExtension "SPV_KHR_ray_query"
         %12 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %_ %__0 %__1 %__2 %__3 %__4 %uTextures %rayQuery %rayQuery_0 %__5 %gl_GlobalInvocationID %__6 %uDepthNormal %uIndirectOutput %uAlbedoMatId %uTLAS %__7 %uDirectOutput %uDepthNormalPrev %uAlbedoMatIdPrev %uMotionVector %__8 %__9 %__10 %__11 %__12 %__13 %__14
               OpExecutionMode %main LocalSize 8 8 1
          %1 = OpString "gris_path_trace.comp"
          %2 = OpString "HostDevice.h"
          %3 = OpString "camera.glsl"
          %4 = OpString "gbuffer_util.glsl"
          %5 = OpString "gris_reservoir.glsl"
          %6 = OpString "layouts.glsl"
          %7 = OpString "light_sampling.glsl"
          %8 = OpString "material.glsl"
          %9 = OpString "math.glsl"
         %10 = OpString "ray_layouts.glsl"
         %11 = OpString "ray_query.glsl"
               OpSource GLSL 460 %1 "#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_ray_query : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable

#include \"HostDevice.h\"

layout(local_size_x = RayQueryBlockSizeX, local_size_y = RayQueryBlockSizeY) in;

#include \"ray_query.glsl\"
#include \"camera.glsl\"
#include \"gbuffer_util.glsl\"
#include \"light_sampling.glsl\"
#include \"material.glsl\"
#include \"gris_reservoir.glsl\"

const uint Reconnection = 0;
const uint Hybrid = 1;

layout(push_constant) uniform _PushConstant {
    GRISSettings uSettings;
};

void main() {
    const int MaxTracingDepth = 15;
    uvec2 threadIdx = gl_GlobalInvocationID.xy;
    uvec2 launchDim = uCamera.filmSize;

    if (threadIdx.x >= launchDim.x || threadIdx.y >= launchDim.y) {
        return;
    }
    vec2 uv = (vec2(threadIdx) + 0.5) / vec2(launchDim);

    vec4 depthNormal = texture(uDepthNormal, uv);
    float depth = depthNormal.x;
    vec3 norm = depthNormal.yzw;

    if (depth == 0.0) {
        imageStore(uIndirectOutput, ivec2(threadIdx), vec4(vec3(0.0), 1.0));
        return;
    }
    uvec2 albedoMatId = texelFetch(uAlbedoMatId, ivec2(threadIdx), 0).rg;
    vec3 albedo = unpackAlbedo(albedoMatId.x);
    int matMeshId = int(albedoMatId.y);
    int matId = matMeshId >> 16;
    
    Ray ray = pinholeCameraSampleRay(uCamera, vec2(uv.x, 1.0 - uv.y), vec2(0));
    uint rng = makeSeed(uCamera.seed + threadIdx.x, threadIdx.y);

    vec3 radiance = vec3(0.0);
    vec3 throughput = vec3(1.0);
    vec3 wo = -ray.dir;
    vec3 lastPos;
    bool isLastVertexConnectible = false;
    bool rcVertexFound = false;
    vec3 rcVertexThroughput = vec3(1.0);

    SurfaceInfo surf;
    surf.pos = ray.ori + ray.dir * (depth - 1e-4);
    surf.norm = norm;
    surf.albedo = albedo;
    surf.isLight = false;

    Material mat = uMaterials[matId];
    BSDFSample s;
    Intersection isec;

    GRISPathSample pathSample;
    pathSample.primaryHitRng = rng;

#pragma unroll
    for (int bounce = 0; bounce < MaxTracingDepth; bounce++) {
        if (bounce > 0) {
            isec = rayQueryTraceClosestHit(
                uTLAS,
                gl_RayFlagsOpaqueEXT, 0xff,
                ray.ori, MinRayDistance, ray.dir, MaxRayDistance
            );

            if (!IntersectionIsValid(isec)) {
                break;
            }
            loadSurfaceInfo(isec, surf);
            mat = uMaterials[surf.matIndex];
        }

        if (surf.isLight) {
            float cosTheta = -dot(ray.dir, surf.norm);

            if (/* cosTheta > 0 */ true) {
                float weight = 1.0;

                if (bounce > 0 && !isSampleTypeDelta(s.type)) {
                    float dist = length(surf.pos - lastPos);
                    float sumPower = uLightSampleTable[0].prob;
                    float lightPdf = luminance(surf.albedo) / sumPower * dist * dist / cosTheta;
                    weight = MISWeight(s.pdf, lightPdf);
                }
                if (rcVertexFound && GRISPathFlagsGetRcVertexId(pathSample.pathFlags) < bounce) {
                    pathSample.rcVertexRadiance += surf.albedo * weight * rcVertexThroughput;
                }
                radiance += surf.albedo * weight * throughput;
            }
            break;
        }
        bool isThisVertexConnectible = isBSDFConnectible(mat);

        if (!rcVertexFound && isLastVertexConnectible && isThisVertexConnectible) {
            rcVertexFound = true;
            pathSample.rcVertexIsec = isec;
            pathSample.rcVertexRadiance = vec3(0.0);
            pathSample.rcVertexRng = rng;
            GRISPathFlagsSetRcVertexId(pathSample.pathFlags, bounce);
        }

        if (/* sample direct lighting */ bounce > 0 && !isBSDFDelta(mat) && rcVertexFound) {
            const uint shadowRayFlags = gl_RayFlagsTerminateOnFirstHitEXT | gl_RayFlagsOpaqueEXT | gl_RayFlagsSkipClosestHitShaderEXT;

            vec3 lightRadiance, lightDir;
            float lightDist, lightPdf;

            lightRadiance = sampleLight(surf.pos, lightDir, lightDist, lightPdf, rng);

            bool shadowed = rayQueryTraceShadow(
                uTLAS,
                shadowRayFlags, 0xff,
                surf.pos, MinRayDistance, lightDir, lightDist - 1e-4
            );

            if (!shadowed && lightPdf > 1e-6) {
                float bsdfPdf = absDot(surf.norm, lightDir) * PiInv;
                float weight = MISWeight(lightPdf, bsdfPdf);
                vec3 lightTerms = lightRadiance * evalBSDF(mat, surf.albedo, surf.norm, wo, lightDir) * satDot(surf.norm, lightDir) / lightPdf;
                radiance += lightTerms * weight * throughput;
                pathSample.rcVertexRadiance += lightTerms * weight * rcVertexThroughput;
            }
        }
        if (/* russian roulette */ bounce > 4) {
            float pdfTerminate = max(1.0 - luminance(throughput), 0);

            if (sample1f(rng) < pdfTerminate) {
                break;
            }
            throughput /= (1.0 - pdfTerminate);
        }

        if (!sampleBSDF(mat, surf.albedo, surf.norm, wo, sample3f(rng), s) || s.pdf < 1e-6) {
            break;
        }

        float cosTheta = isSampleTypeDelta(s.type) ? 1.0 : absDot(surf.norm, s.wi);
        vec3 scatterTerm = s.bsdf * cosTheta / s.pdf;
        throughput *= scatterTerm;

        if (rcVertexFound) {
            if (GRISPathFlagsGetRcVertexId(pathSample.pathFlags) == bounce) {
                //pathSample.rcVertexLightPdf
                pathSample.rcVertexWi = s.wi;
            }
            rcVertexThroughput *= scatterTerm;
        }

        lastPos = surf.pos;
        wo = -s.wi;
        ray.dir = s.wi;
        ray.ori = surf.pos + ray.dir * 1e-4;
        isLastVertexConnectible = isThisVertexConnectible;
    }
    radiance = colorWheel(float(GRISPathFlagsGetRcVertexId(pathSample.pathFlags)) * float(rcVertexFound) / 6);

    radiance = clampColor(radiance);
    float frameCount = float(uCamera.frameIndex & CameraFrameIndexMask);
    vec3 accumulatedRadaince = imageLoad(uIndirectOutput, ivec2(threadIdx)).rgb;
    accumulatedRadaince = (accumulatedRadaince * frameCount + radiance) / (frameCount + 1.0);

    imageStore(uIndirectOutput, ivec2(threadIdx), vec4(accumulatedRadaince, 1.0));
}"
               OpSource GLSL 460 %2 "#ifndef HOST_DEVICE_H
#define HOST_DEVICE_H

#ifdef __cplusplus
  #include <vulkan/vulkan.hpp>

  constexpr uint32_t NumFramesInFlight = 1;

  #define ENUM_BEGIN(x) enum x {
  #define ENUM_END(x) }
  #define SWAPCHAIN_FORMAT vk::Format::eB8G8R8A8Unorm

const vk::ShaderStageFlags RayPipelineShaderStageFlags =
    vk::ShaderStageFlagBits::eRaygenKHR | vk::ShaderStageFlagBits::eAnyHitKHR |
    vk::ShaderStageFlagBits::eMissKHR | vk::ShaderStageFlagBits::eClosestHitKHR;

const vk::ShaderStageFlags RayQueryShaderStageFlags =
    vk::ShaderStageFlagBits::eCompute;

#else
  #define ENUM_BEGIN(x) uint
  #define ENUM_END(x) ;
  #define SWAPCHAIN_FORMAT rgba8

  #define int32_t int
  #define uint32_t uint
#endif

#define RESTIR_PT_MATERIAL 1

const uint32_t InvalidResourceIdx = 0xffffffff;

const uint32_t PostProcBlockSizeX = 32;
const uint32_t PostProcBlockSizeY = 32;

const uint32_t RayQueryBlockSizeX = 8;
const uint32_t RayQueryBlockSizeY = 8;

const uint32_t CameraDescSet = 0;
const uint32_t ResourceDescSet = 1;
const uint32_t GBufferDrawParamDescSet = 2;
const uint32_t RayImageDescSet = 3;
const uint32_t RayTracingDescSet = 4;
const uint32_t SwapchainStorageDescSet = 5;

#endif"
               OpSource GLSL 460 %3 "#include \"math.glsl\"

const uint CameraClearFlag = 0x80000000;
const uint CameraFrameIndexMask = 0x7fffffff;

struct CameraPdf {
	float pdfPos;
	float pdfDir;
};

CameraPdf makeCameraPdf(float pdfPos, float pdfDir) {
	CameraPdf ret;
	ret.pdfPos = pdfPos;
	ret.pdfDir = pdfDir;
	return ret;
}

Ray makeRay(vec3 ori, vec3 dir) {
	Ray ret;
	ret.ori = ori;
	ret.dir = dir;
	return ret;
}

Ray pinholeCameraSampleRay(Camera cam, vec2 uv, vec2 r) {
	vec2 texelSize = 1.0 / vec2(cam.filmSize);
	vec2 biasedCoord = uv + texelSize * r.xy;
	vec2 ndc = biasedCoord * 2.0 - 1.0;
	float aspect = float(cam.filmSize.x) / float(cam.filmSize.y);
	float tanFOV = tan(radians(cam.FOV * 0.5));

	vec3 pFocusPlane = vec3(ndc * vec2(aspect, 1.0) * tanFOV, 1.0);

	vec3 ori = cam.pos;
	vec3 dir = normalize(pFocusPlane);
	dir = normalize(cam.right * dir.x + cam.up * dir.y + cam.front * dir.z);

	return Ray(ori, dir);
}

Ray thinLensCameraSampleRay(Camera cam, vec2 uv, vec4 r) {
	vec2 texelSize = 1.0 / vec2(cam.filmSize);
	vec2 biasedCoord = uv + texelSize * r.xy;
	vec2 ndc = biasedCoord * 2.0 - 1.0;
	float aspect = float(cam.filmSize.x) / float(cam.filmSize.y);
	float tanFOV = tan(radians(cam.FOV * 0.5));

	vec3 pLens = vec3(toConcentricDisk(r.zw) * cam.lensRadius, 0.0);
	vec3 pFocusPlane = vec3(ndc * vec2(aspect, 1.0) * tanFOV, 1.0) * cam.focalDist;

	vec3 ori = cam.pos + cam.right * pLens.x + cam.up * pLens.y;
	vec3 dir = pFocusPlane - pLens;
	dir = normalize(cam.right * dir.x + cam.up * dir.y + cam.front * dir.z);

	return Ray(ori, dir);
}

/*
struct CameraIiSample {
	vec3 wi;
	vec3 Ii;
	float dist;
	vec2 uv;
	float pdf;
};

CameraIiSample makeCameraIiSample(vec3 wi, vec3 Ii, float dist, vec2 uv, float pdf) {
	CameraIiSample ret;
	ret.wi = wi;
	ret.Ii = Ii;
	ret.dist = dist;
	ret.uv = uv;
	ret.pdf = pdf;
	return ret;
}

const CameraIiSample InvalidIiSample = makeCameraIiSample(vec3(0.0), vec3(0.0), 0.0, vec2(0.0), 0);

bool inFilmBound(vec2 uv) {
	return uv.x >= 0 && uv.x <= 1.0 && uv.y >= 0 && uv.y <= 1.0;
}

bool thinLensCameraIsApertureDelta(Camera cam) {
	return cam.lensRadius <= 1e-6;
}

vec2 thinLensCameraGetRasterPos(Camera cam, Ray ray) {
	float cosTheta = dot(ray.dir, cam.front);
	float dFocus = uFocalDist / cosTheta;
	vec3 pFocus = cam.MatInv * (rayPoint(ray, dFocus) - cam.Pos);

	vec2 filmSize = vec2(uFilmSize);
	float aspect = filmSize.x / filmSize.y;

	pFocus /= vec3(vec2(aspect, 1.0) * uTanFOV, 1.0) * uFocalDist;
	vec2 ndc = pFocus.xy;
	return (ndc + 1.0) * 0.5;
}

vec3 thinLensCameraIe(Camera cam, Ray ray) {
	float cosTheta = dot(ray.dir, cam.front);

	if (cosTheta < 1e-6) {
		return vec3(0.0);
	}
	vec2 pRaster = thinLensCameraRasterPos(ray);

	if (!inFilmBound(pRaster)) {
		return vec3(0.0);
	}

	float tanFOVInv = 1.0 / uTanFOV;
	float cos2Theta = cosTheta * cosTheta;
	float lensArea = thinLensCameraDelta() ? 1.0 : Pi * uLensRadius * uLensRadius;
	return vec3(0.25) * square(tanFOVInv / cos2Theta) / (lensArea * cam.Asp);
}

CameraIiSample thinLensCameraSampleIi(vec3 ref, vec2 u) {
	vec3 pLens = vec3(toConcentricDisk(u) * uLensRadius, 0.0);
	vec3 y = cam.Pos + cam.R * pLens.x + cam.U * pLens.y + cam.F * pLens.z;
	float dist = distance(ref, y);

	vec3 wi = normalize(y - ref);
	float cosTheta = satDot(cam.F, -wi);

	if (cosTheta < 1e-6) {
		return InvalidIiSample;
	}

	Ray ray = makeRay(y, -wi);
	vec3 Ie = thinLensCameraIe(ray);
	vec2 uv = thinLensCameraRasterPos(ray);
	float lensArea = thinLensCameraDelta() ? 1.0 : Pi * uLensRadius * uLensRadius;
	float pdf = dist * dist / (cosTheta * lensArea);

	return makeCameraIiSample(wi, Ie, dist, uv, pdf);
}

CameraPdf thinLensCameraPdfIe(Ray ray) {
	float cosTheta = dot(cam.F, ray.dir);

	if (cosTheta < 1e-6) {
		return makeCameraPdf(0.0, 0.0);
	}
	vec2 pRaster = thinLensCameraRasterPos(ray);

	if (!inFilmBound(pRaster)) {
		return makeCameraPdf(0.0, 0.0);
	}

	float pdfPos = thinLensCameraDelta() ? 1.0 : 1.0 / (Pi * uLensRadius * uLensRadius);
	float pdfDir = 1.0 / (cosTheta * cosTheta * cosTheta);
	return makeCameraPdf(pdfPos, pdfDir);
}
*/"
               OpSource GLSL 460 %4 "#ifndef GBUFFER_UTIL_GLSL
#define GBUFFER_UTIL_GLSL

uint packAlbedo(vec3 albedo) {
    return packUnorm4x8(vec4(albedo, 1.0));
}

vec3 unpackAlbedo(uint packed) {
    return unpackUnorm4x8(packed).rgb;
}

uvec2 packNormal(vec3 n) {
    vec2 p = n.xy * (1.0 / (abs(n.x) + abs(n.y) + n.z));
    return floatBitsToUint(vec2(p.x + p.y, p.x - p.y));
}

vec3 unpackNormal(uvec2 packed) {
    vec2 p = uintBitsToFloat(packed);
    vec2 temp = vec2(p.x + p.y, p.x - p.y) * 0.5;
    vec3 v = vec3(temp, 1.0 - abs(temp.x) - abs(temp.y));
    return normalize(v);
}

uint packMotionVector(vec2 motion) {
    return packSnorm2x16(motion);
}

vec2 unpackMotionVector(uint packed) {
    return unpackSnorm2x16(packed);
}

#endif"
               OpSource GLSL 460 %5 "#ifndef GRIS_RESERVOIR_GLSL
#define GRIS_RESERVOIR_GLSL

#include \"material.glsl\"
#include \"math.glsl\"
#include \"ray_layouts.glsl\"

const uint GRISMergeModeRegular = 0;
const uint GRISMergeModeWithMISResample = 1;

float GRISToScalar(vec3 color) {
	return luminance(color);
}

uint GRISPathFlagsGetRcVertexId(uint flags) {
	return flags & 0xff;
}

uint GRISPathFlagsGetRcVertexPathLength(uint flags) {
	return (flags >> 8) & 0xff;
}

void GRISPathFlagsSetRcVertexId(inout uint flags, uint id) {
	flags = (flags & 0xffffff00) | (id & 0xff);
}

void GRISPathFlagsSetRcVertexPathLength(inout uint flags, uint id) {
	flags = (flags & 0xffff00ff) | ((id & 0xff) << 8);
}

void GRISPathSampleReset(inout GRISPathSample pathSample) {
	pathSample.rcVertexIsec.instanceIdx = InvalidHitIndex;
	pathSample.F = vec3(0.0);
	pathSample.pathFlags = 0;
}

void GRISReservoirReset(inout GRISReservoir resv) {
	GRISPathSampleReset(resv.pathSample);
	resv.sampleCount = 0;
	resv.resampleWeight = 0;
}

bool isResampleWeightInvalid(float weight) {
	return isnan(weight) || weight == 0;
}

bool GRISReservoirIsValid(GRISReservoir resv) {
	return !isnan(resv.resampleWeight) && resv.resampleWeight >= 0;
}

void GRISReservoirResetIfInvalid(inout GRISReservoir resv) {
	if (!GRISReservoirIsValid(resv)) {
		GRISReservoirReset(resv);
	}
}

void GRISReservoirUpdateContribWeight(inout GRISReservoir resv) {
	resv.contribWeight = resv.resampleWeight / (resv.sampleCount * GRISToScalar(resv.pathSample.F));
}

bool GRISReservoirAdd(inout GRISReservoir resv, vec3 F, float pHat, inout uint rng) {
	resv.sampleCount += 1.0;
	float resampleWeight = GRISToScalar(F) / pHat;

	if (isResampleWeightInvalid(resampleWeight)) {
		return false;
	}
	resv.resampleWeight += resampleWeight;

	if (sample1f(rng) * resv.resampleWeight < resampleWeight) {
		resv.pathSample.F = F;
		return true;
	}
	return false;
}

bool GRISReservoirMerge(inout GRISReservoir resv, GRISReservoir rhs, inout uint rng) {
	resv.sampleCount += rhs.sampleCount;
	float resampleWeight = rhs.resampleWeight;

	if (isResampleWeightInvalid(resampleWeight)) {
		return false;
	}
	resv.resampleWeight += resampleWeight;

	if (sample1f(rng) * resv.resampleWeight < resampleWeight) {
		resv.pathSample = rhs.pathSample;
		return true;
	}
	return false;
}

bool GRISReservoirMerge(inout GRISReservoir resv, GRISReservoir rhs, vec3 F, float jacobian, inout uint rng, float MISWeight, bool forceAdd) {
	resv.sampleCount += rhs.sampleCount;
	float resampleWeight = GRISToScalar(F) * jacobian * rhs.sampleCount * rhs.resampleWeight;

	if (isResampleWeightInvalid(resampleWeight)) {
		return false;
	}
	resv.resampleWeight += resampleWeight;

	if (sample1f(rng) * resv.resampleWeight < resampleWeight || forceAdd) {
		resv.pathSample = rhs.pathSample;
		resv.pathSample.F = F;
		return true;
	}
	return false;
}

bool GRISReservoirMerge(inout GRISReservoir resv, GRISReservoir rhs, vec3 F, float jacobian, inout uint rng) {
	return GRISReservoirMerge(resv, rhs, F, jacobian, rng, 1.0, false);
}

bool GRISReservoirMergeWithMISResample(inout GRISReservoir resv, GRISReservoir rhs, vec3 F, float jacobian, inout uint rng, float MISWeight, bool forceAdd) {
	resv.sampleCount += rhs.sampleCount;
	float resampleWeight = GRISToScalar(F) * jacobian * rhs.resampleWeight;

	if (isResampleWeightInvalid(resampleWeight)) {
		return false;
	}
	resv.resampleWeight += resampleWeight;

	if (sample1f(rng) * resv.resampleWeight < resampleWeight || forceAdd) {
		resv.pathSample = rhs.pathSample;
		resv.pathSample.F = F;
		return true;
	}
	return false;
}

bool GRISReservoirMergeWithMISResample(inout GRISReservoir resv, GRISReservoir rhs, vec3 F, float jacobian, inout uint rng) {
	return GRISReservoirMergeWithMISResample(resv, rhs, F, jacobian, rng, 1.0, false);
}

void GRISReservoirCapSample(inout GRISReservoir resv, float cap) {
	if (resv.sampleCount > cap) {
		resv.resampleWeight *= cap / resv.sampleCount;
		resv.sampleCount = cap;
	}
}

#endif"
               OpSource GLSL 460 %6 "#ifndef LAYOUTS_GLSL
#define LAYOUTS_GLSL

#include \"HostDevice.h\"

struct Material {
	vec3 baseColor;
	uint type;

	uint textureIdx;
	float metallic;
	float roughness;
	float ior;
#if !RESTIR_PT_MATERIAL
	float specular;
	float specularTint;
	float sheen;
	float sheenTint;

	float clearcoat;
	float clearcoatGloss;
	float subsurface;
	int pad0;
#endif
};

struct Camera {
	mat4 view;
	mat4 proj;
	mat4 projView;
	mat4 lastProjView;

	vec3 pos;
	float FOV;

	vec3 angle;
	float near;

	vec3 front;
	float far;

	vec3 right;
	float lensRadius;

	vec3 up;
	float focalDist;

	uvec2 filmSize;
	uint frameIndex;
	uint seed;
};

struct GBufferDrawParam {
	mat4 model;
	mat4 modelInvT;
	int matIdx;
	int meshIdx;
	int pad0;
	int pad1;
};

struct MeshVertex {
	vec3 pos;
	float uvx;
	vec3 norm;
	float uvy;
};

struct ObjectInstance {
	mat4 transform;
	mat4 transformInv;
	mat4 transformInvT;

	vec3 radiance;
	float pad0;

	uint indexOffset;
	uint indexCount;
	float pad1;
	float pad2;
};

struct TriangleLight {
	vec3 v0;
	float nx;
	vec3 v1;
	float ny;
	vec3 v2;
	float nz;
	vec3 radiance;
	float area;
};

struct LightSampleTableElement {
	float prob;
	uint failId;
};

struct Intersection {
	vec2 bary;
	uint instanceIdx;
	uint triangleIdx;
};

struct DIPathSample {
	vec3 radiance;
	float pHat;
	vec3 wi;
	float dist;
};

struct DIReservoir {
	vec3 radiance;
	float pad0;
	vec3 wi;
	float dist;
	uint sampleCount;
	float resampleWeight;
	float contribWeight;
	float pHat;
};

struct GIPathSample {
	vec3 radiance;
	vec3 visiblePos;
	vec3 visibleNorm;
	vec3 sampledPos;
	vec3 sampledNorm;
};

struct GIReservoir {
	vec3 radiance;
	uint sampleCount;
	vec3 visiblePos;
	float resampleWeight;
	vec3 visibleNorm;
	float contribWeight;
	vec3 sampledPos;
	float pHat;
};

struct GRISPathSample {
	Intersection rcVertexIsec;

	vec3 rcVertexRadiance;
	float rcVertexLightPdf;

	vec3 rcVertexWi;
	uint rcVertexRng;

	vec3 rcVertexCachedJacobian;
	uint primaryHitRng;

	vec3 F;
	uint pathFlags;
};

struct GRISReservoir {
	GRISPathSample pathSample;
	float sampleCount;
	float resampleWeight;
	float contribWeight;
	float pad0;
};

struct GRISSettings {
	uint shiftType;
};

layout(set = CameraDescSet, binding = 0) uniform _Camera {
	Camera uCamera;
	Camera uPrevCamera;
};

layout(set = GBufferDrawParamDescSet, binding = 0, std140) readonly buffer _GBufferDrawParam { GBufferDrawParam uGBufferDrawParams[]; };

layout(set = ResourceDescSet, binding = 0) uniform sampler2D uTextures[];
layout(set = ResourceDescSet, binding = 1) readonly buffer _Materials { Material uMaterials[]; };
layout(set = ResourceDescSet, binding = 2) readonly buffer _MaterialIndices { int uMaterialIndices[]; };
layout(set = ResourceDescSet, binding = 3) readonly buffer _Vertices { MeshVertex uVertices[]; };
layout(set = ResourceDescSet, binding = 4) readonly buffer _Indices { uint uIndices[]; };
layout(set = ResourceDescSet, binding = 5) readonly buffer _ObjectInstances { ObjectInstance uObjectInstances[]; };
layout(set = ResourceDescSet, binding = 6) readonly buffer _TriangleLights { TriangleLight uTriangleLights[]; };
layout(set = ResourceDescSet, binding = 7) readonly buffer _LightSampleTable { LightSampleTableElement uLightSampleTable[]; };

layout(set = RayImageDescSet, binding =  0, rgba16f) uniform image2D uDirectOutput;
layout(set = RayImageDescSet, binding =  1, rgba16f) uniform image2D uIndirectOutput;
layout(set = RayImageDescSet, binding =  2) uniform sampler2D uDepthNormal;
layout(set = RayImageDescSet, binding =  3) uniform sampler2D uDepthNormalPrev;
layout(set = RayImageDescSet, binding =  4) uniform usampler2D uAlbedoMatId;
layout(set = RayImageDescSet, binding =  5) uniform usampler2D uAlbedoMatIdPrev;
layout(set = RayImageDescSet, binding =  6) uniform sampler2D uMotionVector;
layout(set = RayImageDescSet, binding =  7) buffer _DIReservoirThis { DIReservoir uDIReservoir[]; };
layout(set = RayImageDescSet, binding =  8) buffer _DIReservoirPrev { DIReservoir uDIReservoirPrev[]; };
layout(set = RayImageDescSet, binding =  9) buffer _GIReservoirThis { GIReservoir uGIReservoir[]; };
layout(set = RayImageDescSet, binding = 10) buffer _GIReservoirPrev { GIReservoir uGIReservoirPrev[]; };
layout(set = RayImageDescSet, binding = 11) buffer _GRISReservoirThis { GRISReservoir uGRISReservoir[]; };
layout(set = RayImageDescSet, binding = 12) buffer _GRISReservoirPrev { GRISReservoir uGRISReservoirPrev[]; };

#endif"
               OpSource GLSL 460 %7 "#ifndef LIGHT_SAMPLING_GLSL
#define LIGHT_SAMPLING_GLSL

vec3 sampleTriangleLight(TriangleLight light, vec3 ref, out vec3 wi, out float dist, out float pdf, vec2 r) {
    vec3 pos = sampleTriangleUniform(light.v0, light.v1, light.v2, r);
    dist = distance(ref, pos);

    vec3 n = vec3(light.nx, light.ny, light.nz);
    wi = (pos - ref) / dist;
    pdf = dist * dist / absDot(n, wi) / light.area;

    return light.radiance;
}

vec3 sampleLightByPower(vec3 ref, out vec3 wi, out float dist, out float pdf, vec4 r) {
    float sumPower = uLightSampleTable[0].prob;
    uint numLights = uLightSampleTable[0].failId;

    uint idx = uint(float(numLights) * r.x);
    idx = (r.y < uLightSampleTable[idx + 1].prob) ? idx : uLightSampleTable[idx + 1].failId - 1;

    TriangleLight light = uTriangleLights[idx];
    vec3 radiance = sampleTriangleLight(light, ref, wi, dist, pdf, r.zw);
    pdf *= luminance(light.radiance) * light.area / sumPower;

    return radiance;
}

vec3 sampleLightUniform(vec3 ref, out vec3 wi, out float dist, out float pdf, vec4 r) {
    uint numLights = uLightSampleTable[0].failId;
    uint idx = uint(float(numLights) * r.x);

    TriangleLight light = uTriangleLights[idx];
    vec3 radiance = sampleTriangleLight(light, ref, wi, dist, pdf, r.zw);
    pdf *= 1.0 / float(numLights);

    return radiance;
}

vec3 sampleLight(vec3 ref, out vec3 wi, out float dist, out float pdf, inout uint rng) {
    //return sampleLightByPower(ref, wi, dist, pdf, sample4f(rng));
    return sampleLightUniform(ref, wi, dist, pdf, sample4f(rng));
}

vec3 sampleLightThreaded(vec3 ref, float blockRand, out vec3 wi, out float dist, out float pdf, inout uint rng) {
    float sumPower = uLightSampleTable[0].prob;
    uint numLights = uLightSampleTable[0].failId;

    const uint blockSize = 16384;
    uint blockNum = ceilDiv(numLights, blockSize);
    uint blockIdx = uint(blockRand * float(blockNum));

    uint realSize = (blockIdx == blockNum - 1) ? numLights - blockIdx * blockSize : blockSize;
    uint idx = blockSize * blockIdx + uint(sample1f(rng) * realSize);

    TriangleLight light = uTriangleLights[idx];
    vec3 radiance = sampleTriangleLight(light, ref, wi, dist, pdf, sample2f(rng));
    pdf *= 1.0 / float(numLights);

    return radiance;
}

#endif"
               OpSource GLSL 460 %8 "#ifndef MATERIAL_GLSL
#define MATERIAL_GLSL

#include \"math.glsl\"

const uint Diffuse = 1 << 0;
const uint Glossy = 1 << 1;
const uint Specular = 1 << 2;
const uint Reflection = 1 << 4;
const uint Transmission = 1 << 5;
const uint InvalidBSDFSample = 0x80000000;

const uint Principled = 0;
const uint Lambert = 1;
const uint MetallicWorkflow = 2;
const uint Metal = 3;
const uint Dielectric = 4;
const uint ThinDielectric = 5;
const uint Light = 6;

#define MATERIAL_DIELECTRIC_USE_SCHLICK_APPROX true

struct BSDFSample {
	vec3 wi;
	float pdf;
	vec3 bsdf;
	uint type;
};

float fresnelSchlick(float cosTheta, float ior) {
    float f0 = abs(1.0 - ior) / (1.0 + ior);
    return mix(f0, 1.0, pow5(1.0 - cosTheta));
}

vec3 fresnelSchlick(float cosTheta, vec3 f0) {
    return mix(f0, vec3(1.0), pow5(1.0 - cosTheta));
}

float fresnel(float cosIn, float ior) {
#if MATERIAL_DIELECTRIC_USE_SCHLICK_APPROX
    return fresnelSchlick(cosIn, ior);
#else
    if (cosIn < 0) {
        ior = 1.0 / ior;
        cosIn = -cosIn;
    }
    float sinIn = sqrt(1.0 - cosIn * cosIn);
    float sinTr = sinIn / ior;
    if (sinTr >= 1.0) {
        return 1.0;
    }
    float cosTr = sqrt(1.0 - sinTr * sinTr);
    return (square((cosIn - ior * cosTr) / (cosIn + ior * cosTr)) +
        square((ior * cosIn - cosTr) / (ior * cosIn + cosTr))) * 0.5;
#endif
}

float schlickG(float cosTheta, float alpha) {
    float a = alpha * 0.5;
    return cosTheta / (cosTheta * (1.0 - a) + a);
}

float smithG(float cosWo, float cosWi, float alpha) {
    return schlickG(abs(cosWo), alpha) * schlickG(abs(cosWi), alpha);
}

float GTR2Distrib(float cosTheta, float alpha) {
    if (cosTheta < 1e-6) {
        return 0.0;
    }
    float aa = alpha * alpha;
    float nom = aa;
    float denom = cosTheta * cosTheta * (aa - 1.0) + 1.0;
    denom = denom * denom * Pi;
    return nom / denom;
}

float GTR2Pdf(vec3 n, vec3 m, vec3 wo, float alpha) {
    return GTR2Distrib(dot(n, m), alpha) * schlickG(dot(n, wo), alpha) *
        absDot(m, wo) / absDot(n, wo);
}

vec3 GTR2Sample(vec3 n, vec3 wo, float alpha, vec2 r) {
    mat3 transMat = matLocalToWorld(n);
    mat3 transInv = inverse(transMat);

    vec3 vh = normalize((transInv * wo) * vec3(alpha, alpha, 1.0));

    float lenSq = vh.x * vh.x + vh.y * vh.y;
    vec3 t = lenSq > 0.0 ? vec3(-vh.y, vh.x, 0.0) / sqrt(lenSq) : vec3(1.0, 0.0, 0.0);
    vec3 b = cross(vh, t);

    vec2 p = toConcentricDisk(r);
    float s = 0.5 * (vh.z + 1.0);
    p.y = (1.0 - s) * sqrt(1.0 - p.x * p.x) + s * p.y;

    vec3 wh = t * p.x + b * p.y + vh * sqrt(max(0.0, 1.0 - dot(p, p)));
    wh = vec3(wh.x * alpha, wh.y * alpha, max(0.0, wh.z));
    return normalize(transMat * wh);
}

bool isGTR2Connectible(float roughness) {
    return roughness > 0.2;
}

bool isGTR2Delta(float roughness) {
    return roughness < 0.01;
}

bool refract(vec3 n, vec3 wi, float ior, out vec3 wt) {
    float cosIn = dot(n, wi);
    if (cosIn < 0) {
        ior = 1.0 / ior;
    }
    float sin2In = max(0.0, 1.0 - cosIn * cosIn);
    float sin2Tr = sin2In / (ior * ior);

    if (sin2Tr >= 1.0) {
        return false;
    }
    float cosTr = sqrt(1.0 - sin2Tr);
    if (cosIn < 0) {
        cosTr = -cosTr;
    }
    wt = normalize(-wi / ior + n * (cosIn / ior - cosTr));
    return true;
}

vec3 lambertBSDF(vec3 albedo, vec3 n, vec3 wi) {
	return albedo * PiInv;
}

float lambertPdf(vec3 n, vec3 wi) {
	return absDot(n, wi) * PiInv;
}

bool lambertSampleBSDF(vec3 albedo, vec3 n, vec2 r, out BSDFSample s) {
	s.wi = sampleCosineWeightedHemisphere(n, r);
	s.pdf = absDot(n, s.wi) * PiInv;
	s.bsdf = albedo * PiInv;
	s.type = Diffuse | Reflection;
	return true;
}

bool dielectricSampleBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 r, out BSDFSample s) {
    float pdfReflect = fresnel(dot(n, wo), mat.ior);
    s.bsdf = albedo;

    if (r.z < pdfReflect) {
        s.wi = reflect(-wo, n);
        s.type = Specular | Reflection;
        s.pdf = 1.0;
    }
    else {
        if (!refract(n, wo, mat.ior, s.wi)) {
            s.type = InvalidBSDFSample;
            return false;
        }
        if (dot(n, wo) < 0) {
            mat.ior = 1.0 / mat.ior;
        }
        s.bsdf /= mat.ior * mat.ior;
        s.type = Specular | Transmission;
        s.pdf = 1.0;
    }
    return true;
}

vec3 metallicWorkflowBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 wi) {
    float alpha = square(mat.roughness);
    vec3 wh = normalize(wo + wi);

    float cosO = dot(n, wo);
    float cosI = dot(n, wi);

    if (cosI * cosO < 1e-7) {
        return vec3(0.0);
    }

    vec3 f = fresnelSchlick(dot(wh, wo), mix(vec3(0.08), albedo, mat.metallic));
    float g = smithG(cosO, cosI, alpha);
    float d = GTR2Distrib(dot(n, wh), alpha);

    return mix(albedo * PiInv * (1.0 - mat.metallic), vec3(g * d / (4.0 * cosI * cosO)), f);
}

float metallicWorkflowPdf(Material mat, vec3 n, vec3 wo, vec3 wi) {
    vec3 wh = normalize(wo + wi);

    return mix(
        satDot(n, wi) * PiInv,
        GTR2Pdf(n, wh, wo, square(mat.roughness)) / (4.0 * absDot(wh, wo)),
        1.0 / (2.0 - mat.metallic)
    );
}

bool metallicWorkflowSampleBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 r, out BSDFSample s) {
    float alpha = square(mat.roughness);
    s.type = Reflection;

    if (r.z > (1.0 / (2.0 - mat.metallic))) {
        s.wi = sampleCosineWeightedHemisphere(n, r.xy);
        s.type |= Diffuse;
    }
    else {
        vec3 wh = GTR2Sample(n, wo, alpha, vec2(r));
        s.wi = -reflect(wo, wh);
        s.type |= isGTR2Delta(mat.roughness) ? Specular : Glossy;
    }

    if (dot(n, s.wi) < 0.0) {
        s.type = InvalidBSDFSample;
        return false;
    }
    else {
        s.bsdf = metallicWorkflowBSDF(mat, albedo, n, wo, s.wi);
        s.pdf = metallicWorkflowPdf(mat, n, wo, s.wi);
    }
    return true;
}

vec3 metalBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 wi) {
    if (isGTR2Delta(mat.roughness)) {
        return vec3(0.0);
    }

    float alpha = square(mat.roughness);
    vec3 wh = normalize(wo + wi);

    float cosO = dot(n, wo);
    float cosI = dot(n, wi);

    if (cosI * cosO < 1e-7) {
        return vec3(0.0);
    }

    float f = fresnelSchlick(absDot(wh, wo), mat.ior);
    float g = smithG(cosO, cosI, alpha);
    float d = GTR2Distrib(dot(n, wh), alpha);

    return albedo * f * g * d / (4.0 * cosI * cosO);
}

float metalPdf(Material mat, vec3 n, vec3 wo, vec3 wi) {
    vec3 wh = normalize(wo + wi);
    return GTR2Pdf(n, wh, wo, square(mat.roughness)) / (4.0 * absDot(wh, wo));
}

bool metalSampleBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 r, out BSDFSample s) {
    float alpha = square(mat.roughness);

    bool isDelta = isGTR2Delta(mat.roughness);

    if (isDelta) {
        s.wi = -reflect(wo, n);
    }
    else {
        vec3 wh = GTR2Sample(n, wo, alpha, r.xy);
        s.wi = -reflect(wo, wh);
    }

    if (dot(n, s.wi) < 0.0) {
        s.type = InvalidBSDFSample;
        return false;
    }
    else {
        s.bsdf = isDelta ? fresnelSchlick(absDot(n, wo), mat.ior) * albedo : metalBSDF(mat, albedo, n, wo, s.wi);
        s.pdf = isDelta ? 1.0 : metalPdf(mat, n, wo, s.wi);
        s.type = Reflection | (isDelta ? Specular : Glossy);
    }
    return true;
}

vec3 evalBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 wi) {
    switch (mat.type) {
    case Lambert:
        return lambertBSDF(albedo, n, wi);
    case MetallicWorkflow:
        return metallicWorkflowBSDF(mat, albedo, n, wo, wi);
    case Metal:
        return metalBSDF(mat, albedo, n, wo, wi);
    case Dielectric:
        return vec3(0.0);
    }
    return vec3(0.0);
}

float evalPdf(Material mat, vec3 n, vec3 wo, vec3 wi) {
    switch (mat.type) {
    case Lambert:
        return lambertPdf(n, wi);
    case MetallicWorkflow:
        return metallicWorkflowPdf(mat, n, wo, wi);
    case Metal:
        return metalPdf(mat, n, wo, wi);
    case Dielectric:
        return 0.0;
    }
    return 0.0;
}

bool sampleBSDF(Material mat, vec3 albedo, vec3 n, vec3 wo, vec3 r, out BSDFSample s) {
    switch (mat.type) {
    case Lambert:
        return lambertSampleBSDF(albedo, n, r.xy, s);
    case MetallicWorkflow:
        return metallicWorkflowSampleBSDF(mat, albedo, n, wo, r, s);
    case Metal:
        return metalSampleBSDF(mat, albedo, n, wo, r, s);
    case Dielectric:
        return dielectricSampleBSDF(mat, albedo, n, wo, r, s);
    }
    return false;
}

bool isBSDFDelta(Material mat) {
    switch (mat.type) {
    case Lambert:
        return false;
    case MetallicWorkflow:
        return (isGTR2Delta(mat.roughness) && mat.metallic > 0.95);
    case Metal:
        return isGTR2Delta(mat.roughness);
    case Dielectric:
        return true;
    }
    return true;
}

bool isBSDFConnectible(Material mat) {
    switch (mat.type) {
    case Lambert:
        return true;
    case MetallicWorkflow:
        return (isGTR2Connectible(mat.roughness) || mat.metallic < 0.95);
    case Metal:
        return isGTR2Connectible(mat.roughness);
    case Dielectric:
        return false;
    }
    return false;
}

bool isSampleTypeDelta(uint type) {
    return (type & Specular) == Specular;
}

#endif"
               OpSource GLSL 460 %9 "#ifndef MATH_GLSL
#define MATH_GLSL

const float Pi = 3.14159265358979323846;
const float PiInv = 1.0 / Pi;
const float Inf = 1.0 / 0.0;
const vec3 Black = vec3(0.0);

float sqr(float x) {
	return x * x;
}

float powerHeuristic(float pf, int fn, float pg, int gn) {
	float f = pf * float(fn);
	float g = pg * float(gn);
	return f * f / (f * f + g * g);
}

float powerHeuristic(float f, float g) {
	return f * f / (f * f + g * g);
}

vec2 toConcentricDisk(vec2 v) {
	if (v.x == 0.0 && v.y == 0.0) {
		return vec2(0.0, 0.0);
	}
	v = v * 2.0 - 1.0;
	float phi, r;

	if (v.x * v.x > v.y * v.y) {
		r = v.x;
		phi = Pi * v.y / v.x * 0.25;
	}
	else {
		r = v.y;
		phi = Pi * 0.5 - Pi * v.x / v.y * 0.25;
	}
	return vec2(r * cos(phi), r * sin(phi));
}

float satDot(vec3 a, vec3 b) {
	return max(dot(a, b), 0.0);
}

float absDot(vec3 a, vec3 b) {
	return abs(dot(a, b));
}

float distSqr(vec3 x, vec3 y) {
	return dot(x - y, x - y);
}

vec2 sphereToPlane(vec3 uv) {
	float theta = atan(uv.y, uv.x);

	if (theta < 0.0) {
		theta += Pi * 2.0;
	}
	float phi = atan(length(uv.xy), uv.z);
	return vec2(theta * PiInv * 0.5, phi * PiInv);
}

vec3 planeToSphere(vec2 uv) {
	float theta = uv.x * Pi * 2.0;
	float phi = uv.y * Pi;
	return vec3(cos(theta) * sin(phi), sin(theta) * sin(phi), cos(phi));
}

vec3 getTangent(vec3 n) {
	return (abs(n.z) > 0.999) ? vec3(0.0, 1.0, 0.0) : vec3(0.0, 0.0, 1.0);
}

mat3 matLocalToWorld(vec3 n) {
	vec3 t = getTangent(n);
	vec3 b = normalize(cross(n, t));
	t = cross(b, n);
	return mat3(t, b, n);
}

vec3 localToWorld(vec3 n, vec3 v)
{
	return normalize(matLocalToWorld(n) * v);
}

vec3 sampleCosineWeightedHemisphere(vec3 n, vec2 u) {
	vec2 uv = toConcentricDisk(u);
	float z = sqrt(1.0 - dot(uv, uv));
	return localToWorld(n, vec3(uv, z));
}

bool sameHemisphere(vec3 n, vec3 a, vec3 b) {
	return dot(n, a) * dot(n, b) > 0;
}

int maxExtent(vec3 v) {
	if (v.x > v.y) {
		return v.x > v.z ? 0 : 2;
	}
	else {
		return v.y > v.z ? 1 : 2;
	}
}

float maxComponent(vec3 v) {
	return max(v.x, max(v.y, v.z));
}

float angleBetween(vec3 x, vec3 y) {
	if (dot(x, y) < 0.0) {
		return Pi - 2.0 * asin(length(x + y) * 0.5);
	}
	else {
		return 2.0 * asin(length(y - x) * 0.5);
	}
}

vec3 sampleTriangleUniform(vec3 va, vec3 vb, vec3 vc, vec2 uv) {
	float r = sqrt(uv.y);
	float u = 1.0 - r;
	float v = uv.x * r;
	return va * (1.0 - u - v) + vb * u + vc * v;
}

float triangleArea(vec3 va, vec3 vb, vec3 vc) {
	return 0.5f * length(cross(vc - va, vb - va));
}

float triangleSphericalArea(vec3 a, vec3 b, vec3 c) {
	vec3 ab = cross(a, b);
	vec3 bc = cross(b, c);
	vec3 ca = cross(c, a);

	if (dot(ab, ab) == 0.0 || dot(bc, bc) == 0.0 || dot(ca, ca) == 0.0) {
		return 0.0;
	}
	ab = normalize(ab);
	bc = normalize(bc);
	ca = normalize(ca);

	float alpha = angleBetween(ab, -ca);
	float beta = angleBetween(bc, -ab);
	float gamma = angleBetween(ca, -bc);

	return abs(alpha + beta + gamma - Pi);
}

float triangleSolidAngle(vec3 a, vec3 b, vec3 c) {
	return triangleSphericalArea(a, b, c);
}

float triangleSolidAngle(vec3 va, vec3 vb, vec3 vc, vec3 p) {
	return triangleSolidAngle(normalize(va - p), normalize(vb - p), normalize(vc - p));
}

vec3 rotateZ(vec3 v, float angle) {
	float cost = cos(angle);
	float sint = sin(angle);
	return vec3(vec2(v.x * cost - v.y * sint, v.x * sint + v.y * cost), v.z);
}

float pow5(float x) {
	float x2 = x * x;
	return x2 * x2 * x;
}

float luminance(vec3 color) {
	return dot(color, vec3(0.299, 0.587, 0.114));
}

bool isBlack(vec3 color) {
	return luminance(color) < 1e-5f;
}

bool hasNan(vec3 color) {
	return isnan(color.x) || isnan(color.y) || isnan(color.z);
}

bool hasInf(vec3 color) {
	return isinf(color.x) || isinf(color.y) || isinf(color.z);
}

vec3 clampColor(vec3 color) {
	if (hasNan(color)) {
		return vec3(0.0);
	}
	return clamp(color, vec3(0.0), vec3(1e4));
}

vec3 colorWheel(float x) {
	const float Div = 1.0 / 4.0;

	if (x < Div) {
		return vec3(0.0, x / Div, 1.0);
	}
	else if (x < Div * 2) {
		return vec3(0.0, 1.0, 2.0 - x / Div);
	}
	else if (x < Div * 3) {
		return vec3(x / Div - 2.0, 1.0, 0.0);
	}
	else {
		return vec3(1.0, 4.0 - x / Div, 0.0);
	}
}

uint hash(uint a) {
	a = (a + 0x7ed55d16u) + (a << 12u);
	a = (a ^ 0xc761c23cu) ^ (a >> 19u);
	a = (a + 0x165667b1u) + (a << 5u);
	a = (a + 0xd3a2646cu) ^ (a << 9u);
	a = (a + 0xfd7046c5u) + (a << 3u);
	a = (a ^ 0xb55a4f09u) ^ (a >> 16u);
	return a;
}

uint hash2(uint seed) {
	seed = (seed ^ 61u) ^ (seed >> 16u);
	seed *= 9u;
	seed = seed ^ (seed >> 4u);
	seed *= 0x27d4eb2du;
	seed = seed ^ (seed >> 15u);
	return seed;
}

uint makeSeed(uint seed0, uint seed1, uint index) {
	return hash2((1u << 31u) | (seed1 << 22) | seed0) ^ hash2(index);
}

uint makeSeed(uint rand, uint index) {
	return hash2(rand) + hash2(index);
}

uint urand(inout uint rng) {
	return rng = hash2(rng);
}

float sample1f(inout uint rng) {
	return float(urand(rng)) / 4294967295.0;
}

vec2 sample2f(inout uint rng) {
	return vec2(sample1f(rng), sample1f(rng));
}

vec3 sample3f(inout uint rng) {
	return vec3(sample2f(rng), sample1f(rng));
}

vec4 sample4f(inout uint rng) {
	return vec4(sample2f(rng), sample2f(rng));
}

float MISWeight(float f, float g) {
	return (f * f) / (f * f + g * g);
}

uint ceilDiv(uint x, uint y) {
	return (x + y - 1) / y;
}

int ceilDiv(int x, int y) {
	return (x + y - 1) / y;
}

float square(float x) {
	return x * x;
}

#endif"
               OpSource GLSL 460 %10 "#ifndef RAYTRACING_LAYOUTS_GLSL
#define RAYTRACING_LAYOUTS_GLSL

#include \"layouts.glsl\"

const int ClosestHitPayloadLocation = 0;
const int ShadowPayloadLocation = 1;

const float MinRayDistance = 1e-4;
const float MaxRayDistance = 1e7;

const uint InvalidHitIndex = 0xffffffff;

struct Ray {
    vec3 ori;
    vec3 dir;
};

struct SurfaceInfo {
    vec3 pos;
    vec3 norm;
    vec3 albedo;
    uint matIndex;
    bool isLight;
};

layout(set = RayTracingDescSet, binding = 0) uniform accelerationStructureEXT uTLAS;

uint index1D(uvec2 index) {
    return uCamera.filmSize.x * index.y + index.x;
}

bool IntersectionIsValid(Intersection isec) {
    return isec.instanceIdx != InvalidHitIndex;
}

void loadLightSurfaceInfo(uint triangleIdx, vec3 bary, out SurfaceInfo info) {
    TriangleLight light = uTriangleLights[triangleIdx];

    info.pos = light.v0 * bary.x + light.v1 * bary.y + light.v2 * bary.z;
    info.norm = vec3(light.nx, light.ny, light.nz);
    info.albedo = light.radiance;
}

void loadObjectSurfaceInfo(uint instanceIdx, uint triangleIdx, vec3 bary, out SurfaceInfo info) {
    ObjectInstance instance = uObjectInstances[instanceIdx];

    info.matIndex = uMaterialIndices[instance.indexOffset / 3 + triangleIdx];

    uint i0 = uIndices[instance.indexOffset + triangleIdx * 3 + 0];
    uint i1 = uIndices[instance.indexOffset + triangleIdx * 3 + 1];
    uint i2 = uIndices[instance.indexOffset + triangleIdx * 3 + 2];

    MeshVertex v0 = uVertices[i0];
    MeshVertex v1 = uVertices[i1];
    MeshVertex v2 = uVertices[i2];

    vec3 pos = v0.pos * bary.x + v1.pos * bary.y + v2.pos * bary.z;
    vec3 norm = v0.norm * bary.x + v1.norm * bary.y + v2.norm * bary.z;
    float uvx = v0.uvx * bary.x + v1.uvx * bary.y + v2.uvx * bary.z;
    float uvy = v0.uvy * bary.x + v1.uvy * bary.y + v2.uvy * bary.z;

    info.pos = vec3(instance.transform * vec4(pos, 1.0));
    info.norm = normalize(vec3(instance.transformInvT * vec4(norm, 1.0)));

    uint texIdx = uMaterials[info.matIndex].textureIdx;

    if (texIdx == InvalidResourceIdx) {
        info.albedo = uMaterials[info.matIndex].baseColor;
    }
    else {
        info.albedo = texture(uTextures[nonuniformEXT(texIdx)], vec2(uvx, uvy)).rgb;
    }
    info.matIndex = info.matIndex;
}

void loadSurfaceInfo(uint instanceIdx, uint triangleIdx, vec2 bary, out SurfaceInfo info) {
    vec3 barycentrics = vec3(1.0 - bary.x - bary.y, bary.x, bary.y);

    if (instanceIdx == 0) {
        loadLightSurfaceInfo(triangleIdx, barycentrics, info);
        info.isLight = true;
    }
    else {
        loadObjectSurfaceInfo(instanceIdx - 1, triangleIdx, barycentrics, info);
        info.isLight = false;
    }
}

void loadSurfaceInfo(Intersection isec, out SurfaceInfo info) {
    loadSurfaceInfo(isec.instanceIdx, isec.triangleIdx, isec.bary, info);
}

vec3 fixRadiance(vec3 radiance) {
    if (isnan(radiance.x) || isnan(radiance.y) || isnan(radiance.z)) {
        return vec3(0.0);
    }
    return radiance;
}

#endif"
               OpSource GLSL 460 %11 "#ifndef RAY_QUERY_GLSL
#define RAY_QUERY_GLSL

#include \"ray_layouts.glsl\"

bool rayQueryTraceShadow(
    accelerationStructureEXT topLevelAccelStructure,
    uint rayFlags, uint rayMask,
    vec3 origin, float minDist, vec3 direction, float maxDist
) {
    rayQueryEXT rayQuery;

    rayQueryInitializeEXT(
        /* rayQueryEXT    */ rayQuery,
        /* top level AS   */ topLevelAccelStructure,
        /* flags, masks   */ rayFlags, rayMask,
        /* ray parameters */ origin, minDist, direction, maxDist
    );

    while (rayQueryProceedEXT(rayQuery)) {
        if (rayQueryGetIntersectionTypeEXT(rayQuery, false) == gl_RayQueryCandidateIntersectionTriangleEXT) {
            // Reserved for alpha test
        }
    }
    return (rayQueryGetIntersectionTypeEXT(rayQuery, true) != gl_RayQueryCommittedIntersectionNoneEXT);
}

Intersection rayQueryTraceClosestHit(
    accelerationStructureEXT topLevelAccelStructure,
    uint rayFlags, uint rayMask,
    vec3 origin, float minDist, vec3 direction, float maxDist
) {
    Intersection isec;
    rayQueryEXT rayQuery;

    rayQueryInitializeEXT(
        /* rayQueryEXT    */ rayQuery,
        /* top level AS   */ topLevelAccelStructure,
        /* flags, masks   */ rayFlags, rayMask,
        /* ray parameters */ origin, minDist, direction, maxDist
    );

    while (rayQueryProceedEXT(rayQuery)) {
        if (rayQueryGetIntersectionTypeEXT(rayQuery, false) == gl_RayQueryCandidateIntersectionTriangleEXT) {
            // Reserved for alpha test
        }
    }
    
    if (rayQueryGetIntersectionTypeEXT(rayQuery, true) != gl_RayQueryCommittedIntersectionNoneEXT) {
        isec.bary = rayQueryGetIntersectionBarycentricsEXT(rayQuery, true).xy;
        isec.instanceIdx = rayQueryGetIntersectionInstanceCustomIndexEXT(rayQuery, true);
        isec.triangleIdx = rayQueryGetIntersectionPrimitiveIndexEXT(rayQuery, true);
    }
    else {
        isec.instanceIdx = InvalidHitIndex;
    }
    return isec;
}

#endif"
               OpSourceExtension "GL_EXT_nonuniform_qualifier"
               OpSourceExtension "GL_EXT_ray_query"
               OpSourceExtension "GL_EXT_ray_tracing"
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %Intersection "Intersection"
               OpMemberName %Intersection 0 "bary"
               OpMemberName %Intersection 1 "instanceIdx"
               OpMemberName %Intersection 2 "triangleIdx"
               OpName %IntersectionIsValid_struct_Intersection_vf2_u1_u11_ "IntersectionIsValid(struct-Intersection-vf2-u1-u11;"
               OpName %isec "isec"
               OpName %SurfaceInfo "SurfaceInfo"
               OpMemberName %SurfaceInfo 0 "pos"
               OpMemberName %SurfaceInfo 1 "norm"
               OpMemberName %SurfaceInfo 2 "albedo"
               OpMemberName %SurfaceInfo 3 "matIndex"
               OpMemberName %SurfaceInfo 4 "isLight"
               OpName %loadLightSurfaceInfo_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ "loadLightSurfaceInfo(u1;vf3;struct-SurfaceInfo-vf3-vf3-vf3-u1-b11;"
               OpName %triangleIdx "triangleIdx"
               OpName %bary "bary"
               OpName %info "info"
               OpName %loadObjectSurfaceInfo_u1_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ "loadObjectSurfaceInfo(u1;u1;vf3;struct-SurfaceInfo-vf3-vf3-vf3-u1-b11;"
               OpName %instanceIdx "instanceIdx"
               OpName %triangleIdx_0 "triangleIdx"
               OpName %bary_0 "bary"
               OpName %info_0 "info"
               OpName %loadSurfaceInfo_u1_u1_vf2_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ "loadSurfaceInfo(u1;u1;vf2;struct-SurfaceInfo-vf3-vf3-vf3-u1-b11;"
               OpName %instanceIdx_0 "instanceIdx"
               OpName %triangleIdx_1 "triangleIdx"
               OpName %bary_1 "bary"
               OpName %info_1 "info"
               OpName %loadSurfaceInfo_struct_Intersection_vf2_u1_u11_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ "loadSurfaceInfo(struct-Intersection-vf2-u1-u11;struct-SurfaceInfo-vf3-vf3-vf3-u1-b11;"
               OpName %isec_0 "isec"
               OpName %info_2 "info"
               OpName %rayQueryTraceShadow_as1_u1_u1_vf3_f1_vf3_f1_ "rayQueryTraceShadow(as1;u1;u1;vf3;f1;vf3;f1;"
               OpName %topLevelAccelStructure "topLevelAccelStructure"
               OpName %rayFlags "rayFlags"
               OpName %rayMask "rayMask"
               OpName %origin "origin"
               OpName %minDist "minDist"
               OpName %direction "direction"
               OpName %maxDist "maxDist"
               OpName %rayQueryTraceClosestHit_as1_u1_u1_vf3_f1_vf3_f1_ "rayQueryTraceClosestHit(as1;u1;u1;vf3;f1;vf3;f1;"
               OpName %topLevelAccelStructure_0 "topLevelAccelStructure"
               OpName %rayFlags_0 "rayFlags"
               OpName %rayMask_0 "rayMask"
               OpName %origin_0 "origin"
               OpName %minDist_0 "minDist"
               OpName %direction_0 "direction"
               OpName %maxDist_0 "maxDist"
               OpName %toConcentricDisk_vf2_ "toConcentricDisk(vf2;"
               OpName %v "v"
               OpName %satDot_vf3_vf3_ "satDot(vf3;vf3;"
               OpName %a "a"
               OpName %b "b"
               OpName %absDot_vf3_vf3_ "absDot(vf3;vf3;"
               OpName %a_0 "a"
               OpName %b_0 "b"
               OpName %getTangent_vf3_ "getTangent(vf3;"
               OpName %n "n"
               OpName %matLocalToWorld_vf3_ "matLocalToWorld(vf3;"
               OpName %n_0 "n"
               OpName %localToWorld_vf3_vf3_ "localToWorld(vf3;vf3;"
               OpName %n_1 "n"
               OpName %v_0 "v"
               OpName %sampleCosineWeightedHemisphere_vf3_vf2_ "sampleCosineWeightedHemisphere(vf3;vf2;"
               OpName %n_2 "n"
               OpName %u "u"
               OpName %sampleTriangleUniform_vf3_vf3_vf3_vf2_ "sampleTriangleUniform(vf3;vf3;vf3;vf2;"
               OpName %va "va"
               OpName %vb "vb"
               OpName %vc "vc"
               OpName %uv "uv"
               OpName %pow5_f1_ "pow5(f1;"
               OpName %x "x"
               OpName %luminance_vf3_ "luminance(vf3;"
               OpName %color "color"
               OpName %hasNan_vf3_ "hasNan(vf3;"
               OpName %color_0 "color"
               OpName %clampColor_vf3_ "clampColor(vf3;"
               OpName %color_1 "color"
               OpName %colorWheel_f1_ "colorWheel(f1;"
               OpName %x_0 "x"
               OpName %hash2_u1_ "hash2(u1;"
               OpName %seed "seed"
               OpName %makeSeed_u1_u1_ "makeSeed(u1;u1;"
               OpName %rand "rand"
               OpName %index "index"
               OpName %urand_u1_ "urand(u1;"
               OpName %rng "rng"
               OpName %sample1f_u1_ "sample1f(u1;"
               OpName %rng_0 "rng"
               OpName %sample2f_u1_ "sample2f(u1;"
               OpName %rng_1 "rng"
               OpName %sample3f_u1_ "sample3f(u1;"
               OpName %rng_2 "rng"
               OpName %sample4f_u1_ "sample4f(u1;"
               OpName %rng_3 "rng"
               OpName %MISWeight_f1_f1_ "MISWeight(f1;f1;"
               OpName %f "f"
               OpName %g "g"
               OpName %square_f1_ "square(f1;"
               OpName %x_1 "x"
               OpName %Camera "Camera"
               OpMemberName %Camera 0 "view"
               OpMemberName %Camera 1 "proj"
               OpMemberName %Camera 2 "projView"
               OpMemberName %Camera 3 "lastProjView"
               OpMemberName %Camera 4 "pos"
               OpMemberName %Camera 5 "FOV"
               OpMemberName %Camera 6 "angle"
               OpMemberName %Camera 7 "near"
               OpMemberName %Camera 8 "front"
               OpMemberName %Camera 9 "far"
               OpMemberName %Camera 10 "right"
               OpMemberName %Camera 11 "lensRadius"
               OpMemberName %Camera 12 "up"
               OpMemberName %Camera 13 "focalDist"
               OpMemberName %Camera 14 "filmSize"
               OpMemberName %Camera 15 "frameIndex"
               OpMemberName %Camera 16 "seed"
               OpName %Ray "Ray"
               OpMemberName %Ray 0 "ori"
               OpMemberName %Ray 1 "dir"
               OpName %pinholeCameraSampleRay_struct_Camera_mf44_mf44_mf44_mf44_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vu2_u1_u11_vf2_vf2_ "pinholeCameraSampleRay(struct-Camera-mf44-mf44-mf44-mf44-vf3-f1-vf3-f1-vf3-f1-vf3-f1-vf3-f1-vu2-u1-u11;vf2;vf2;"
               OpName %cam "cam"
               OpName %uv_0 "uv"
               OpName %r "r"
               OpName %unpackAlbedo_u1_ "unpackAlbedo(u1;"
               OpName %packed "packed"
               OpName %TriangleLight "TriangleLight"
               OpMemberName %TriangleLight 0 "v0"
               OpMemberName %TriangleLight 1 "nx"
               OpMemberName %TriangleLight 2 "v1"
               OpMemberName %TriangleLight 3 "ny"
               OpMemberName %TriangleLight 4 "v2"
               OpMemberName %TriangleLight 5 "nz"
               OpMemberName %TriangleLight 6 "radiance"
               OpMemberName %TriangleLight 7 "area"
               OpName %sampleTriangleLight_struct_TriangleLight_vf3_f1_vf3_f1_vf3_f1_vf3_f11_vf3_vf3_f1_f1_vf2_ "sampleTriangleLight(struct-TriangleLight-vf3-f1-vf3-f1-vf3-f1-vf3-f11;vf3;vf3;f1;f1;vf2;"
               OpName %light "light"
               OpName %ref "ref"
               OpName %wi "wi"
               OpName %dist "dist"
               OpName %pdf "pdf"
               OpName %r_0 "r"
               OpName %sampleLightUniform_vf3_vf3_f1_f1_vf4_ "sampleLightUniform(vf3;vf3;f1;f1;vf4;"
               OpName %ref_0 "ref"
               OpName %wi_0 "wi"
               OpName %dist_0 "dist"
               OpName %pdf_0 "pdf"
               OpName %r_1 "r"
               OpName %sampleLight_vf3_vf3_f1_f1_u1_ "sampleLight(vf3;vf3;f1;f1;u1;"
               OpName %ref_1 "ref"
               OpName %wi_1 "wi"
               OpName %dist_1 "dist"
               OpName %pdf_1 "pdf"
               OpName %rng_4 "rng"
               OpName %fresnelSchlick_f1_f1_ "fresnelSchlick(f1;f1;"
               OpName %cosTheta "cosTheta"
               OpName %ior "ior"
               OpName %fresnelSchlick_f1_vf3_ "fresnelSchlick(f1;vf3;"
               OpName %cosTheta_0 "cosTheta"
               OpName %f0 "f0"
               OpName %fresnel_f1_f1_ "fresnel(f1;f1;"
               OpName %cosIn "cosIn"
               OpName %ior_0 "ior"
               OpName %schlickG_f1_f1_ "schlickG(f1;f1;"
               OpName %cosTheta_1 "cosTheta"
               OpName %alpha "alpha"
               OpName %smithG_f1_f1_f1_ "smithG(f1;f1;f1;"
               OpName %cosWo "cosWo"
               OpName %cosWi "cosWi"
               OpName %alpha_0 "alpha"
               OpName %GTR2Distrib_f1_f1_ "GTR2Distrib(f1;f1;"
               OpName %cosTheta_2 "cosTheta"
               OpName %alpha_1 "alpha"
               OpName %GTR2Pdf_vf3_vf3_vf3_f1_ "GTR2Pdf(vf3;vf3;vf3;f1;"
               OpName %n_3 "n"
               OpName %m "m"
               OpName %wo "wo"
               OpName %alpha_2 "alpha"
               OpName %GTR2Sample_vf3_vf3_f1_vf2_ "GTR2Sample(vf3;vf3;f1;vf2;"
               OpName %n_4 "n"
               OpName %wo_0 "wo"
               OpName %alpha_3 "alpha"
               OpName %r_2 "r"
               OpName %isGTR2Connectible_f1_ "isGTR2Connectible(f1;"
               OpName %roughness "roughness"
               OpName %isGTR2Delta_f1_ "isGTR2Delta(f1;"
               OpName %roughness_0 "roughness"
               OpName %refract_vf3_vf3_f1_vf3_ "refract(vf3;vf3;f1;vf3;"
               OpName %n_5 "n"
               OpName %wi_2 "wi"
               OpName %ior_1 "ior"
               OpName %wt "wt"
               OpName %lambertBSDF_vf3_vf3_vf3_ "lambertBSDF(vf3;vf3;vf3;"
               OpName %albedo "albedo"
               OpName %n_6 "n"
               OpName %wi_3 "wi"
               OpName %BSDFSample "BSDFSample"
               OpMemberName %BSDFSample 0 "wi"
               OpMemberName %BSDFSample 1 "pdf"
               OpMemberName %BSDFSample 2 "bsdf"
               OpMemberName %BSDFSample 3 "type"
               OpName %lambertSampleBSDF_vf3_vf3_vf2_struct_BSDFSample_vf3_f1_vf3_u11_ "lambertSampleBSDF(vf3;vf3;vf2;struct-BSDFSample-vf3-f1-vf3-u11;"
               OpName %albedo_0 "albedo"
               OpName %n_7 "n"
               OpName %r_3 "r"
               OpName %s "s"
               OpName %Material "Material"
               OpMemberName %Material 0 "baseColor"
               OpMemberName %Material 1 "type"
               OpMemberName %Material 2 "textureIdx"
               OpMemberName %Material 3 "metallic"
               OpMemberName %Material 4 "roughness"
               OpMemberName %Material 5 "ior"
               OpName %dielectricSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ "dielectricSampleBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;struct-BSDFSample-vf3-f1-vf3-u11;"
               OpName %mat "mat"
               OpName %albedo_1 "albedo"
               OpName %n_8 "n"
               OpName %wo_1 "wo"
               OpName %r_4 "r"
               OpName %s_0 "s"
               OpName %metallicWorkflowBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ "metallicWorkflowBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;"
               OpName %mat_0 "mat"
               OpName %albedo_2 "albedo"
               OpName %n_9 "n"
               OpName %wo_2 "wo"
               OpName %wi_4 "wi"
               OpName %metallicWorkflowPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ "metallicWorkflowPdf(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;"
               OpName %mat_1 "mat"
               OpName %n_10 "n"
               OpName %wo_3 "wo"
               OpName %wi_5 "wi"
               OpName %metallicWorkflowSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ "metallicWorkflowSampleBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;struct-BSDFSample-vf3-f1-vf3-u11;"
               OpName %mat_2 "mat"
               OpName %albedo_3 "albedo"
               OpName %n_11 "n"
               OpName %wo_4 "wo"
               OpName %r_5 "r"
               OpName %s_1 "s"
               OpName %metalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ "metalBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;"
               OpName %mat_3 "mat"
               OpName %albedo_4 "albedo"
               OpName %n_12 "n"
               OpName %wo_5 "wo"
               OpName %wi_6 "wi"
               OpName %metalPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ "metalPdf(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;"
               OpName %mat_4 "mat"
               OpName %n_13 "n"
               OpName %wo_6 "wo"
               OpName %wi_7 "wi"
               OpName %metalSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ "metalSampleBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;struct-BSDFSample-vf3-f1-vf3-u11;"
               OpName %mat_5 "mat"
               OpName %albedo_5 "albedo"
               OpName %n_14 "n"
               OpName %wo_7 "wo"
               OpName %r_6 "r"
               OpName %s_2 "s"
               OpName %evalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ "evalBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;"
               OpName %mat_6 "mat"
               OpName %albedo_6 "albedo"
               OpName %n_15 "n"
               OpName %wo_8 "wo"
               OpName %wi_8 "wi"
               OpName %sampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ "sampleBSDF(struct-Material-vf3-u1-u1-f1-f1-f11;vf3;vf3;vf3;vf3;struct-BSDFSample-vf3-f1-vf3-u11;"
               OpName %mat_7 "mat"
               OpName %albedo_7 "albedo"
               OpName %n_16 "n"
               OpName %wo_9 "wo"
               OpName %r_7 "r"
               OpName %s_3 "s"
               OpName %isBSDFDelta_struct_Material_vf3_u1_u1_f1_f1_f11_ "isBSDFDelta(struct-Material-vf3-u1-u1-f1-f1-f11;"
               OpName %mat_8 "mat"
               OpName %isBSDFConnectible_struct_Material_vf3_u1_u1_f1_f1_f11_ "isBSDFConnectible(struct-Material-vf3-u1-u1-f1-f1-f11;"
               OpName %mat_9 "mat"
               OpName %isSampleTypeDelta_u1_ "isSampleTypeDelta(u1;"
               OpName %type "type"
               OpName %GRISPathFlagsGetRcVertexId_u1_ "GRISPathFlagsGetRcVertexId(u1;"
               OpName %flags "flags"
               OpName %GRISPathFlagsSetRcVertexId_u1_u1_ "GRISPathFlagsSetRcVertexId(u1;u1;"
               OpName %flags_0 "flags"
               OpName %id "id"
               OpName %light_0 "light"
               OpName %TriangleLight_0 "TriangleLight"
               OpMemberName %TriangleLight_0 0 "v0"
               OpMemberName %TriangleLight_0 1 "nx"
               OpMemberName %TriangleLight_0 2 "v1"
               OpMemberName %TriangleLight_0 3 "ny"
               OpMemberName %TriangleLight_0 4 "v2"
               OpMemberName %TriangleLight_0 5 "nz"
               OpMemberName %TriangleLight_0 6 "radiance"
               OpMemberName %TriangleLight_0 7 "area"
               OpName %_TriangleLights "_TriangleLights"
               OpMemberName %_TriangleLights 0 "uTriangleLights"
               OpName %_ ""
               OpName %ObjectInstance "ObjectInstance"
               OpMemberName %ObjectInstance 0 "transform"
               OpMemberName %ObjectInstance 1 "transformInv"
               OpMemberName %ObjectInstance 2 "transformInvT"
               OpMemberName %ObjectInstance 3 "radiance"
               OpMemberName %ObjectInstance 4 "pad0"
               OpMemberName %ObjectInstance 5 "indexOffset"
               OpMemberName %ObjectInstance 6 "indexCount"
               OpMemberName %ObjectInstance 7 "pad1"
               OpMemberName %ObjectInstance 8 "pad2"
               OpName %instance "instance"
               OpName %ObjectInstance_0 "ObjectInstance"
               OpMemberName %ObjectInstance_0 0 "transform"
               OpMemberName %ObjectInstance_0 1 "transformInv"
               OpMemberName %ObjectInstance_0 2 "transformInvT"
               OpMemberName %ObjectInstance_0 3 "radiance"
               OpMemberName %ObjectInstance_0 4 "pad0"
               OpMemberName %ObjectInstance_0 5 "indexOffset"
               OpMemberName %ObjectInstance_0 6 "indexCount"
               OpMemberName %ObjectInstance_0 7 "pad1"
               OpMemberName %ObjectInstance_0 8 "pad2"
               OpName %_ObjectInstances "_ObjectInstances"
               OpMemberName %_ObjectInstances 0 "uObjectInstances"
               OpName %__0 ""
               OpName %_MaterialIndices "_MaterialIndices"
               OpMemberName %_MaterialIndices 0 "uMaterialIndices"
               OpName %__1 ""
               OpName %i0 "i0"
               OpName %_Indices "_Indices"
               OpMemberName %_Indices 0 "uIndices"
               OpName %__2 ""
               OpName %i1 "i1"
               OpName %i2 "i2"
               OpName %MeshVertex "MeshVertex"
               OpMemberName %MeshVertex 0 "pos"
               OpMemberName %MeshVertex 1 "uvx"
               OpMemberName %MeshVertex 2 "norm"
               OpMemberName %MeshVertex 3 "uvy"
               OpName %v0 "v0"
               OpName %MeshVertex_0 "MeshVertex"
               OpMemberName %MeshVertex_0 0 "pos"
               OpMemberName %MeshVertex_0 1 "uvx"
               OpMemberName %MeshVertex_0 2 "norm"
               OpMemberName %MeshVertex_0 3 "uvy"
               OpName %_Vertices "_Vertices"
               OpMemberName %_Vertices 0 "uVertices"
               OpName %__3 ""
               OpName %v1 "v1"
               OpName %v2 "v2"
               OpName %pos "pos"
               OpName %norm "norm"
               OpName %uvx "uvx"
               OpName %uvy "uvy"
               OpName %texIdx "texIdx"
               OpName %Material_0 "Material"
               OpMemberName %Material_0 0 "baseColor"
               OpMemberName %Material_0 1 "type"
               OpMemberName %Material_0 2 "textureIdx"
               OpMemberName %Material_0 3 "metallic"
               OpMemberName %Material_0 4 "roughness"
               OpMemberName %Material_0 5 "ior"
               OpName %_Materials "_Materials"
               OpMemberName %_Materials 0 "uMaterials"
               OpName %__4 ""
               OpName %uTextures "uTextures"
               OpName %barycentrics "barycentrics"
               OpName %param "param"
               OpName %param_0 "param"
               OpName %param_1 "param"
               OpName %param_2 "param"
               OpName %param_3 "param"
               OpName %param_4 "param"
               OpName %param_5 "param"
               OpName %param_6 "param"
               OpName %param_7 "param"
               OpName %param_8 "param"
               OpName %param_9 "param"
               OpName %rayQuery "rayQuery"
               OpName %rayQuery_0 "rayQuery"
               OpName %isec_1 "isec"
               OpName %r_8 "r"
               OpName %phi "phi"
               OpName %t "t"
               OpName %param_10 "param"
               OpName %b_1 "b"
               OpName %param_11 "param"
               OpName %uv_1 "uv"
               OpName %param_12 "param"
               OpName %z "z"
               OpName %param_13 "param"
               OpName %param_14 "param"
               OpName %r_9 "r"
               OpName %u_0 "u"
               OpName %v_1 "v"
               OpName %x2 "x2"
               OpName %param_15 "param"
               OpName %param_16 "param"
               OpName %param_17 "param"
               OpName %param_18 "param"
               OpName %param_19 "param"
               OpName %param_20 "param"
               OpName %param_21 "param"
               OpName %param_22 "param"
               OpName %param_23 "param"
               OpName %param_24 "param"
               OpName %param_25 "param"
               OpName %texelSize "texelSize"
               OpName %biasedCoord "biasedCoord"
               OpName %ndc "ndc"
               OpName %aspect "aspect"
               OpName %tanFOV "tanFOV"
               OpName %pFocusPlane "pFocusPlane"
               OpName %ori "ori"
               OpName %dir "dir"
               OpName %pos_0 "pos"
               OpName %param_26 "param"
               OpName %param_27 "param"
               OpName %param_28 "param"
               OpName %param_29 "param"
               OpName %n_17 "n"
               OpName %param_30 "param"
               OpName %param_31 "param"
               OpName %numLights "numLights"
               OpName %LightSampleTableElement "LightSampleTableElement"
               OpMemberName %LightSampleTableElement 0 "prob"
               OpMemberName %LightSampleTableElement 1 "failId"
               OpName %_LightSampleTable "_LightSampleTable"
               OpMemberName %_LightSampleTable 0 "uLightSampleTable"
               OpName %__5 ""
               OpName %idx "idx"
               OpName %light_1 "light"
               OpName %radiance "radiance"
               OpName %param_32 "param"
               OpName %param_33 "param"
               OpName %param_34 "param"
               OpName %param_35 "param"
               OpName %param_36 "param"
               OpName %param_37 "param"
               OpName %param_38 "param"
               OpName %param_39 "param"
               OpName %param_40 "param"
               OpName %param_41 "param"
               OpName %param_42 "param"
               OpName %param_43 "param"
               OpName %f0_0 "f0"
               OpName %param_44 "param"
               OpName %param_45 "param"
               OpName %sinIn "sinIn"
               OpName %sinTr "sinTr"
               OpName %cosTr "cosTr"
               OpName %param_46 "param"
               OpName %param_47 "param"
               OpName %a_1 "a"
               OpName %param_48 "param"
               OpName %param_49 "param"
               OpName %param_50 "param"
               OpName %param_51 "param"
               OpName %aa "aa"
               OpName %nom "nom"
               OpName %denom "denom"
               OpName %param_52 "param"
               OpName %param_53 "param"
               OpName %param_54 "param"
               OpName %param_55 "param"
               OpName %param_56 "param"
               OpName %param_57 "param"
               OpName %param_58 "param"
               OpName %param_59 "param"
               OpName %transMat "transMat"
               OpName %param_60 "param"
               OpName %transInv "transInv"
               OpName %vh "vh"
               OpName %lenSq "lenSq"
               OpName %t_0 "t"
               OpName %b_2 "b"
               OpName %p "p"
               OpName %param_61 "param"
               OpName %s_4 "s"
               OpName %wh "wh"
               OpName %cosIn_0 "cosIn"
               OpName %sin2In "sin2In"
               OpName %sin2Tr "sin2Tr"
               OpName %cosTr_0 "cosTr"
               OpName %param_62 "param"
               OpName %param_63 "param"
               OpName %param_64 "param"
               OpName %param_65 "param"
               OpName %pdfReflect "pdfReflect"
               OpName %param_66 "param"
               OpName %param_67 "param"
               OpName %param_68 "param"
               OpName %param_69 "param"
               OpName %param_70 "param"
               OpName %param_71 "param"
               OpName %alpha_4 "alpha"
               OpName %param_72 "param"
               OpName %wh_0 "wh"
               OpName %cosO "cosO"
               OpName %cosI "cosI"
               OpName %f_0 "f"
               OpName %param_73 "param"
               OpName %param_74 "param"
               OpName %g_0 "g"
               OpName %param_75 "param"
               OpName %param_76 "param"
               OpName %param_77 "param"
               OpName %d "d"
               OpName %param_78 "param"
               OpName %param_79 "param"
               OpName %wh_1 "wh"
               OpName %param_80 "param"
               OpName %param_81 "param"
               OpName %param_82 "param"
               OpName %param_83 "param"
               OpName %param_84 "param"
               OpName %param_85 "param"
               OpName %param_86 "param"
               OpName %param_87 "param"
               OpName %param_88 "param"
               OpName %alpha_5 "alpha"
               OpName %param_89 "param"
               OpName %param_90 "param"
               OpName %param_91 "param"
               OpName %wh_2 "wh"
               OpName %param_92 "param"
               OpName %param_93 "param"
               OpName %param_94 "param"
               OpName %param_95 "param"
               OpName %param_96 "param"
               OpName %param_97 "param"
               OpName %param_98 "param"
               OpName %param_99 "param"
               OpName %param_100 "param"
               OpName %param_101 "param"
               OpName %param_102 "param"
               OpName %param_103 "param"
               OpName %param_104 "param"
               OpName %param_105 "param"
               OpName %param_106 "param"
               OpName %alpha_6 "alpha"
               OpName %param_107 "param"
               OpName %wh_3 "wh"
               OpName %cosO_0 "cosO"
               OpName %cosI_0 "cosI"
               OpName %f_1 "f"
               OpName %param_108 "param"
               OpName %param_109 "param"
               OpName %param_110 "param"
               OpName %param_111 "param"
               OpName %g_1 "g"
               OpName %param_112 "param"
               OpName %param_113 "param"
               OpName %param_114 "param"
               OpName %d_0 "d"
               OpName %param_115 "param"
               OpName %param_116 "param"
               OpName %wh_4 "wh"
               OpName %param_117 "param"
               OpName %param_118 "param"
               OpName %param_119 "param"
               OpName %param_120 "param"
               OpName %param_121 "param"
               OpName %param_122 "param"
               OpName %param_123 "param"
               OpName %alpha_7 "alpha"
               OpName %param_124 "param"
               OpName %isDelta "isDelta"
               OpName %param_125 "param"
               OpName %wh_5 "wh"
               OpName %param_126 "param"
               OpName %param_127 "param"
               OpName %param_128 "param"
               OpName %param_129 "param"
               OpName %param_130 "param"
               OpName %param_131 "param"
               OpName %param_132 "param"
               OpName %param_133 "param"
               OpName %param_134 "param"
               OpName %param_135 "param"
               OpName %param_136 "param"
               OpName %param_137 "param"
               OpName %param_138 "param"
               OpName %param_139 "param"
               OpName %param_140 "param"
               OpName %param_141 "param"
               OpName %param_142 "param"
               OpName %param_143 "param"
               OpName %param_144 "param"
               OpName %param_145 "param"
               OpName %param_146 "param"
               OpName %param_147 "param"
               OpName %param_148 "param"
               OpName %param_149 "param"
               OpName %param_150 "param"
               OpName %param_151 "param"
               OpName %param_152 "param"
               OpName %param_153 "param"
               OpName %param_154 "param"
               OpName %param_155 "param"
               OpName %param_156 "param"
               OpName %param_157 "param"
               OpName %param_158 "param"
               OpName %param_159 "param"
               OpName %param_160 "param"
               OpName %param_161 "param"
               OpName %param_162 "param"
               OpName %param_163 "param"
               OpName %param_164 "param"
               OpName %param_165 "param"
               OpName %param_166 "param"
               OpName %param_167 "param"
               OpName %param_168 "param"
               OpName %param_169 "param"
               OpName %param_170 "param"
               OpName %param_171 "param"
               OpName %param_172 "param"
               OpName %param_173 "param"
               OpName %param_174 "param"
               OpName %param_175 "param"
               OpName %param_176 "param"
               OpName %param_177 "param"
               OpName %param_178 "param"
               OpName %param_179 "param"
               OpName %param_180 "param"
               OpName %param_181 "param"
               OpName %threadIdx "threadIdx"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %launchDim "launchDim"
               OpName %Camera_0 "Camera"
               OpMemberName %Camera_0 0 "view"
               OpMemberName %Camera_0 1 "proj"
               OpMemberName %Camera_0 2 "projView"
               OpMemberName %Camera_0 3 "lastProjView"
               OpMemberName %Camera_0 4 "pos"
               OpMemberName %Camera_0 5 "FOV"
               OpMemberName %Camera_0 6 "angle"
               OpMemberName %Camera_0 7 "near"
               OpMemberName %Camera_0 8 "front"
               OpMemberName %Camera_0 9 "far"
               OpMemberName %Camera_0 10 "right"
               OpMemberName %Camera_0 11 "lensRadius"
               OpMemberName %Camera_0 12 "up"
               OpMemberName %Camera_0 13 "focalDist"
               OpMemberName %Camera_0 14 "filmSize"
               OpMemberName %Camera_0 15 "frameIndex"
               OpMemberName %Camera_0 16 "seed"
               OpName %_Camera "_Camera"
               OpMemberName %_Camera 0 "uCamera"
               OpMemberName %_Camera 1 "uPrevCamera"
               OpName %__6 ""
               OpName %uv_2 "uv"
               OpName %depthNormal "depthNormal"
               OpName %uDepthNormal "uDepthNormal"
               OpName %depth "depth"
               OpName %norm_0 "norm"
               OpName %uIndirectOutput "uIndirectOutput"
               OpName %albedoMatId "albedoMatId"
               OpName %uAlbedoMatId "uAlbedoMatId"
               OpName %albedo_8 "albedo"
               OpName %param_182 "param"
               OpName %matMeshId "matMeshId"
               OpName %matId "matId"
               OpName %ray "ray"
               OpName %param_183 "param"
               OpName %param_184 "param"
               OpName %param_185 "param"
               OpName %rng_5 "rng"
               OpName %param_186 "param"
               OpName %param_187 "param"
               OpName %radiance_0 "radiance"
               OpName %throughput "throughput"
               OpName %wo_10 "wo"
               OpName %isLastVertexConnectible "isLastVertexConnectible"
               OpName %rcVertexFound "rcVertexFound"
               OpName %rcVertexThroughput "rcVertexThroughput"
               OpName %surf "surf"
               OpName %mat_10 "mat"
               OpName %GRISPathSample "GRISPathSample"
               OpMemberName %GRISPathSample 0 "rcVertexIsec"
               OpMemberName %GRISPathSample 1 "rcVertexRadiance"
               OpMemberName %GRISPathSample 2 "rcVertexLightPdf"
               OpMemberName %GRISPathSample 3 "rcVertexWi"
               OpMemberName %GRISPathSample 4 "rcVertexRng"
               OpMemberName %GRISPathSample 5 "rcVertexCachedJacobian"
               OpMemberName %GRISPathSample 6 "primaryHitRng"
               OpMemberName %GRISPathSample 7 "F"
               OpMemberName %GRISPathSample 8 "pathFlags"
               OpName %pathSample "pathSample"
               OpName %bounce "bounce"
               OpName %isec_2 "isec"
               OpName %uTLAS "uTLAS"
               OpName %param_188 "param"
               OpName %param_189 "param"
               OpName %param_190 "param"
               OpName %param_191 "param"
               OpName %param_192 "param"
               OpName %param_193 "param"
               OpName %param_194 "param"
               OpName %param_195 "param"
               OpName %param_196 "param"
               OpName %cosTheta_3 "cosTheta"
               OpName %weight "weight"
               OpName %s_5 "s"
               OpName %param_197 "param"
               OpName %dist_2 "dist"
               OpName %lastPos "lastPos"
               OpName %sumPower "sumPower"
               OpName %lightPdf "lightPdf"
               OpName %param_198 "param"
               OpName %param_199 "param"
               OpName %param_200 "param"
               OpName %param_201 "param"
               OpName %isThisVertexConnectible "isThisVertexConnectible"
               OpName %param_202 "param"
               OpName %param_203 "param"
               OpName %param_204 "param"
               OpName %param_205 "param"
               OpName %lightRadiance "lightRadiance"
               OpName %lightDir "lightDir"
               OpName %lightDist "lightDist"
               OpName %lightPdf_0 "lightPdf"
               OpName %param_206 "param"
               OpName %param_207 "param"
               OpName %param_208 "param"
               OpName %param_209 "param"
               OpName %param_210 "param"
               OpName %shadowed "shadowed"
               OpName %param_211 "param"
               OpName %param_212 "param"
               OpName %param_213 "param"
               OpName %param_214 "param"
               OpName %param_215 "param"
               OpName %param_216 "param"
               OpName %bsdfPdf "bsdfPdf"
               OpName %param_217 "param"
               OpName %param_218 "param"
               OpName %weight_0 "weight"
               OpName %param_219 "param"
               OpName %param_220 "param"
               OpName %lightTerms "lightTerms"
               OpName %param_221 "param"
               OpName %param_222 "param"
               OpName %param_223 "param"
               OpName %param_224 "param"
               OpName %param_225 "param"
               OpName %param_226 "param"
               OpName %param_227 "param"
               OpName %pdfTerminate "pdfTerminate"
               OpName %param_228 "param"
               OpName %param_229 "param"
               OpName %param_230 "param"
               OpName %param_231 "param"
               OpName %param_232 "param"
               OpName %param_233 "param"
               OpName %param_234 "param"
               OpName %param_235 "param"
               OpName %param_236 "param"
               OpName %cosTheta_4 "cosTheta"
               OpName %param_237 "param"
               OpName %param_238 "param"
               OpName %param_239 "param"
               OpName %scatterTerm "scatterTerm"
               OpName %param_240 "param"
               OpName %param_241 "param"
               OpName %param_242 "param"
               OpName %param_243 "param"
               OpName %frameCount "frameCount"
               OpName %accumulatedRadaince "accumulatedRadaince"
               OpName %GBufferDrawParam "GBufferDrawParam"
               OpMemberName %GBufferDrawParam 0 "model"
               OpMemberName %GBufferDrawParam 1 "modelInvT"
               OpMemberName %GBufferDrawParam 2 "matIdx"
               OpMemberName %GBufferDrawParam 3 "meshIdx"
               OpMemberName %GBufferDrawParam 4 "pad0"
               OpMemberName %GBufferDrawParam 5 "pad1"
               OpName %_GBufferDrawParam "_GBufferDrawParam"
               OpMemberName %_GBufferDrawParam 0 "uGBufferDrawParams"
               OpName %__7 ""
               OpName %uDirectOutput "uDirectOutput"
               OpName %uDepthNormalPrev "uDepthNormalPrev"
               OpName %uAlbedoMatIdPrev "uAlbedoMatIdPrev"
               OpName %uMotionVector "uMotionVector"
               OpName %DIReservoir "DIReservoir"
               OpMemberName %DIReservoir 0 "radiance"
               OpMemberName %DIReservoir 1 "pad0"
               OpMemberName %DIReservoir 2 "wi"
               OpMemberName %DIReservoir 3 "dist"
               OpMemberName %DIReservoir 4 "sampleCount"
               OpMemberName %DIReservoir 5 "resampleWeight"
               OpMemberName %DIReservoir 6 "contribWeight"
               OpMemberName %DIReservoir 7 "pHat"
               OpName %_DIReservoirThis "_DIReservoirThis"
               OpMemberName %_DIReservoirThis 0 "uDIReservoir"
               OpName %__8 ""
               OpName %_DIReservoirPrev "_DIReservoirPrev"
               OpMemberName %_DIReservoirPrev 0 "uDIReservoirPrev"
               OpName %__9 ""
               OpName %GIReservoir "GIReservoir"
               OpMemberName %GIReservoir 0 "radiance"
               OpMemberName %GIReservoir 1 "sampleCount"
               OpMemberName %GIReservoir 2 "visiblePos"
               OpMemberName %GIReservoir 3 "resampleWeight"
               OpMemberName %GIReservoir 4 "visibleNorm"
               OpMemberName %GIReservoir 5 "contribWeight"
               OpMemberName %GIReservoir 6 "sampledPos"
               OpMemberName %GIReservoir 7 "pHat"
               OpName %_GIReservoirThis "_GIReservoirThis"
               OpMemberName %_GIReservoirThis 0 "uGIReservoir"
               OpName %__10 ""
               OpName %_GIReservoirPrev "_GIReservoirPrev"
               OpMemberName %_GIReservoirPrev 0 "uGIReservoirPrev"
               OpName %__11 ""
               OpName %Intersection_0 "Intersection"
               OpMemberName %Intersection_0 0 "bary"
               OpMemberName %Intersection_0 1 "instanceIdx"
               OpMemberName %Intersection_0 2 "triangleIdx"
               OpName %GRISPathSample_0 "GRISPathSample"
               OpMemberName %GRISPathSample_0 0 "rcVertexIsec"
               OpMemberName %GRISPathSample_0 1 "rcVertexRadiance"
               OpMemberName %GRISPathSample_0 2 "rcVertexLightPdf"
               OpMemberName %GRISPathSample_0 3 "rcVertexWi"
               OpMemberName %GRISPathSample_0 4 "rcVertexRng"
               OpMemberName %GRISPathSample_0 5 "rcVertexCachedJacobian"
               OpMemberName %GRISPathSample_0 6 "primaryHitRng"
               OpMemberName %GRISPathSample_0 7 "F"
               OpMemberName %GRISPathSample_0 8 "pathFlags"
               OpName %GRISReservoir "GRISReservoir"
               OpMemberName %GRISReservoir 0 "pathSample"
               OpMemberName %GRISReservoir 1 "sampleCount"
               OpMemberName %GRISReservoir 2 "resampleWeight"
               OpMemberName %GRISReservoir 3 "contribWeight"
               OpMemberName %GRISReservoir 4 "pad0"
               OpName %_GRISReservoirThis "_GRISReservoirThis"
               OpMemberName %_GRISReservoirThis 0 "uGRISReservoir"
               OpName %__12 ""
               OpName %_GRISReservoirPrev "_GRISReservoirPrev"
               OpMemberName %_GRISReservoirPrev 0 "uGRISReservoirPrev"
               OpName %__13 ""
               OpName %GRISSettings "GRISSettings"
               OpMemberName %GRISSettings 0 "shiftType"
               OpName %_PushConstant "_PushConstant"
               OpMemberName %_PushConstant 0 "uSettings"
               OpName %__14 ""
               OpModuleProcessed "entry-point main"
               OpModuleProcessed "client vulkan100"
               OpModuleProcessed "target-env spirv1.5"
               OpModuleProcessed "target-env vulkan1.2"
               OpModuleProcessed "entry-point main"
               OpMemberDecorate %TriangleLight_0 0 Offset 0
               OpMemberDecorate %TriangleLight_0 1 Offset 12
               OpMemberDecorate %TriangleLight_0 2 Offset 16
               OpMemberDecorate %TriangleLight_0 3 Offset 28
               OpMemberDecorate %TriangleLight_0 4 Offset 32
               OpMemberDecorate %TriangleLight_0 5 Offset 44
               OpMemberDecorate %TriangleLight_0 6 Offset 48
               OpMemberDecorate %TriangleLight_0 7 Offset 60
               OpDecorate %_runtimearr_TriangleLight_0 ArrayStride 64
               OpMemberDecorate %_TriangleLights 0 NonWritable
               OpMemberDecorate %_TriangleLights 0 Offset 0
               OpDecorate %_TriangleLights Block
               OpDecorate %_ DescriptorSet 1
               OpDecorate %_ Binding 6
               OpMemberDecorate %ObjectInstance_0 0 ColMajor
               OpMemberDecorate %ObjectInstance_0 0 Offset 0
               OpMemberDecorate %ObjectInstance_0 0 MatrixStride 16
               OpMemberDecorate %ObjectInstance_0 1 ColMajor
               OpMemberDecorate %ObjectInstance_0 1 Offset 64
               OpMemberDecorate %ObjectInstance_0 1 MatrixStride 16
               OpMemberDecorate %ObjectInstance_0 2 ColMajor
               OpMemberDecorate %ObjectInstance_0 2 Offset 128
               OpMemberDecorate %ObjectInstance_0 2 MatrixStride 16
               OpMemberDecorate %ObjectInstance_0 3 Offset 192
               OpMemberDecorate %ObjectInstance_0 4 Offset 204
               OpMemberDecorate %ObjectInstance_0 5 Offset 208
               OpMemberDecorate %ObjectInstance_0 6 Offset 212
               OpMemberDecorate %ObjectInstance_0 7 Offset 216
               OpMemberDecorate %ObjectInstance_0 8 Offset 220
               OpDecorate %_runtimearr_ObjectInstance_0 ArrayStride 224
               OpMemberDecorate %_ObjectInstances 0 NonWritable
               OpMemberDecorate %_ObjectInstances 0 Offset 0
               OpDecorate %_ObjectInstances Block
               OpDecorate %__0 DescriptorSet 1
               OpDecorate %__0 Binding 5
               OpDecorate %_runtimearr_int ArrayStride 4
               OpMemberDecorate %_MaterialIndices 0 NonWritable
               OpMemberDecorate %_MaterialIndices 0 Offset 0
               OpDecorate %_MaterialIndices Block
               OpDecorate %__1 DescriptorSet 1
               OpDecorate %__1 Binding 2
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %_Indices 0 NonWritable
               OpMemberDecorate %_Indices 0 Offset 0
               OpDecorate %_Indices Block
               OpDecorate %__2 DescriptorSet 1
               OpDecorate %__2 Binding 4
               OpMemberDecorate %MeshVertex_0 0 Offset 0
               OpMemberDecorate %MeshVertex_0 1 Offset 12
               OpMemberDecorate %MeshVertex_0 2 Offset 16
               OpMemberDecorate %MeshVertex_0 3 Offset 28
               OpDecorate %_runtimearr_MeshVertex_0 ArrayStride 32
               OpMemberDecorate %_Vertices 0 NonWritable
               OpMemberDecorate %_Vertices 0 Offset 0
               OpDecorate %_Vertices Block
               OpDecorate %__3 DescriptorSet 1
               OpDecorate %__3 Binding 3
               OpMemberDecorate %Material_0 0 Offset 0
               OpMemberDecorate %Material_0 1 Offset 12
               OpMemberDecorate %Material_0 2 Offset 16
               OpMemberDecorate %Material_0 3 Offset 20
               OpMemberDecorate %Material_0 4 Offset 24
               OpMemberDecorate %Material_0 5 Offset 28
               OpDecorate %_runtimearr_Material_0 ArrayStride 32
               OpMemberDecorate %_Materials 0 NonWritable
               OpMemberDecorate %_Materials 0 Offset 0
               OpDecorate %_Materials Block
               OpDecorate %__4 DescriptorSet 1
               OpDecorate %__4 Binding 1
               OpDecorate %uTextures DescriptorSet 1
               OpDecorate %uTextures Binding 0
               OpDecorate %645 NonUniform
               OpDecorate %647 NonUniform
               OpDecorate %648 NonUniform
               OpMemberDecorate %LightSampleTableElement 0 Offset 0
               OpMemberDecorate %LightSampleTableElement 1 Offset 4
               OpDecorate %_runtimearr_LightSampleTableElement ArrayStride 8
               OpMemberDecorate %_LightSampleTable 0 NonWritable
               OpMemberDecorate %_LightSampleTable 0 Offset 0
               OpDecorate %_LightSampleTable Block
               OpDecorate %__5 DescriptorSet 1
               OpDecorate %__5 Binding 7
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpMemberDecorate %Camera_0 0 ColMajor
               OpMemberDecorate %Camera_0 0 Offset 0
               OpMemberDecorate %Camera_0 0 MatrixStride 16
               OpMemberDecorate %Camera_0 1 ColMajor
               OpMemberDecorate %Camera_0 1 Offset 64
               OpMemberDecorate %Camera_0 1 MatrixStride 16
               OpMemberDecorate %Camera_0 2 ColMajor
               OpMemberDecorate %Camera_0 2 Offset 128
               OpMemberDecorate %Camera_0 2 MatrixStride 16
               OpMemberDecorate %Camera_0 3 ColMajor
               OpMemberDecorate %Camera_0 3 Offset 192
               OpMemberDecorate %Camera_0 3 MatrixStride 16
               OpMemberDecorate %Camera_0 4 Offset 256
               OpMemberDecorate %Camera_0 5 Offset 268
               OpMemberDecorate %Camera_0 6 Offset 272
               OpMemberDecorate %Camera_0 7 Offset 284
               OpMemberDecorate %Camera_0 8 Offset 288
               OpMemberDecorate %Camera_0 9 Offset 300
               OpMemberDecorate %Camera_0 10 Offset 304
               OpMemberDecorate %Camera_0 11 Offset 316
               OpMemberDecorate %Camera_0 12 Offset 320
               OpMemberDecorate %Camera_0 13 Offset 332
               OpMemberDecorate %Camera_0 14 Offset 336
               OpMemberDecorate %Camera_0 15 Offset 344
               OpMemberDecorate %Camera_0 16 Offset 348
               OpMemberDecorate %_Camera 0 Offset 0
               OpMemberDecorate %_Camera 1 Offset 352
               OpDecorate %_Camera Block
               OpDecorate %__6 DescriptorSet 0
               OpDecorate %__6 Binding 0
               OpDecorate %uDepthNormal DescriptorSet 3
               OpDecorate %uDepthNormal Binding 2
               OpDecorate %uIndirectOutput DescriptorSet 3
               OpDecorate %uIndirectOutput Binding 1
               OpDecorate %uAlbedoMatId DescriptorSet 3
               OpDecorate %uAlbedoMatId Binding 4
               OpDecorate %uTLAS DescriptorSet 4
               OpDecorate %uTLAS Binding 0
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpMemberDecorate %GBufferDrawParam 0 ColMajor
               OpMemberDecorate %GBufferDrawParam 0 Offset 0
               OpMemberDecorate %GBufferDrawParam 0 MatrixStride 16
               OpMemberDecorate %GBufferDrawParam 1 ColMajor
               OpMemberDecorate %GBufferDrawParam 1 Offset 64
               OpMemberDecorate %GBufferDrawParam 1 MatrixStride 16
               OpMemberDecorate %GBufferDrawParam 2 Offset 128
               OpMemberDecorate %GBufferDrawParam 3 Offset 132
               OpMemberDecorate %GBufferDrawParam 4 Offset 136
               OpMemberDecorate %GBufferDrawParam 5 Offset 140
               OpDecorate %_runtimearr_GBufferDrawParam ArrayStride 144
               OpMemberDecorate %_GBufferDrawParam 0 NonWritable
               OpMemberDecorate %_GBufferDrawParam 0 Offset 0
               OpDecorate %_GBufferDrawParam Block
               OpDecorate %__7 DescriptorSet 2
               OpDecorate %__7 Binding 0
               OpDecorate %uDirectOutput DescriptorSet 3
               OpDecorate %uDirectOutput Binding 0
               OpDecorate %uDepthNormalPrev DescriptorSet 3
               OpDecorate %uDepthNormalPrev Binding 3
               OpDecorate %uAlbedoMatIdPrev DescriptorSet 3
               OpDecorate %uAlbedoMatIdPrev Binding 5
               OpDecorate %uMotionVector DescriptorSet 3
               OpDecorate %uMotionVector Binding 6
               OpMemberDecorate %DIReservoir 0 Offset 0
               OpMemberDecorate %DIReservoir 1 Offset 12
               OpMemberDecorate %DIReservoir 2 Offset 16
               OpMemberDecorate %DIReservoir 3 Offset 28
               OpMemberDecorate %DIReservoir 4 Offset 32
               OpMemberDecorate %DIReservoir 5 Offset 36
               OpMemberDecorate %DIReservoir 6 Offset 40
               OpMemberDecorate %DIReservoir 7 Offset 44
               OpDecorate %_runtimearr_DIReservoir ArrayStride 48
               OpMemberDecorate %_DIReservoirThis 0 Offset 0
               OpDecorate %_DIReservoirThis Block
               OpDecorate %__8 DescriptorSet 3
               OpDecorate %__8 Binding 7
               OpDecorate %_runtimearr_DIReservoir_0 ArrayStride 48
               OpMemberDecorate %_DIReservoirPrev 0 Offset 0
               OpDecorate %_DIReservoirPrev Block
               OpDecorate %__9 DescriptorSet 3
               OpDecorate %__9 Binding 8
               OpMemberDecorate %GIReservoir 0 Offset 0
               OpMemberDecorate %GIReservoir 1 Offset 12
               OpMemberDecorate %GIReservoir 2 Offset 16
               OpMemberDecorate %GIReservoir 3 Offset 28
               OpMemberDecorate %GIReservoir 4 Offset 32
               OpMemberDecorate %GIReservoir 5 Offset 44
               OpMemberDecorate %GIReservoir 6 Offset 48
               OpMemberDecorate %GIReservoir 7 Offset 60
               OpDecorate %_runtimearr_GIReservoir ArrayStride 64
               OpMemberDecorate %_GIReservoirThis 0 Offset 0
               OpDecorate %_GIReservoirThis Block
               OpDecorate %__10 DescriptorSet 3
               OpDecorate %__10 Binding 9
               OpDecorate %_runtimearr_GIReservoir_0 ArrayStride 64
               OpMemberDecorate %_GIReservoirPrev 0 Offset 0
               OpDecorate %_GIReservoirPrev Block
               OpDecorate %__11 DescriptorSet 3
               OpDecorate %__11 Binding 10
               OpMemberDecorate %Intersection_0 0 Offset 0
               OpMemberDecorate %Intersection_0 1 Offset 8
               OpMemberDecorate %Intersection_0 2 Offset 12
               OpMemberDecorate %GRISPathSample_0 0 Offset 0
               OpMemberDecorate %GRISPathSample_0 1 Offset 16
               OpMemberDecorate %GRISPathSample_0 2 Offset 28
               OpMemberDecorate %GRISPathSample_0 3 Offset 32
               OpMemberDecorate %GRISPathSample_0 4 Offset 44
               OpMemberDecorate %GRISPathSample_0 5 Offset 48
               OpMemberDecorate %GRISPathSample_0 6 Offset 60
               OpMemberDecorate %GRISPathSample_0 7 Offset 64
               OpMemberDecorate %GRISPathSample_0 8 Offset 76
               OpMemberDecorate %GRISReservoir 0 Offset 0
               OpMemberDecorate %GRISReservoir 1 Offset 80
               OpMemberDecorate %GRISReservoir 2 Offset 84
               OpMemberDecorate %GRISReservoir 3 Offset 88
               OpMemberDecorate %GRISReservoir 4 Offset 92
               OpDecorate %_runtimearr_GRISReservoir ArrayStride 96
               OpMemberDecorate %_GRISReservoirThis 0 Offset 0
               OpDecorate %_GRISReservoirThis Block
               OpDecorate %__12 DescriptorSet 3
               OpDecorate %__12 Binding 11
               OpDecorate %_runtimearr_GRISReservoir_0 ArrayStride 96
               OpMemberDecorate %_GRISReservoirPrev 0 Offset 0
               OpDecorate %_GRISReservoirPrev Block
               OpDecorate %__13 DescriptorSet 3
               OpDecorate %__13 Binding 12
               OpMemberDecorate %GRISSettings 0 Offset 0
               OpMemberDecorate %_PushConstant 0 Offset 0
               OpDecorate %_PushConstant Block
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
%Intersection = OpTypeStruct %v2float %uint %uint
%_ptr_Function_Intersection = OpTypePointer Function %Intersection
       %bool = OpTypeBool
         %23 = OpTypeFunction %bool %_ptr_Function_Intersection
%_ptr_Function_uint = OpTypePointer Function %uint
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
%SurfaceInfo = OpTypeStruct %v3float %v3float %v3float %uint %bool
%_ptr_Function_SurfaceInfo = OpTypePointer Function %SurfaceInfo
         %32 = OpTypeFunction %void %_ptr_Function_uint %_ptr_Function_v3float %_ptr_Function_SurfaceInfo
         %38 = OpTypeFunction %void %_ptr_Function_uint %_ptr_Function_uint %_ptr_Function_v3float %_ptr_Function_SurfaceInfo
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %46 = OpTypeFunction %void %_ptr_Function_uint %_ptr_Function_uint %_ptr_Function_v2float %_ptr_Function_SurfaceInfo
         %53 = OpTypeFunction %void %_ptr_Function_Intersection %_ptr_Function_SurfaceInfo
         %58 = OpTypeAccelerationStructureKHR
%_ptr_UniformConstant_58 = OpTypePointer UniformConstant %58
%_ptr_Function_float = OpTypePointer Function %float
         %61 = OpTypeFunction %bool %_ptr_UniformConstant_58 %_ptr_Function_uint %_ptr_Function_uint %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_v3float %_ptr_Function_float
         %71 = OpTypeFunction %Intersection %_ptr_UniformConstant_58 %_ptr_Function_uint %_ptr_Function_uint %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_v3float %_ptr_Function_float
         %81 = OpTypeFunction %v2float %_ptr_Function_v2float
         %85 = OpTypeFunction %float %_ptr_Function_v3float %_ptr_Function_v3float
         %94 = OpTypeFunction %v3float %_ptr_Function_v3float
%mat3v3float = OpTypeMatrix %v3float 3
         %99 = OpTypeFunction %mat3v3float %_ptr_Function_v3float
        %103 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float
        %108 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v2float
        %113 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v2float
        %120 = OpTypeFunction %float %_ptr_Function_float
        %124 = OpTypeFunction %float %_ptr_Function_v3float
        %128 = OpTypeFunction %bool %_ptr_Function_v3float
        %135 = OpTypeFunction %v3float %_ptr_Function_float
        %139 = OpTypeFunction %uint %_ptr_Function_uint
        %143 = OpTypeFunction %uint %_ptr_Function_uint %_ptr_Function_uint
        %151 = OpTypeFunction %float %_ptr_Function_uint
        %155 = OpTypeFunction %v2float %_ptr_Function_uint
        %159 = OpTypeFunction %v3float %_ptr_Function_uint
    %v4float = OpTypeVector %float 4
        %164 = OpTypeFunction %v4float %_ptr_Function_uint
        %168 = OpTypeFunction %float %_ptr_Function_float %_ptr_Function_float
%mat4v4float = OpTypeMatrix %v4float 4
     %v2uint = OpTypeVector %uint 2
     %Camera = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %mat4v4float %v3float %float %v3float %float %v3float %float %v3float %float %v3float %float %v2uint %uint %uint
%_ptr_Function_Camera = OpTypePointer Function %Camera
        %Ray = OpTypeStruct %v3float %v3float
        %181 = OpTypeFunction %Ray %_ptr_Function_Camera %_ptr_Function_v2float %_ptr_Function_v2float
%TriangleLight = OpTypeStruct %v3float %float %v3float %float %v3float %float %v3float %float
%_ptr_Function_TriangleLight = OpTypePointer Function %TriangleLight
        %192 = OpTypeFunction %v3float %_ptr_Function_TriangleLight %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_float %_ptr_Function_v2float
%_ptr_Function_v4float = OpTypePointer Function %v4float
        %202 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_float %_ptr_Function_v4float
        %210 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_float %_ptr_Function_uint
        %222 = OpTypeFunction %v3float %_ptr_Function_float %_ptr_Function_v3float
        %235 = OpTypeFunction %float %_ptr_Function_float %_ptr_Function_float %_ptr_Function_float
        %245 = OpTypeFunction %float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float
        %252 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_v2float
        %259 = OpTypeFunction %bool %_ptr_Function_float
        %266 = OpTypeFunction %bool %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_float %_ptr_Function_v3float
        %273 = OpTypeFunction %v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float
 %BSDFSample = OpTypeStruct %v3float %float %v3float %uint
%_ptr_Function_BSDFSample = OpTypePointer Function %BSDFSample
        %281 = OpTypeFunction %bool %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v2float %_ptr_Function_BSDFSample
   %Material = OpTypeStruct %v3float %uint %uint %float %float %float
%_ptr_Function_Material = OpTypePointer Function %Material
        %290 = OpTypeFunction %bool %_ptr_Function_Material %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_BSDFSample
        %299 = OpTypeFunction %v3float %_ptr_Function_Material %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float
        %307 = OpTypeFunction %float %_ptr_Function_Material %_ptr_Function_v3float %_ptr_Function_v3float %_ptr_Function_v3float
        %358 = OpTypeFunction %bool %_ptr_Function_Material
        %365 = OpTypeFunction %bool %_ptr_Function_uint
        %372 = OpTypeFunction %void %_ptr_Function_uint %_ptr_Function_uint
        %int = OpTypeInt 32 1
      %int_1 = OpConstant %int 1
%uint_4294967295 = OpConstant %uint 4294967295
%TriangleLight_0 = OpTypeStruct %v3float %float %v3float %float %v3float %float %v3float %float
%_runtimearr_TriangleLight_0 = OpTypeRuntimeArray %TriangleLight_0
%_TriangleLights = OpTypeStruct %_runtimearr_TriangleLight_0
%_ptr_StorageBuffer__TriangleLights = OpTypePointer StorageBuffer %_TriangleLights
          %_ = OpVariable %_ptr_StorageBuffer__TriangleLights StorageBuffer
      %int_0 = OpConstant %int 0
%_ptr_StorageBuffer_TriangleLight_0 = OpTypePointer StorageBuffer %TriangleLight_0
     %uint_0 = OpConstant %uint 0
      %int_2 = OpConstant %int 2
     %uint_1 = OpConstant %uint 1
      %int_4 = OpConstant %int 4
     %uint_2 = OpConstant %uint 2
      %int_3 = OpConstant %int 3
      %int_5 = OpConstant %int 5
      %int_6 = OpConstant %int 6
%ObjectInstance = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %float %uint %uint %float %float
%_ptr_Function_ObjectInstance = OpTypePointer Function %ObjectInstance
%ObjectInstance_0 = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %float %uint %uint %float %float
%_runtimearr_ObjectInstance_0 = OpTypeRuntimeArray %ObjectInstance_0
%_ObjectInstances = OpTypeStruct %_runtimearr_ObjectInstance_0
%_ptr_StorageBuffer__ObjectInstances = OpTypePointer StorageBuffer %_ObjectInstances
        %__0 = OpVariable %_ptr_StorageBuffer__ObjectInstances StorageBuffer
%_ptr_StorageBuffer_ObjectInstance_0 = OpTypePointer StorageBuffer %ObjectInstance_0
%_runtimearr_int = OpTypeRuntimeArray %int
%_MaterialIndices = OpTypeStruct %_runtimearr_int
%_ptr_StorageBuffer__MaterialIndices = OpTypePointer StorageBuffer %_MaterialIndices
        %__1 = OpVariable %_ptr_StorageBuffer__MaterialIndices StorageBuffer
     %uint_3 = OpConstant %uint 3
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
%_runtimearr_uint = OpTypeRuntimeArray %uint
   %_Indices = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer__Indices = OpTypePointer StorageBuffer %_Indices
        %__2 = OpVariable %_ptr_StorageBuffer__Indices StorageBuffer
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
 %MeshVertex = OpTypeStruct %v3float %float %v3float %float
%_ptr_Function_MeshVertex = OpTypePointer Function %MeshVertex
%MeshVertex_0 = OpTypeStruct %v3float %float %v3float %float
%_runtimearr_MeshVertex_0 = OpTypeRuntimeArray %MeshVertex_0
  %_Vertices = OpTypeStruct %_runtimearr_MeshVertex_0
%_ptr_StorageBuffer__Vertices = OpTypePointer StorageBuffer %_Vertices
        %__3 = OpVariable %_ptr_StorageBuffer__Vertices StorageBuffer
%_ptr_StorageBuffer_MeshVertex_0 = OpTypePointer StorageBuffer %MeshVertex_0
%_ptr_Function_mat4v4float = OpTypePointer Function %mat4v4float
    %float_1 = OpConstant %float 1
 %Material_0 = OpTypeStruct %v3float %uint %uint %float %float %float
%_runtimearr_Material_0 = OpTypeRuntimeArray %Material_0
 %_Materials = OpTypeStruct %_runtimearr_Material_0
%_ptr_StorageBuffer__Materials = OpTypePointer StorageBuffer %_Materials
        %__4 = OpVariable %_ptr_StorageBuffer__Materials StorageBuffer
%_ptr_StorageBuffer_v3float = OpTypePointer StorageBuffer %v3float
        %639 = OpTypeImage %float 2D 0 0 0 1 Unknown
        %640 = OpTypeSampledImage %639
%_runtimearr_640 = OpTypeRuntimeArray %640
%_ptr_UniformConstant__runtimearr_640 = OpTypePointer UniformConstant %_runtimearr_640
  %uTextures = OpVariable %_ptr_UniformConstant__runtimearr_640 UniformConstant
%_ptr_UniformConstant_640 = OpTypePointer UniformConstant %640
    %float_0 = OpConstant %float 0
       %true = OpConstantTrue %bool
%_ptr_Function_bool = OpTypePointer Function %bool
      %false = OpConstantFalse %bool
        %710 = OpTypeRayQueryKHR
%_ptr_Private_710 = OpTypePointer Private %710
   %rayQuery = OpVariable %_ptr_Private_710 Private
 %rayQuery_0 = OpVariable %_ptr_Private_710 Private
        %781 = OpConstantComposite %v2float %float_0 %float_0
    %float_2 = OpConstant %float 2
%float_3_14159274 = OpConstant %float 3.14159274
 %float_0_25 = OpConstant %float 0.25
%float_1_57079637 = OpConstant %float 1.57079637
%float_0_999000013 = OpConstant %float 0.999000013
        %854 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %855 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_0_298999995 = OpConstant %float 0.298999995
%float_0_587000012 = OpConstant %float 0.587000012
%float_0_114 = OpConstant %float 0.114
        %961 = OpConstantComposite %v3float %float_0_298999995 %float_0_587000012 %float_0_114
        %989 = OpConstantComposite %v3float %float_0 %float_0 %float_0
%float_10000 = OpConstant %float 10000
        %993 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
  %float_0_5 = OpConstant %float 0.5
 %float_0_75 = OpConstant %float 0.75
    %float_4 = OpConstant %float 4
    %uint_61 = OpConstant %uint 61
    %uint_16 = OpConstant %uint 16
     %uint_9 = OpConstant %uint 9
     %uint_4 = OpConstant %uint 4
%uint_668265261 = OpConstant %uint 668265261
    %uint_15 = OpConstant %uint 15
%float_4_2949673e_09 = OpConstant %float 4.2949673e+09
     %int_14 = OpConstant %int 14
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
     %int_10 = OpConstant %int 10
     %int_12 = OpConstant %int 12
      %int_8 = OpConstant %int 8
      %int_7 = OpConstant %int 7
%LightSampleTableElement = OpTypeStruct %float %uint
%_runtimearr_LightSampleTableElement = OpTypeRuntimeArray %LightSampleTableElement
%_LightSampleTable = OpTypeStruct %_runtimearr_LightSampleTableElement
%_ptr_StorageBuffer__LightSampleTable = OpTypePointer StorageBuffer %_LightSampleTable
        %__5 = OpVariable %_ptr_StorageBuffer__LightSampleTable StorageBuffer
       %1343 = OpConstantComposite %v3float %float_1 %float_1 %float_1
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
%_ptr_Function_mat3v3float = OpTypePointer Function %mat3v3float
       %1543 = OpConstantComposite %v3float %float_1 %float_0 %float_0
%float_0_200000003 = OpConstant %float 0.200000003
%float_0_00999999978 = OpConstant %float 0.00999999978
%float_0_318309873 = OpConstant %float 0.318309873
    %uint_17 = OpConstant %uint 17
    %uint_20 = OpConstant %uint 20
%uint_2147483648 = OpConstant %uint 2147483648
    %uint_36 = OpConstant %uint 36
%float_1_00000001en07 = OpConstant %float 1.00000001e-07
%float_0_0799999982 = OpConstant %float 0.0799999982
       %1799 = OpConstantComposite %v3float %float_0_0799999982 %float_0_0799999982 %float_0_0799999982
%float_0_949999988 = OpConstant %float 0.949999988
   %uint_255 = OpConstant %uint 255
%uint_4294967040 = OpConstant %uint 4294967040
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
   %Camera_0 = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %mat4v4float %v3float %float %v3float %float %v3float %float %v3float %float %v3float %float %v2uint %uint %uint
    %_Camera = OpTypeStruct %Camera_0 %Camera_0
%_ptr_Uniform__Camera = OpTypePointer Uniform %_Camera
        %__6 = OpVariable %_ptr_Uniform__Camera Uniform
%_ptr_Uniform_v2uint = OpTypePointer Uniform %v2uint
%uDepthNormal = OpVariable %_ptr_UniformConstant_640 UniformConstant
       %2403 = OpTypeImage %float 2D 0 0 0 2 Rgba16f
%_ptr_UniformConstant_2403 = OpTypePointer UniformConstant %2403
%uIndirectOutput = OpVariable %_ptr_UniformConstant_2403 UniformConstant
      %v2int = OpTypeVector %int 2
       %2410 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
       %2413 = OpTypeImage %uint 2D 0 0 0 1 Unknown
       %2414 = OpTypeSampledImage %2413
%_ptr_UniformConstant_2414 = OpTypePointer UniformConstant %2414
%uAlbedoMatId = OpVariable %_ptr_UniformConstant_2414 UniformConstant
     %v4uint = OpTypeVector %uint 4
%_ptr_Function_int = OpTypePointer Function %int
     %int_16 = OpConstant %int 16
%_ptr_Function_Ray = OpTypePointer Function %Ray
%_ptr_Uniform_Camera_0 = OpTypePointer Uniform %Camera_0
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
%_ptr_StorageBuffer_Material_0 = OpTypePointer StorageBuffer %Material_0
%GRISPathSample = OpTypeStruct %Intersection %v3float %float %v3float %uint %v3float %uint %v3float %uint
%_ptr_Function_GRISPathSample = OpTypePointer Function %GRISPathSample
     %int_15 = OpConstant %int 15
      %uTLAS = OpVariable %_ptr_UniformConstant_58 UniformConstant
%float_10000000 = OpConstant %float 10000000
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
    %uint_13 = OpConstant %uint 13
    %float_6 = OpConstant %float 6
%uint_2147483647 = OpConstant %uint 2147483647
    %uint_32 = OpConstant %uint 32
     %uint_8 = OpConstant %uint 8
     %uint_5 = OpConstant %uint 5
%gl_WorkGroupSize = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_1
%GBufferDrawParam = OpTypeStruct %mat4v4float %mat4v4float %int %int %int %int
%_runtimearr_GBufferDrawParam = OpTypeRuntimeArray %GBufferDrawParam
%_GBufferDrawParam = OpTypeStruct %_runtimearr_GBufferDrawParam
%_ptr_StorageBuffer__GBufferDrawParam = OpTypePointer StorageBuffer %_GBufferDrawParam
        %__7 = OpVariable %_ptr_StorageBuffer__GBufferDrawParam StorageBuffer
%uDirectOutput = OpVariable %_ptr_UniformConstant_2403 UniformConstant
%uDepthNormalPrev = OpVariable %_ptr_UniformConstant_640 UniformConstant
%uAlbedoMatIdPrev = OpVariable %_ptr_UniformConstant_2414 UniformConstant
%uMotionVector = OpVariable %_ptr_UniformConstant_640 UniformConstant
%DIReservoir = OpTypeStruct %v3float %float %v3float %float %uint %float %float %float
%_runtimearr_DIReservoir = OpTypeRuntimeArray %DIReservoir
%_DIReservoirThis = OpTypeStruct %_runtimearr_DIReservoir
%_ptr_StorageBuffer__DIReservoirThis = OpTypePointer StorageBuffer %_DIReservoirThis
        %__8 = OpVariable %_ptr_StorageBuffer__DIReservoirThis StorageBuffer
%_runtimearr_DIReservoir_0 = OpTypeRuntimeArray %DIReservoir
%_DIReservoirPrev = OpTypeStruct %_runtimearr_DIReservoir_0
%_ptr_StorageBuffer__DIReservoirPrev = OpTypePointer StorageBuffer %_DIReservoirPrev
        %__9 = OpVariable %_ptr_StorageBuffer__DIReservoirPrev StorageBuffer
%GIReservoir = OpTypeStruct %v3float %uint %v3float %float %v3float %float %v3float %float
%_runtimearr_GIReservoir = OpTypeRuntimeArray %GIReservoir
%_GIReservoirThis = OpTypeStruct %_runtimearr_GIReservoir
%_ptr_StorageBuffer__GIReservoirThis = OpTypePointer StorageBuffer %_GIReservoirThis
       %__10 = OpVariable %_ptr_StorageBuffer__GIReservoirThis StorageBuffer
%_runtimearr_GIReservoir_0 = OpTypeRuntimeArray %GIReservoir
%_GIReservoirPrev = OpTypeStruct %_runtimearr_GIReservoir_0
%_ptr_StorageBuffer__GIReservoirPrev = OpTypePointer StorageBuffer %_GIReservoirPrev
       %__11 = OpVariable %_ptr_StorageBuffer__GIReservoirPrev StorageBuffer
%Intersection_0 = OpTypeStruct %v2float %uint %uint
%GRISPathSample_0 = OpTypeStruct %Intersection_0 %v3float %float %v3float %uint %v3float %uint %v3float %uint
%GRISReservoir = OpTypeStruct %GRISPathSample_0 %float %float %float %float
%_runtimearr_GRISReservoir = OpTypeRuntimeArray %GRISReservoir
%_GRISReservoirThis = OpTypeStruct %_runtimearr_GRISReservoir
%_ptr_StorageBuffer__GRISReservoirThis = OpTypePointer StorageBuffer %_GRISReservoirThis
       %__12 = OpVariable %_ptr_StorageBuffer__GRISReservoirThis StorageBuffer
%_runtimearr_GRISReservoir_0 = OpTypeRuntimeArray %GRISReservoir
%_GRISReservoirPrev = OpTypeStruct %_runtimearr_GRISReservoir_0
%_ptr_StorageBuffer__GRISReservoirPrev = OpTypePointer StorageBuffer %_GRISReservoirPrev
       %__13 = OpVariable %_ptr_StorageBuffer__GRISReservoirPrev StorageBuffer
%float_0x1p_128 = OpConstant %float 0x1p+128
     %uint_6 = OpConstant %uint 6
%GRISSettings = OpTypeStruct %uint
%_PushConstant = OpTypeStruct %GRISSettings
%_ptr_PushConstant__PushConstant = OpTypePointer PushConstant %_PushConstant
       %__14 = OpVariable %_ptr_PushConstant__PushConstant PushConstant
               OpLine %1 25 11
       %main = OpFunction %void None %14
         %16 = OpLabel
  %threadIdx = OpVariable %_ptr_Function_v2uint Function
  %launchDim = OpVariable %_ptr_Function_v2uint Function
       %uv_2 = OpVariable %_ptr_Function_v2float Function
%depthNormal = OpVariable %_ptr_Function_v4float Function
      %depth = OpVariable %_ptr_Function_float Function
     %norm_0 = OpVariable %_ptr_Function_v3float Function
%albedoMatId = OpVariable %_ptr_Function_v2uint Function
   %albedo_8 = OpVariable %_ptr_Function_v3float Function
  %param_182 = OpVariable %_ptr_Function_uint Function
  %matMeshId = OpVariable %_ptr_Function_int Function
      %matId = OpVariable %_ptr_Function_int Function
        %ray = OpVariable %_ptr_Function_Ray Function
  %param_183 = OpVariable %_ptr_Function_Camera Function
  %param_184 = OpVariable %_ptr_Function_v2float Function
  %param_185 = OpVariable %_ptr_Function_v2float Function
      %rng_5 = OpVariable %_ptr_Function_uint Function
  %param_186 = OpVariable %_ptr_Function_uint Function
  %param_187 = OpVariable %_ptr_Function_uint Function
 %radiance_0 = OpVariable %_ptr_Function_v3float Function
 %throughput = OpVariable %_ptr_Function_v3float Function
      %wo_10 = OpVariable %_ptr_Function_v3float Function
%isLastVertexConnectible = OpVariable %_ptr_Function_bool Function
%rcVertexFound = OpVariable %_ptr_Function_bool Function
%rcVertexThroughput = OpVariable %_ptr_Function_v3float Function
       %surf = OpVariable %_ptr_Function_SurfaceInfo Function
     %mat_10 = OpVariable %_ptr_Function_Material Function
 %pathSample = OpVariable %_ptr_Function_GRISPathSample Function
     %bounce = OpVariable %_ptr_Function_int Function
     %isec_2 = OpVariable %_ptr_Function_Intersection Function
  %param_188 = OpVariable %_ptr_Function_uint Function
  %param_189 = OpVariable %_ptr_Function_uint Function
  %param_190 = OpVariable %_ptr_Function_v3float Function
  %param_191 = OpVariable %_ptr_Function_float Function
  %param_192 = OpVariable %_ptr_Function_v3float Function
  %param_193 = OpVariable %_ptr_Function_float Function
  %param_194 = OpVariable %_ptr_Function_Intersection Function
  %param_195 = OpVariable %_ptr_Function_Intersection Function
  %param_196 = OpVariable %_ptr_Function_SurfaceInfo Function
 %cosTheta_3 = OpVariable %_ptr_Function_float Function
     %weight = OpVariable %_ptr_Function_float Function
        %s_5 = OpVariable %_ptr_Function_BSDFSample Function
  %param_197 = OpVariable %_ptr_Function_uint Function
     %dist_2 = OpVariable %_ptr_Function_float Function
    %lastPos = OpVariable %_ptr_Function_v3float Function
   %sumPower = OpVariable %_ptr_Function_float Function
   %lightPdf = OpVariable %_ptr_Function_float Function
  %param_198 = OpVariable %_ptr_Function_v3float Function
  %param_199 = OpVariable %_ptr_Function_float Function
  %param_200 = OpVariable %_ptr_Function_float Function
  %param_201 = OpVariable %_ptr_Function_uint Function
%isThisVertexConnectible = OpVariable %_ptr_Function_bool Function
  %param_202 = OpVariable %_ptr_Function_Material Function
  %param_203 = OpVariable %_ptr_Function_uint Function
  %param_204 = OpVariable %_ptr_Function_uint Function
  %param_205 = OpVariable %_ptr_Function_Material Function
%lightRadiance = OpVariable %_ptr_Function_v3float Function
   %lightDir = OpVariable %_ptr_Function_v3float Function
  %lightDist = OpVariable %_ptr_Function_float Function
 %lightPdf_0 = OpVariable %_ptr_Function_float Function
  %param_206 = OpVariable %_ptr_Function_v3float Function
  %param_207 = OpVariable %_ptr_Function_v3float Function
  %param_208 = OpVariable %_ptr_Function_float Function
  %param_209 = OpVariable %_ptr_Function_float Function
  %param_210 = OpVariable %_ptr_Function_uint Function
   %shadowed = OpVariable %_ptr_Function_bool Function
  %param_211 = OpVariable %_ptr_Function_uint Function
  %param_212 = OpVariable %_ptr_Function_uint Function
  %param_213 = OpVariable %_ptr_Function_v3float Function
  %param_214 = OpVariable %_ptr_Function_float Function
  %param_215 = OpVariable %_ptr_Function_v3float Function
  %param_216 = OpVariable %_ptr_Function_float Function
    %bsdfPdf = OpVariable %_ptr_Function_float Function
  %param_217 = OpVariable %_ptr_Function_v3float Function
  %param_218 = OpVariable %_ptr_Function_v3float Function
   %weight_0 = OpVariable %_ptr_Function_float Function
  %param_219 = OpVariable %_ptr_Function_float Function
  %param_220 = OpVariable %_ptr_Function_float Function
 %lightTerms = OpVariable %_ptr_Function_v3float Function
  %param_221 = OpVariable %_ptr_Function_Material Function
  %param_222 = OpVariable %_ptr_Function_v3float Function
  %param_223 = OpVariable %_ptr_Function_v3float Function
  %param_224 = OpVariable %_ptr_Function_v3float Function
  %param_225 = OpVariable %_ptr_Function_v3float Function
  %param_226 = OpVariable %_ptr_Function_v3float Function
  %param_227 = OpVariable %_ptr_Function_v3float Function
%pdfTerminate = OpVariable %_ptr_Function_float Function
  %param_228 = OpVariable %_ptr_Function_v3float Function
  %param_229 = OpVariable %_ptr_Function_uint Function
  %param_230 = OpVariable %_ptr_Function_uint Function
  %param_231 = OpVariable %_ptr_Function_Material Function
  %param_232 = OpVariable %_ptr_Function_v3float Function
  %param_233 = OpVariable %_ptr_Function_v3float Function
  %param_234 = OpVariable %_ptr_Function_v3float Function
  %param_235 = OpVariable %_ptr_Function_v3float Function
  %param_236 = OpVariable %_ptr_Function_BSDFSample Function
 %cosTheta_4 = OpVariable %_ptr_Function_float Function
  %param_237 = OpVariable %_ptr_Function_uint Function
       %2826 = OpVariable %_ptr_Function_float Function
  %param_238 = OpVariable %_ptr_Function_v3float Function
  %param_239 = OpVariable %_ptr_Function_v3float Function
%scatterTerm = OpVariable %_ptr_Function_v3float Function
  %param_240 = OpVariable %_ptr_Function_uint Function
  %param_241 = OpVariable %_ptr_Function_uint Function
  %param_242 = OpVariable %_ptr_Function_float Function
  %param_243 = OpVariable %_ptr_Function_v3float Function
 %frameCount = OpVariable %_ptr_Function_float Function
%accumulatedRadaince = OpVariable %_ptr_Function_v3float Function
               OpLine %1 27 0
       %2353 = OpLoad %v3uint %gl_GlobalInvocationID
       %2354 = OpVectorShuffle %v2uint %2353 %2353 0 1
               OpStore %threadIdx %2354
               OpLine %1 28 0
       %2361 = OpAccessChain %_ptr_Uniform_v2uint %__6 %int_0 %int_14
       %2362 = OpLoad %v2uint %2361
               OpStore %launchDim %2362
               OpLine %1 30 0
       %2363 = OpAccessChain %_ptr_Function_uint %threadIdx %uint_0
       %2364 = OpLoad %uint %2363
       %2365 = OpAccessChain %_ptr_Function_uint %launchDim %uint_0
       %2366 = OpLoad %uint %2365
       %2367 = OpUGreaterThanEqual %bool %2364 %2366
       %2368 = OpLogicalNot %bool %2367
               OpSelectionMerge %2370 None
               OpBranchConditional %2368 %2369 %2370
       %2369 = OpLabel
               OpLine %1 30 0
       %2371 = OpAccessChain %_ptr_Function_uint %threadIdx %uint_1
       %2372 = OpLoad %uint %2371
       %2373 = OpAccessChain %_ptr_Function_uint %launchDim %uint_1
       %2374 = OpLoad %uint %2373
       %2375 = OpUGreaterThanEqual %bool %2372 %2374
               OpBranch %2370
       %2370 = OpLabel
       %2376 = OpPhi %bool %2367 %16 %2375 %2369
               OpSelectionMerge %2378 None
               OpBranchConditional %2376 %2377 %2378
       %2377 = OpLabel
               OpLine %1 31 0
               OpReturn
       %2378 = OpLabel
               OpLine %1 33 0
       %2381 = OpLoad %v2uint %threadIdx
       %2382 = OpConvertUToF %v2float %2381
       %2383 = OpCompositeConstruct %v2float %float_0_5 %float_0_5
       %2384 = OpFAdd %v2float %2382 %2383
       %2385 = OpLoad %v2uint %launchDim
       %2386 = OpConvertUToF %v2float %2385
       %2387 = OpFDiv %v2float %2384 %2386
               OpStore %uv_2 %2387
               OpLine %1 35 0
       %2390 = OpLoad %640 %uDepthNormal
       %2391 = OpLoad %v2float %uv_2
       %2392 = OpImageSampleExplicitLod %v4float %2390 %2391 Lod %float_0
               OpStore %depthNormal %2392
               OpLine %1 36 0
       %2394 = OpAccessChain %_ptr_Function_float %depthNormal %uint_0
       %2395 = OpLoad %float %2394
               OpStore %depth %2395
               OpLine %1 37 0
       %2397 = OpLoad %v4float %depthNormal
       %2398 = OpVectorShuffle %v3float %2397 %2397 1 2 3
               OpStore %norm_0 %2398
               OpLine %1 39 0
       %2399 = OpLoad %float %depth
       %2400 = OpFOrdEqual %bool %2399 %float_0
               OpSelectionMerge %2402 None
               OpBranchConditional %2400 %2401 %2402
       %2401 = OpLabel
               OpLine %1 40 0
       %2406 = OpLoad %2403 %uIndirectOutput
       %2407 = OpLoad %v2uint %threadIdx
       %2409 = OpBitcast %v2int %2407
               OpImageWrite %2406 %2409 %2410
               OpLine %1 41 0
               OpReturn
       %2402 = OpLabel
               OpLine %1 43 0
       %2417 = OpLoad %2414 %uAlbedoMatId
       %2418 = OpLoad %v2uint %threadIdx
       %2419 = OpBitcast %v2int %2418
       %2420 = OpImage %2413 %2417
       %2422 = OpImageFetch %v4uint %2420 %2419 Lod|ZeroExtend %int_0
       %2423 = OpVectorShuffle %v2uint %2422 %2422 0 1
               OpStore %albedoMatId %2423
               OpLine %1 44 0
       %2426 = OpAccessChain %_ptr_Function_uint %albedoMatId %uint_0
       %2427 = OpLoad %uint %2426
               OpStore %param_182 %2427
       %2428 = OpFunctionCall %v3float %unpackAlbedo_u1_ %param_182
               OpStore %albedo_8 %2428
               OpLine %1 45 0
       %2431 = OpAccessChain %_ptr_Function_uint %albedoMatId %uint_1
       %2432 = OpLoad %uint %2431
       %2433 = OpBitcast %int %2432
               OpStore %matMeshId %2433
               OpLine %1 46 0
       %2435 = OpLoad %int %matMeshId
       %2437 = OpShiftRightArithmetic %int %2435 %int_16
               OpStore %matId %2437
               OpLine %1 48 0
       %2440 = OpAccessChain %_ptr_Function_float %uv_2 %uint_0
       %2441 = OpLoad %float %2440
       %2442 = OpAccessChain %_ptr_Function_float %uv_2 %uint_1
       %2443 = OpLoad %float %2442
       %2444 = OpFSub %float %float_1 %2443
       %2445 = OpCompositeConstruct %v2float %2441 %2444
       %2448 = OpAccessChain %_ptr_Uniform_Camera_0 %__6 %int_0
       %2449 = OpLoad %Camera_0 %2448
       %2450 = OpCopyLogical %Camera %2449
               OpStore %param_183 %2450
               OpStore %param_184 %2445
               OpStore %param_185 %781
       %2453 = OpFunctionCall %Ray %pinholeCameraSampleRay_struct_Camera_mf44_mf44_mf44_mf44_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vu2_u1_u11_vf2_vf2_ %param_183 %param_184 %param_185
               OpStore %ray %2453
               OpLine %1 49 0
       %2456 = OpAccessChain %_ptr_Uniform_uint %__6 %int_0 %int_16
       %2457 = OpLoad %uint %2456
       %2458 = OpAccessChain %_ptr_Function_uint %threadIdx %uint_0
       %2459 = OpLoad %uint %2458
       %2460 = OpIAdd %uint %2457 %2459
               OpStore %param_186 %2460
       %2463 = OpAccessChain %_ptr_Function_uint %threadIdx %uint_1
       %2464 = OpLoad %uint %2463
               OpStore %param_187 %2464
       %2465 = OpFunctionCall %uint %makeSeed_u1_u1_ %param_186 %param_187
               OpStore %rng_5 %2465
               OpLine %1 51 0
               OpStore %radiance_0 %989
               OpLine %1 52 0
               OpStore %throughput %1343
               OpLine %1 53 0
       %2469 = OpAccessChain %_ptr_Function_v3float %ray %int_1
       %2470 = OpLoad %v3float %2469
       %2471 = OpFNegate %v3float %2470
               OpStore %wo_10 %2471
               OpLine %1 55 0
               OpStore %isLastVertexConnectible %false
               OpLine %1 56 0
               OpStore %rcVertexFound %false
               OpLine %1 57 0
               OpStore %rcVertexThroughput %1343
               OpLine %1 60 0
       %2476 = OpAccessChain %_ptr_Function_v3float %ray %int_0
       %2477 = OpLoad %v3float %2476
       %2478 = OpAccessChain %_ptr_Function_v3float %ray %int_1
       %2479 = OpLoad %v3float %2478
       %2480 = OpLoad %float %depth
       %2482 = OpFSub %float %2480 %float_9_99999975en05
       %2483 = OpVectorTimesScalar %v3float %2479 %2482
       %2484 = OpFAdd %v3float %2477 %2483
       %2485 = OpAccessChain %_ptr_Function_v3float %surf %int_0
               OpStore %2485 %2484
               OpLine %1 61 0
       %2486 = OpLoad %v3float %norm_0
       %2487 = OpAccessChain %_ptr_Function_v3float %surf %int_1
               OpStore %2487 %2486
               OpLine %1 62 0
       %2488 = OpLoad %v3float %albedo_8
       %2489 = OpAccessChain %_ptr_Function_v3float %surf %int_2
               OpStore %2489 %2488
               OpLine %1 63 0
       %2490 = OpAccessChain %_ptr_Function_bool %surf %int_4
               OpStore %2490 %false
               OpLine %1 65 0
       %2492 = OpLoad %int %matId
       %2494 = OpAccessChain %_ptr_StorageBuffer_Material_0 %__4 %int_0 %2492
       %2495 = OpLoad %Material_0 %2494
       %2496 = OpCopyLogical %Material %2495
               OpStore %mat_10 %2496
               OpLine %1 70 0
       %2500 = OpLoad %uint %rng_5
       %2501 = OpAccessChain %_ptr_Function_uint %pathSample %int_6
               OpStore %2501 %2500
               OpLine %1 73 0
               OpStore %bounce %int_0
               OpBranch %2503
       %2503 = OpLabel
               OpLine %1 73 0
               OpLoopMerge %2505 %2506 None
               OpBranch %2507
       %2507 = OpLabel
               OpLine %1 73 0
       %2508 = OpLoad %int %bounce
       %2510 = OpSLessThan %bool %2508 %int_15
               OpBranchConditional %2510 %2504 %2505
       %2504 = OpLabel
               OpLine %1 74 0
       %2511 = OpLoad %int %bounce
       %2512 = OpSGreaterThan %bool %2511 %int_0
               OpSelectionMerge %2514 None
               OpBranchConditional %2512 %2513 %2514
       %2513 = OpLabel
               OpLine %1 75 0
               OpLine %1 79 0
               OpLine %1 78 0
               OpStore %param_188 %uint_1
               OpStore %param_189 %uint_255
       %2521 = OpAccessChain %_ptr_Function_v3float %ray %int_0
       %2522 = OpLoad %v3float %2521
               OpStore %param_190 %2522
               OpStore %param_191 %float_9_99999975en05
       %2525 = OpAccessChain %_ptr_Function_v3float %ray %int_1
       %2526 = OpLoad %v3float %2525
               OpStore %param_192 %2526
               OpStore %param_193 %float_10000000
       %2528 = OpFunctionCall %Intersection %rayQueryTraceClosestHit_as1_u1_u1_vf3_f1_vf3_f1_ %uTLAS %param_188 %param_189 %param_190 %param_191 %param_192 %param_193
               OpStore %isec_2 %2528
               OpLine %1 81 0
       %2530 = OpLoad %Intersection %isec_2
               OpStore %param_194 %2530
       %2531 = OpFunctionCall %bool %IntersectionIsValid_struct_Intersection_vf2_u1_u11_ %param_194
       %2532 = OpLogicalNot %bool %2531
               OpSelectionMerge %2534 None
               OpBranchConditional %2532 %2533 %2534
       %2533 = OpLabel
               OpLine %1 82 0
               OpBranch %2505
       %2534 = OpLabel
               OpLine %1 84 0
       %2537 = OpLoad %Intersection %isec_2
               OpStore %param_195 %2537
       %2539 = OpFunctionCall %void %loadSurfaceInfo_struct_Intersection_vf2_u1_u11_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ %param_195 %param_196
       %2540 = OpLoad %SurfaceInfo %param_196
               OpStore %surf %2540
               OpLine %1 85 0
       %2541 = OpAccessChain %_ptr_Function_uint %surf %int_3
       %2542 = OpLoad %uint %2541
       %2543 = OpAccessChain %_ptr_StorageBuffer_Material_0 %__4 %int_0 %2542
       %2544 = OpLoad %Material_0 %2543
       %2545 = OpCopyLogical %Material %2544
               OpStore %mat_10 %2545
               OpBranch %2514
       %2514 = OpLabel
               OpLine %1 88 0
       %2546 = OpAccessChain %_ptr_Function_bool %surf %int_4
       %2547 = OpLoad %bool %2546
               OpSelectionMerge %2549 None
               OpBranchConditional %2547 %2548 %2549
       %2548 = OpLabel
               OpLine %1 89 0
       %2551 = OpAccessChain %_ptr_Function_v3float %ray %int_1
       %2552 = OpLoad %v3float %2551
       %2553 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2554 = OpLoad %v3float %2553
       %2555 = OpDot %float %2552 %2554
       %2556 = OpFNegate %float %2555
               OpStore %cosTheta_3 %2556
               OpSelectionMerge %2558 None
               OpBranchConditional %true %2557 %2558
       %2557 = OpLabel
               OpLine %1 92 0
               OpStore %weight %float_1
               OpLine %1 94 0
       %2560 = OpLoad %int %bounce
       %2561 = OpSGreaterThan %bool %2560 %int_0
               OpSelectionMerge %2563 None
               OpBranchConditional %2561 %2562 %2563
       %2562 = OpLabel
               OpLine %1 94 0
       %2566 = OpAccessChain %_ptr_Function_uint %s_5 %int_3
       %2567 = OpLoad %uint %2566
               OpStore %param_197 %2567
       %2568 = OpFunctionCall %bool %isSampleTypeDelta_u1_ %param_197
       %2569 = OpLogicalNot %bool %2568
               OpBranch %2563
       %2563 = OpLabel
       %2570 = OpPhi %bool %2561 %2557 %2569 %2562
               OpSelectionMerge %2572 None
               OpBranchConditional %2570 %2571 %2572
       %2571 = OpLabel
               OpLine %1 95 0
       %2574 = OpAccessChain %_ptr_Function_v3float %surf %int_0
       %2575 = OpLoad %v3float %2574
       %2577 = OpLoad %v3float %lastPos
       %2578 = OpFSub %v3float %2575 %2577
       %2579 = OpExtInst %float %12 Length %2578
               OpStore %dist_2 %2579
               OpLine %1 96 0
       %2582 = OpAccessChain %_ptr_StorageBuffer_float %__5 %int_0 %int_0 %int_0
       %2583 = OpLoad %float %2582
               OpStore %sumPower %2583
               OpLine %1 97 0
       %2586 = OpAccessChain %_ptr_Function_v3float %surf %int_2
       %2587 = OpLoad %v3float %2586
               OpStore %param_198 %2587
       %2588 = OpFunctionCall %float %luminance_vf3_ %param_198
       %2589 = OpLoad %float %sumPower
       %2590 = OpFDiv %float %2588 %2589
       %2591 = OpLoad %float %dist_2
       %2592 = OpFMul %float %2590 %2591
       %2593 = OpLoad %float %dist_2
       %2594 = OpFMul %float %2592 %2593
       %2595 = OpLoad %float %cosTheta_3
       %2596 = OpFDiv %float %2594 %2595
               OpStore %lightPdf %2596
               OpLine %1 98 0
       %2598 = OpAccessChain %_ptr_Function_float %s_5 %int_1
       %2599 = OpLoad %float %2598
               OpStore %param_199 %2599
       %2601 = OpLoad %float %lightPdf
               OpStore %param_200 %2601
       %2602 = OpFunctionCall %float %MISWeight_f1_f1_ %param_199 %param_200
               OpStore %weight %2602
               OpBranch %2572
       %2572 = OpLabel
               OpLine %1 100 0
       %2603 = OpLoad %bool %rcVertexFound
               OpSelectionMerge %2605 None
               OpBranchConditional %2603 %2604 %2605
       %2604 = OpLabel
               OpLine %1 100 0
       %2607 = OpAccessChain %_ptr_Function_uint %pathSample %int_8
       %2608 = OpLoad %uint %2607
               OpStore %param_201 %2608
       %2609 = OpFunctionCall %uint %GRISPathFlagsGetRcVertexId_u1_ %param_201
       %2610 = OpLoad %int %bounce
       %2611 = OpBitcast %uint %2610
       %2612 = OpULessThan %bool %2609 %2611
               OpBranch %2605
       %2605 = OpLabel
       %2613 = OpPhi %bool %2603 %2572 %2612 %2604
               OpSelectionMerge %2615 None
               OpBranchConditional %2613 %2614 %2615
       %2614 = OpLabel
               OpLine %1 101 0
       %2616 = OpAccessChain %_ptr_Function_v3float %surf %int_2
       %2617 = OpLoad %v3float %2616
       %2618 = OpLoad %float %weight
       %2619 = OpVectorTimesScalar %v3float %2617 %2618
       %2620 = OpLoad %v3float %rcVertexThroughput
       %2621 = OpFMul %v3float %2619 %2620
       %2622 = OpAccessChain %_ptr_Function_v3float %pathSample %int_1
       %2623 = OpLoad %v3float %2622
       %2624 = OpFAdd %v3float %2623 %2621
       %2625 = OpAccessChain %_ptr_Function_v3float %pathSample %int_1
               OpStore %2625 %2624
               OpBranch %2615
       %2615 = OpLabel
               OpLine %1 103 0
       %2626 = OpAccessChain %_ptr_Function_v3float %surf %int_2
       %2627 = OpLoad %v3float %2626
       %2628 = OpLoad %float %weight
       %2629 = OpVectorTimesScalar %v3float %2627 %2628
       %2630 = OpLoad %v3float %throughput
       %2631 = OpFMul %v3float %2629 %2630
       %2632 = OpLoad %v3float %radiance_0
       %2633 = OpFAdd %v3float %2632 %2631
               OpStore %radiance_0 %2633
               OpBranch %2558
       %2558 = OpLabel
               OpLine %1 105 0
               OpBranch %2505
       %2549 = OpLabel
               OpLine %1 107 0
       %2637 = OpLoad %Material %mat_10
               OpStore %param_202 %2637
       %2638 = OpFunctionCall %bool %isBSDFConnectible_struct_Material_vf3_u1_u1_f1_f1_f11_ %param_202
               OpStore %isThisVertexConnectible %2638
               OpLine %1 109 0
       %2639 = OpLoad %bool %rcVertexFound
       %2640 = OpLogicalNot %bool %2639
       %2641 = OpLoad %bool %isLastVertexConnectible
       %2642 = OpLogicalAnd %bool %2640 %2641
       %2643 = OpLoad %bool %isThisVertexConnectible
       %2644 = OpLogicalAnd %bool %2642 %2643
               OpSelectionMerge %2646 None
               OpBranchConditional %2644 %2645 %2646
       %2645 = OpLabel
               OpLine %1 110 0
               OpStore %rcVertexFound %true
               OpLine %1 111 0
       %2647 = OpLoad %Intersection %isec_2
       %2648 = OpAccessChain %_ptr_Function_Intersection %pathSample %int_0
               OpStore %2648 %2647
               OpLine %1 112 0
       %2649 = OpAccessChain %_ptr_Function_v3float %pathSample %int_1
               OpStore %2649 %989
               OpLine %1 113 0
       %2650 = OpLoad %uint %rng_5
       %2651 = OpAccessChain %_ptr_Function_uint %pathSample %int_4
               OpStore %2651 %2650
               OpLine %1 114 0
       %2652 = OpLoad %int %bounce
       %2653 = OpBitcast %uint %2652
       %2655 = OpAccessChain %_ptr_Function_uint %pathSample %int_8
       %2656 = OpLoad %uint %2655
               OpStore %param_203 %2656
               OpStore %param_204 %2653
       %2658 = OpFunctionCall %void %GRISPathFlagsSetRcVertexId_u1_u1_ %param_203 %param_204
       %2659 = OpLoad %uint %param_203
       %2660 = OpAccessChain %_ptr_Function_uint %pathSample %int_8
               OpStore %2660 %2659
               OpBranch %2646
       %2646 = OpLabel
               OpLine %1 117 0
       %2661 = OpLoad %int %bounce
       %2662 = OpSGreaterThan %bool %2661 %int_0
               OpSelectionMerge %2664 None
               OpBranchConditional %2662 %2663 %2664
       %2663 = OpLabel
               OpLine %1 117 0
       %2666 = OpLoad %Material %mat_10
               OpStore %param_205 %2666
       %2667 = OpFunctionCall %bool %isBSDFDelta_struct_Material_vf3_u1_u1_f1_f1_f11_ %param_205
       %2668 = OpLogicalNot %bool %2667
               OpBranch %2664
       %2664 = OpLabel
       %2669 = OpPhi %bool %2662 %2646 %2668 %2663
       %2670 = OpLoad %bool %rcVertexFound
       %2671 = OpLogicalAnd %bool %2669 %2670
               OpSelectionMerge %2673 None
               OpBranchConditional %2671 %2672 %2673
       %2672 = OpLabel
               OpLine %1 123 0
       %2679 = OpAccessChain %_ptr_Function_v3float %surf %int_0
       %2680 = OpLoad %v3float %2679
               OpStore %param_206 %2680
       %2685 = OpLoad %uint %rng_5
               OpStore %param_210 %2685
       %2686 = OpFunctionCall %v3float %sampleLight_vf3_vf3_f1_f1_u1_ %param_206 %param_207 %param_208 %param_209 %param_210
       %2687 = OpLoad %v3float %param_207
               OpStore %lightDir %2687
       %2688 = OpLoad %float %param_208
               OpStore %lightDist %2688
       %2689 = OpLoad %float %param_209
               OpStore %lightPdf_0 %2689
       %2690 = OpLoad %uint %param_210
               OpStore %rng_5 %2690
               OpStore %lightRadiance %2686
               OpLine %1 125 0
               OpLine %1 129 0
               OpLine %1 128 0
       %2693 = OpLoad %float %lightDist
       %2694 = OpFSub %float %2693 %float_9_99999975en05
               OpStore %param_211 %uint_13
               OpStore %param_212 %uint_255
       %2698 = OpAccessChain %_ptr_Function_v3float %surf %int_0
       %2699 = OpLoad %v3float %2698
               OpStore %param_213 %2699
               OpStore %param_214 %float_9_99999975en05
       %2702 = OpLoad %v3float %lightDir
               OpStore %param_215 %2702
               OpStore %param_216 %2694
       %2704 = OpFunctionCall %bool %rayQueryTraceShadow_as1_u1_u1_vf3_f1_vf3_f1_ %uTLAS %param_211 %param_212 %param_213 %param_214 %param_215 %param_216
               OpStore %shadowed %2704
               OpLine %1 131 0
       %2705 = OpLoad %bool %shadowed
       %2706 = OpLogicalNot %bool %2705
       %2707 = OpLoad %float %lightPdf_0
       %2708 = OpFOrdGreaterThan %bool %2707 %float_9_99999997en07
       %2709 = OpLogicalAnd %bool %2706 %2708
               OpSelectionMerge %2711 None
               OpBranchConditional %2709 %2710 %2711
       %2710 = OpLabel
               OpLine %1 132 0
       %2714 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2715 = OpLoad %v3float %2714
               OpStore %param_217 %2715
       %2717 = OpLoad %v3float %lightDir
               OpStore %param_218 %2717
       %2718 = OpFunctionCall %float %absDot_vf3_vf3_ %param_217 %param_218
       %2719 = OpFMul %float %2718 %float_0_318309873
               OpStore %bsdfPdf %2719
               OpLine %1 133 0
       %2722 = OpLoad %float %lightPdf_0
               OpStore %param_219 %2722
       %2724 = OpLoad %float %bsdfPdf
               OpStore %param_220 %2724
       %2725 = OpFunctionCall %float %MISWeight_f1_f1_ %param_219 %param_220
               OpStore %weight_0 %2725
               OpLine %1 134 0
       %2727 = OpLoad %v3float %lightRadiance
       %2729 = OpLoad %Material %mat_10
               OpStore %param_221 %2729
       %2731 = OpAccessChain %_ptr_Function_v3float %surf %int_2
       %2732 = OpLoad %v3float %2731
               OpStore %param_222 %2732
       %2734 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2735 = OpLoad %v3float %2734
               OpStore %param_223 %2735
       %2737 = OpLoad %v3float %wo_10
               OpStore %param_224 %2737
       %2739 = OpLoad %v3float %lightDir
               OpStore %param_225 %2739
       %2740 = OpFunctionCall %v3float %evalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ %param_221 %param_222 %param_223 %param_224 %param_225
       %2741 = OpFMul %v3float %2727 %2740
       %2743 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2744 = OpLoad %v3float %2743
               OpStore %param_226 %2744
       %2746 = OpLoad %v3float %lightDir
               OpStore %param_227 %2746
       %2747 = OpFunctionCall %float %satDot_vf3_vf3_ %param_226 %param_227
       %2748 = OpVectorTimesScalar %v3float %2741 %2747
       %2749 = OpLoad %float %lightPdf_0
       %2750 = OpCompositeConstruct %v3float %2749 %2749 %2749
       %2751 = OpFDiv %v3float %2748 %2750
               OpStore %lightTerms %2751
               OpLine %1 135 0
       %2752 = OpLoad %v3float %lightTerms
       %2753 = OpLoad %float %weight_0
       %2754 = OpVectorTimesScalar %v3float %2752 %2753
       %2755 = OpLoad %v3float %throughput
       %2756 = OpFMul %v3float %2754 %2755
       %2757 = OpLoad %v3float %radiance_0
       %2758 = OpFAdd %v3float %2757 %2756
               OpStore %radiance_0 %2758
               OpLine %1 136 0
       %2759 = OpLoad %v3float %lightTerms
       %2760 = OpLoad %float %weight_0
       %2761 = OpVectorTimesScalar %v3float %2759 %2760
       %2762 = OpLoad %v3float %rcVertexThroughput
       %2763 = OpFMul %v3float %2761 %2762
       %2764 = OpAccessChain %_ptr_Function_v3float %pathSample %int_1
       %2765 = OpLoad %v3float %2764
       %2766 = OpFAdd %v3float %2765 %2763
       %2767 = OpAccessChain %_ptr_Function_v3float %pathSample %int_1
               OpStore %2767 %2766
               OpBranch %2711
       %2711 = OpLabel
               OpBranch %2673
       %2673 = OpLabel
               OpLine %1 139 0
       %2768 = OpLoad %int %bounce
       %2769 = OpSGreaterThan %bool %2768 %int_4
               OpSelectionMerge %2771 None
               OpBranchConditional %2769 %2770 %2771
       %2770 = OpLabel
               OpLine %1 140 0
       %2774 = OpLoad %v3float %throughput
               OpStore %param_228 %2774
       %2775 = OpFunctionCall %float %luminance_vf3_ %param_228
       %2776 = OpFSub %float %float_1 %2775
       %2777 = OpExtInst %float %12 FMax %2776 %float_0
               OpStore %pdfTerminate %2777
               OpLine %1 142 0
       %2779 = OpLoad %uint %rng_5
               OpStore %param_229 %2779
       %2780 = OpFunctionCall %float %sample1f_u1_ %param_229
       %2781 = OpLoad %uint %param_229
               OpStore %rng_5 %2781
       %2782 = OpLoad %float %pdfTerminate
       %2783 = OpFOrdLessThan %bool %2780 %2782
               OpSelectionMerge %2785 None
               OpBranchConditional %2783 %2784 %2785
       %2784 = OpLabel
               OpLine %1 143 0
               OpBranch %2505
       %2785 = OpLabel
               OpLine %1 145 0
       %2787 = OpLoad %float %pdfTerminate
       %2788 = OpFSub %float %float_1 %2787
       %2789 = OpLoad %v3float %throughput
       %2790 = OpCompositeConstruct %v3float %2788 %2788 %2788
       %2791 = OpFDiv %v3float %2789 %2790
               OpStore %throughput %2791
               OpBranch %2771
       %2771 = OpLabel
               OpLine %1 148 0
       %2793 = OpLoad %uint %rng_5
               OpStore %param_230 %2793
       %2794 = OpFunctionCall %v3float %sample3f_u1_ %param_230
       %2795 = OpLoad %uint %param_230
               OpStore %rng_5 %2795
       %2797 = OpLoad %Material %mat_10
               OpStore %param_231 %2797
       %2799 = OpAccessChain %_ptr_Function_v3float %surf %int_2
       %2800 = OpLoad %v3float %2799
               OpStore %param_232 %2800
       %2802 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2803 = OpLoad %v3float %2802
               OpStore %param_233 %2803
       %2805 = OpLoad %v3float %wo_10
               OpStore %param_234 %2805
               OpStore %param_235 %2794
       %2808 = OpFunctionCall %bool %sampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ %param_231 %param_232 %param_233 %param_234 %param_235 %param_236
       %2809 = OpLoad %BSDFSample %param_236
               OpStore %s_5 %2809
       %2810 = OpLogicalNot %bool %2808
       %2811 = OpLogicalNot %bool %2810
               OpSelectionMerge %2813 None
               OpBranchConditional %2811 %2812 %2813
       %2812 = OpLabel
               OpLine %1 148 0
       %2814 = OpAccessChain %_ptr_Function_float %s_5 %int_1
       %2815 = OpLoad %float %2814
       %2816 = OpFOrdLessThan %bool %2815 %float_9_99999997en07
               OpBranch %2813
       %2813 = OpLabel
       %2817 = OpPhi %bool %2810 %2771 %2816 %2812
               OpSelectionMerge %2819 None
               OpBranchConditional %2817 %2818 %2819
       %2818 = OpLabel
               OpLine %1 149 0
               OpBranch %2505
       %2819 = OpLabel
               OpLine %1 152 0
       %2823 = OpAccessChain %_ptr_Function_uint %s_5 %int_3
       %2824 = OpLoad %uint %2823
               OpStore %param_237 %2824
       %2825 = OpFunctionCall %bool %isSampleTypeDelta_u1_ %param_237
               OpSelectionMerge %2828 None
               OpBranchConditional %2825 %2827 %2829
       %2827 = OpLabel
               OpStore %2826 %float_1
               OpBranch %2828
       %2829 = OpLabel
               OpLine %1 152 0
       %2831 = OpAccessChain %_ptr_Function_v3float %surf %int_1
       %2832 = OpLoad %v3float %2831
               OpStore %param_238 %2832
       %2834 = OpAccessChain %_ptr_Function_v3float %s_5 %int_0
       %2835 = OpLoad %v3float %2834
               OpStore %param_239 %2835
       %2836 = OpFunctionCall %float %absDot_vf3_vf3_ %param_238 %param_239
               OpStore %2826 %2836
               OpBranch %2828
       %2828 = OpLabel
       %2837 = OpLoad %float %2826
               OpStore %cosTheta_4 %2837
               OpLine %1 153 0
       %2839 = OpAccessChain %_ptr_Function_v3float %s_5 %int_2
       %2840 = OpLoad %v3float %2839
       %2841 = OpLoad %float %cosTheta_4
       %2842 = OpVectorTimesScalar %v3float %2840 %2841
       %2843 = OpAccessChain %_ptr_Function_float %s_5 %int_1
       %2844 = OpLoad %float %2843
       %2845 = OpCompositeConstruct %v3float %2844 %2844 %2844
       %2846 = OpFDiv %v3float %2842 %2845
               OpStore %scatterTerm %2846
               OpLine %1 154 0
       %2847 = OpLoad %v3float %scatterTerm
       %2848 = OpLoad %v3float %throughput
       %2849 = OpFMul %v3float %2848 %2847
               OpStore %throughput %2849
       %2850 = OpLoad %bool %rcVertexFound
               OpSelectionMerge %2852 None
               OpBranchConditional %2850 %2851 %2852
       %2851 = OpLabel
               OpLine %1 157 0
       %2854 = OpAccessChain %_ptr_Function_uint %pathSample %int_8
       %2855 = OpLoad %uint %2854
               OpStore %param_240 %2855
       %2856 = OpFunctionCall %uint %GRISPathFlagsGetRcVertexId_u1_ %param_240
       %2857 = OpLoad %int %bounce
       %2858 = OpBitcast %uint %2857
       %2859 = OpIEqual %bool %2856 %2858
               OpSelectionMerge %2861 None
               OpBranchConditional %2859 %2860 %2861
       %2860 = OpLabel
               OpLine %1 159 0
       %2862 = OpAccessChain %_ptr_Function_v3float %s_5 %int_0
       %2863 = OpLoad %v3float %2862
       %2864 = OpAccessChain %_ptr_Function_v3float %pathSample %int_3
               OpStore %2864 %2863
               OpBranch %2861
       %2861 = OpLabel
               OpLine %1 161 0
       %2865 = OpLoad %v3float %scatterTerm
       %2866 = OpLoad %v3float %rcVertexThroughput
       %2867 = OpFMul %v3float %2866 %2865
               OpStore %rcVertexThroughput %2867
               OpBranch %2852
       %2852 = OpLabel
               OpLine %1 164 0
       %2868 = OpAccessChain %_ptr_Function_v3float %surf %int_0
       %2869 = OpLoad %v3float %2868
               OpStore %lastPos %2869
               OpLine %1 165 0
       %2870 = OpAccessChain %_ptr_Function_v3float %s_5 %int_0
       %2871 = OpLoad %v3float %2870
       %2872 = OpFNegate %v3float %2871
               OpStore %wo_10 %2872
               OpLine %1 166 0
       %2873 = OpAccessChain %_ptr_Function_v3float %s_5 %int_0
       %2874 = OpLoad %v3float %2873
       %2875 = OpAccessChain %_ptr_Function_v3float %ray %int_1
               OpStore %2875 %2874
               OpLine %1 167 0
       %2876 = OpAccessChain %_ptr_Function_v3float %surf %int_0
       %2877 = OpLoad %v3float %2876
       %2878 = OpAccessChain %_ptr_Function_v3float %ray %int_1
       %2879 = OpLoad %v3float %2878
       %2880 = OpVectorTimesScalar %v3float %2879 %float_9_99999975en05
       %2881 = OpFAdd %v3float %2877 %2880
       %2882 = OpAccessChain %_ptr_Function_v3float %ray %int_0
               OpStore %2882 %2881
               OpLine %1 168 0
       %2883 = OpLoad %bool %isThisVertexConnectible
               OpStore %isLastVertexConnectible %2883
               OpBranch %2506
       %2506 = OpLabel
               OpLine %1 73 0
       %2884 = OpLoad %int %bounce
       %2885 = OpIAdd %int %2884 %int_1
               OpStore %bounce %2885
               OpBranch %2503
       %2505 = OpLabel
               OpLine %1 170 0
       %2887 = OpAccessChain %_ptr_Function_uint %pathSample %int_8
       %2888 = OpLoad %uint %2887
               OpStore %param_241 %2888
       %2889 = OpFunctionCall %uint %GRISPathFlagsGetRcVertexId_u1_ %param_241
       %2890 = OpConvertUToF %float %2889
       %2891 = OpLoad %bool %rcVertexFound
       %2892 = OpSelect %float %2891 %float_1 %float_0
       %2893 = OpFMul %float %2890 %2892
       %2895 = OpFDiv %float %2893 %float_6
               OpStore %param_242 %2895
       %2897 = OpFunctionCall %v3float %colorWheel_f1_ %param_242
               OpStore %radiance_0 %2897
               OpLine %1 172 0
       %2899 = OpLoad %v3float %radiance_0
               OpStore %param_243 %2899
       %2900 = OpFunctionCall %v3float %clampColor_vf3_ %param_243
               OpStore %radiance_0 %2900
               OpLine %1 173 0
       %2902 = OpAccessChain %_ptr_Uniform_uint %__6 %int_0 %int_15
       %2903 = OpLoad %uint %2902
       %2905 = OpBitwiseAnd %uint %2903 %uint_2147483647
       %2906 = OpConvertUToF %float %2905
               OpStore %frameCount %2906
               OpLine %1 174 0
       %2908 = OpLoad %2403 %uIndirectOutput
       %2909 = OpLoad %v2uint %threadIdx
       %2910 = OpBitcast %v2int %2909
       %2911 = OpImageRead %v4float %2908 %2910
       %2912 = OpVectorShuffle %v3float %2911 %2911 0 1 2
               OpStore %accumulatedRadaince %2912
               OpLine %1 175 0
       %2913 = OpLoad %v3float %accumulatedRadaince
       %2914 = OpLoad %float %frameCount
       %2915 = OpVectorTimesScalar %v3float %2913 %2914
       %2916 = OpLoad %v3float %radiance_0
       %2917 = OpFAdd %v3float %2915 %2916
       %2918 = OpLoad %float %frameCount
       %2919 = OpFAdd %float %2918 %float_1
       %2920 = OpCompositeConstruct %v3float %2919 %2919 %2919
       %2921 = OpFDiv %v3float %2917 %2920
               OpStore %accumulatedRadaince %2921
               OpLine %1 177 0
       %2922 = OpLoad %2403 %uIndirectOutput
       %2923 = OpLoad %v2uint %threadIdx
       %2924 = OpBitcast %v2int %2923
       %2925 = OpLoad %v3float %accumulatedRadaince
       %2926 = OpCompositeExtract %float %2925 0
       %2927 = OpCompositeExtract %float %2925 1
       %2928 = OpCompositeExtract %float %2925 2
       %2929 = OpCompositeConstruct %v4float %2926 %2927 %2928 %float_1
               OpImageWrite %2922 %2924 %2929
               OpReturn
               OpFunctionEnd
               OpLine %10 33 43
%IntersectionIsValid_struct_Intersection_vf2_u1_u11_ = OpFunction %bool None %23
       %isec = OpFunctionParameter %_ptr_Function_Intersection
         %26 = OpLabel
               OpLine %10 34 0
        %379 = OpAccessChain %_ptr_Function_uint %isec %int_1
        %380 = OpLoad %uint %379
        %382 = OpINotEqual %bool %380 %uint_4294967295
               OpReturnValue %382
               OpFunctionEnd
               OpLine %10 37 76
%loadLightSurfaceInfo_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ = OpFunction %void None %32
%triangleIdx = OpFunctionParameter %_ptr_Function_uint
       %bary = OpFunctionParameter %_ptr_Function_v3float
       %info = OpFunctionParameter %_ptr_Function_SurfaceInfo
         %37 = OpLabel
    %light_0 = OpVariable %_ptr_Function_TriangleLight Function
               OpLine %10 38 0
        %392 = OpLoad %uint %triangleIdx
        %394 = OpAccessChain %_ptr_StorageBuffer_TriangleLight_0 %_ %int_0 %392
        %395 = OpLoad %TriangleLight_0 %394
        %396 = OpCopyLogical %TriangleLight %395
               OpStore %light_0 %396
               OpLine %10 40 0
        %397 = OpAccessChain %_ptr_Function_v3float %light_0 %int_0
        %398 = OpLoad %v3float %397
        %400 = OpAccessChain %_ptr_Function_float %bary %uint_0
        %401 = OpLoad %float %400
        %402 = OpVectorTimesScalar %v3float %398 %401
        %404 = OpAccessChain %_ptr_Function_v3float %light_0 %int_2
        %405 = OpLoad %v3float %404
        %407 = OpAccessChain %_ptr_Function_float %bary %uint_1
        %408 = OpLoad %float %407
        %409 = OpVectorTimesScalar %v3float %405 %408
        %410 = OpFAdd %v3float %402 %409
        %412 = OpAccessChain %_ptr_Function_v3float %light_0 %int_4
        %413 = OpLoad %v3float %412
        %415 = OpAccessChain %_ptr_Function_float %bary %uint_2
        %416 = OpLoad %float %415
        %417 = OpVectorTimesScalar %v3float %413 %416
        %418 = OpFAdd %v3float %410 %417
        %419 = OpAccessChain %_ptr_Function_v3float %info %int_0
               OpStore %419 %418
               OpLine %10 41 0
        %420 = OpAccessChain %_ptr_Function_float %light_0 %int_1
        %421 = OpLoad %float %420
        %423 = OpAccessChain %_ptr_Function_float %light_0 %int_3
        %424 = OpLoad %float %423
        %426 = OpAccessChain %_ptr_Function_float %light_0 %int_5
        %427 = OpLoad %float %426
        %428 = OpCompositeConstruct %v3float %421 %424 %427
        %429 = OpAccessChain %_ptr_Function_v3float %info %int_1
               OpStore %429 %428
               OpLine %10 42 0
        %431 = OpAccessChain %_ptr_Function_v3float %light_0 %int_6
        %432 = OpLoad %v3float %431
        %433 = OpAccessChain %_ptr_Function_v3float %info %int_2
               OpStore %433 %432
               OpReturn
               OpFunctionEnd
               OpLine %10 45 95
%loadObjectSurfaceInfo_u1_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ = OpFunction %void None %38
%instanceIdx = OpFunctionParameter %_ptr_Function_uint
%triangleIdx_0 = OpFunctionParameter %_ptr_Function_uint
     %bary_0 = OpFunctionParameter %_ptr_Function_v3float
     %info_0 = OpFunctionParameter %_ptr_Function_SurfaceInfo
         %44 = OpLabel
   %instance = OpVariable %_ptr_Function_ObjectInstance Function
         %i0 = OpVariable %_ptr_Function_uint Function
         %i1 = OpVariable %_ptr_Function_uint Function
         %i2 = OpVariable %_ptr_Function_uint Function
         %v0 = OpVariable %_ptr_Function_MeshVertex Function
         %v1 = OpVariable %_ptr_Function_MeshVertex Function
         %v2 = OpVariable %_ptr_Function_MeshVertex Function
        %pos = OpVariable %_ptr_Function_v3float Function
       %norm = OpVariable %_ptr_Function_v3float Function
        %uvx = OpVariable %_ptr_Function_float Function
        %uvy = OpVariable %_ptr_Function_float Function
     %texIdx = OpVariable %_ptr_Function_uint Function
               OpLine %10 46 0
        %442 = OpLoad %uint %instanceIdx
        %444 = OpAccessChain %_ptr_StorageBuffer_ObjectInstance_0 %__0 %int_0 %442
        %445 = OpLoad %ObjectInstance_0 %444
        %446 = OpCopyLogical %ObjectInstance %445
               OpStore %instance %446
               OpLine %10 48 0
        %451 = OpAccessChain %_ptr_Function_uint %instance %int_5
        %452 = OpLoad %uint %451
        %454 = OpUDiv %uint %452 %uint_3
        %455 = OpLoad %uint %triangleIdx_0
        %456 = OpIAdd %uint %454 %455
        %458 = OpAccessChain %_ptr_StorageBuffer_int %__1 %int_0 %456
        %459 = OpLoad %int %458
        %460 = OpBitcast %uint %459
        %461 = OpAccessChain %_ptr_Function_uint %info_0 %int_3
               OpStore %461 %460
               OpLine %10 50 0
        %467 = OpAccessChain %_ptr_Function_uint %instance %int_5
        %468 = OpLoad %uint %467
        %469 = OpLoad %uint %triangleIdx_0
        %470 = OpIMul %uint %469 %uint_3
        %471 = OpIAdd %uint %468 %470
        %472 = OpIAdd %uint %471 %uint_0
        %474 = OpAccessChain %_ptr_StorageBuffer_uint %__2 %int_0 %472
        %475 = OpLoad %uint %474
               OpStore %i0 %475
               OpLine %10 51 0
        %477 = OpAccessChain %_ptr_Function_uint %instance %int_5
        %478 = OpLoad %uint %477
        %479 = OpLoad %uint %triangleIdx_0
        %480 = OpIMul %uint %479 %uint_3
        %481 = OpIAdd %uint %478 %480
        %482 = OpIAdd %uint %481 %uint_1
        %483 = OpAccessChain %_ptr_StorageBuffer_uint %__2 %int_0 %482
        %484 = OpLoad %uint %483
               OpStore %i1 %484
               OpLine %10 52 0
        %486 = OpAccessChain %_ptr_Function_uint %instance %int_5
        %487 = OpLoad %uint %486
        %488 = OpLoad %uint %triangleIdx_0
        %489 = OpIMul %uint %488 %uint_3
        %490 = OpIAdd %uint %487 %489
        %491 = OpIAdd %uint %490 %uint_2
        %492 = OpAccessChain %_ptr_StorageBuffer_uint %__2 %int_0 %491
        %493 = OpLoad %uint %492
               OpStore %i2 %493
               OpLine %10 54 0
        %502 = OpLoad %uint %i0
        %504 = OpAccessChain %_ptr_StorageBuffer_MeshVertex_0 %__3 %int_0 %502
        %505 = OpLoad %MeshVertex_0 %504
        %506 = OpCopyLogical %MeshVertex %505
               OpStore %v0 %506
               OpLine %10 55 0
        %508 = OpLoad %uint %i1
        %509 = OpAccessChain %_ptr_StorageBuffer_MeshVertex_0 %__3 %int_0 %508
        %510 = OpLoad %MeshVertex_0 %509
        %511 = OpCopyLogical %MeshVertex %510
               OpStore %v1 %511
               OpLine %10 56 0
        %513 = OpLoad %uint %i2
        %514 = OpAccessChain %_ptr_StorageBuffer_MeshVertex_0 %__3 %int_0 %513
        %515 = OpLoad %MeshVertex_0 %514
        %516 = OpCopyLogical %MeshVertex %515
               OpStore %v2 %516
               OpLine %10 58 0
        %518 = OpAccessChain %_ptr_Function_v3float %v0 %int_0
        %519 = OpLoad %v3float %518
        %520 = OpAccessChain %_ptr_Function_float %bary_0 %uint_0
        %521 = OpLoad %float %520
        %522 = OpVectorTimesScalar %v3float %519 %521
        %523 = OpAccessChain %_ptr_Function_v3float %v1 %int_0
        %524 = OpLoad %v3float %523
        %525 = OpAccessChain %_ptr_Function_float %bary_0 %uint_1
        %526 = OpLoad %float %525
        %527 = OpVectorTimesScalar %v3float %524 %526
        %528 = OpFAdd %v3float %522 %527
        %529 = OpAccessChain %_ptr_Function_v3float %v2 %int_0
        %530 = OpLoad %v3float %529
        %531 = OpAccessChain %_ptr_Function_float %bary_0 %uint_2
        %532 = OpLoad %float %531
        %533 = OpVectorTimesScalar %v3float %530 %532
        %534 = OpFAdd %v3float %528 %533
               OpStore %pos %534
               OpLine %10 59 0
        %536 = OpAccessChain %_ptr_Function_v3float %v0 %int_2
        %537 = OpLoad %v3float %536
        %538 = OpAccessChain %_ptr_Function_float %bary_0 %uint_0
        %539 = OpLoad %float %538
        %540 = OpVectorTimesScalar %v3float %537 %539
        %541 = OpAccessChain %_ptr_Function_v3float %v1 %int_2
        %542 = OpLoad %v3float %541
        %543 = OpAccessChain %_ptr_Function_float %bary_0 %uint_1
        %544 = OpLoad %float %543
        %545 = OpVectorTimesScalar %v3float %542 %544
        %546 = OpFAdd %v3float %540 %545
        %547 = OpAccessChain %_ptr_Function_v3float %v2 %int_2
        %548 = OpLoad %v3float %547
        %549 = OpAccessChain %_ptr_Function_float %bary_0 %uint_2
        %550 = OpLoad %float %549
        %551 = OpVectorTimesScalar %v3float %548 %550
        %552 = OpFAdd %v3float %546 %551
               OpStore %norm %552
               OpLine %10 60 0
        %554 = OpAccessChain %_ptr_Function_float %v0 %int_1
        %555 = OpLoad %float %554
        %556 = OpAccessChain %_ptr_Function_float %bary_0 %uint_0
        %557 = OpLoad %float %556
        %558 = OpFMul %float %555 %557
        %559 = OpAccessChain %_ptr_Function_float %v1 %int_1
        %560 = OpLoad %float %559
        %561 = OpAccessChain %_ptr_Function_float %bary_0 %uint_1
        %562 = OpLoad %float %561
        %563 = OpFMul %float %560 %562
        %564 = OpFAdd %float %558 %563
        %565 = OpAccessChain %_ptr_Function_float %v2 %int_1
        %566 = OpLoad %float %565
        %567 = OpAccessChain %_ptr_Function_float %bary_0 %uint_2
        %568 = OpLoad %float %567
        %569 = OpFMul %float %566 %568
        %570 = OpFAdd %float %564 %569
               OpStore %uvx %570
               OpLine %10 61 0
        %572 = OpAccessChain %_ptr_Function_float %v0 %int_3
        %573 = OpLoad %float %572
        %574 = OpAccessChain %_ptr_Function_float %bary_0 %uint_0
        %575 = OpLoad %float %574
        %576 = OpFMul %float %573 %575
        %577 = OpAccessChain %_ptr_Function_float %v1 %int_3
        %578 = OpLoad %float %577
        %579 = OpAccessChain %_ptr_Function_float %bary_0 %uint_1
        %580 = OpLoad %float %579
        %581 = OpFMul %float %578 %580
        %582 = OpFAdd %float %576 %581
        %583 = OpAccessChain %_ptr_Function_float %v2 %int_3
        %584 = OpLoad %float %583
        %585 = OpAccessChain %_ptr_Function_float %bary_0 %uint_2
        %586 = OpLoad %float %585
        %587 = OpFMul %float %584 %586
        %588 = OpFAdd %float %582 %587
               OpStore %uvy %588
               OpLine %10 63 0
        %590 = OpAccessChain %_ptr_Function_mat4v4float %instance %int_0
        %591 = OpLoad %mat4v4float %590
        %592 = OpLoad %v3float %pos
        %594 = OpCompositeExtract %float %592 0
        %595 = OpCompositeExtract %float %592 1
        %596 = OpCompositeExtract %float %592 2
        %597 = OpCompositeConstruct %v4float %594 %595 %596 %float_1
        %598 = OpMatrixTimesVector %v4float %591 %597
        %599 = OpCompositeExtract %float %598 0
        %600 = OpCompositeExtract %float %598 1
        %601 = OpCompositeExtract %float %598 2
        %602 = OpCompositeConstruct %v3float %599 %600 %601
        %603 = OpAccessChain %_ptr_Function_v3float %info_0 %int_0
               OpStore %603 %602
               OpLine %10 64 0
        %604 = OpAccessChain %_ptr_Function_mat4v4float %instance %int_2
        %605 = OpLoad %mat4v4float %604
        %606 = OpLoad %v3float %norm
        %607 = OpCompositeExtract %float %606 0
        %608 = OpCompositeExtract %float %606 1
        %609 = OpCompositeExtract %float %606 2
        %610 = OpCompositeConstruct %v4float %607 %608 %609 %float_1
        %611 = OpMatrixTimesVector %v4float %605 %610
        %612 = OpCompositeExtract %float %611 0
        %613 = OpCompositeExtract %float %611 1
        %614 = OpCompositeExtract %float %611 2
        %615 = OpCompositeConstruct %v3float %612 %613 %614
        %616 = OpExtInst %v3float %12 Normalize %615
        %617 = OpAccessChain %_ptr_Function_v3float %info_0 %int_1
               OpStore %617 %616
               OpLine %10 66 0
        %624 = OpAccessChain %_ptr_Function_uint %info_0 %int_3
        %625 = OpLoad %uint %624
        %626 = OpAccessChain %_ptr_StorageBuffer_uint %__4 %int_0 %625 %int_2
        %627 = OpLoad %uint %626
               OpStore %texIdx %627
               OpLine %10 68 0
        %628 = OpLoad %uint %texIdx
        %629 = OpIEqual %bool %628 %uint_4294967295
               OpSelectionMerge %631 None
               OpBranchConditional %629 %630 %638
        %630 = OpLabel
               OpLine %10 69 0
        %632 = OpAccessChain %_ptr_Function_uint %info_0 %int_3
        %633 = OpLoad %uint %632
        %635 = OpAccessChain %_ptr_StorageBuffer_v3float %__4 %int_0 %633 %int_0
        %636 = OpLoad %v3float %635
        %637 = OpAccessChain %_ptr_Function_v3float %info_0 %int_2
               OpStore %637 %636
               OpBranch %631
        %638 = OpLabel
               OpLine %10 72 0
        %644 = OpLoad %uint %texIdx
        %645 = OpCopyObject %uint %644
        %647 = OpAccessChain %_ptr_UniformConstant_640 %uTextures %645
        %648 = OpLoad %640 %647
        %649 = OpLoad %float %uvx
        %650 = OpLoad %float %uvy
        %651 = OpCompositeConstruct %v2float %649 %650
        %653 = OpImageSampleExplicitLod %v4float %648 %651 Lod %float_0
        %654 = OpVectorShuffle %v3float %653 %653 0 1 2
        %655 = OpAccessChain %_ptr_Function_v3float %info_0 %int_2
               OpStore %655 %654
               OpBranch %631
        %631 = OpLabel
               OpLine %10 74 0
        %656 = OpAccessChain %_ptr_Function_uint %info_0 %int_3
        %657 = OpLoad %uint %656
        %658 = OpAccessChain %_ptr_Function_uint %info_0 %int_3
               OpStore %658 %657
               OpReturn
               OpFunctionEnd
               OpLine %10 77 89
%loadSurfaceInfo_u1_u1_vf2_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ = OpFunction %void None %46
%instanceIdx_0 = OpFunctionParameter %_ptr_Function_uint
%triangleIdx_1 = OpFunctionParameter %_ptr_Function_uint
     %bary_1 = OpFunctionParameter %_ptr_Function_v2float
     %info_1 = OpFunctionParameter %_ptr_Function_SurfaceInfo
         %52 = OpLabel
%barycentrics = OpVariable %_ptr_Function_v3float Function
      %param = OpVariable %_ptr_Function_uint Function
    %param_0 = OpVariable %_ptr_Function_v3float Function
    %param_1 = OpVariable %_ptr_Function_SurfaceInfo Function
    %param_2 = OpVariable %_ptr_Function_uint Function
    %param_3 = OpVariable %_ptr_Function_uint Function
    %param_4 = OpVariable %_ptr_Function_v3float Function
    %param_5 = OpVariable %_ptr_Function_SurfaceInfo Function
               OpLine %10 78 0
        %660 = OpAccessChain %_ptr_Function_float %bary_1 %uint_0
        %661 = OpLoad %float %660
        %662 = OpFSub %float %float_1 %661
        %663 = OpAccessChain %_ptr_Function_float %bary_1 %uint_1
        %664 = OpLoad %float %663
        %665 = OpFSub %float %662 %664
        %666 = OpAccessChain %_ptr_Function_float %bary_1 %uint_0
        %667 = OpLoad %float %666
        %668 = OpAccessChain %_ptr_Function_float %bary_1 %uint_1
        %669 = OpLoad %float %668
        %670 = OpCompositeConstruct %v3float %665 %667 %669
               OpStore %barycentrics %670
               OpLine %10 80 0
        %671 = OpLoad %uint %instanceIdx_0
        %672 = OpIEqual %bool %671 %uint_0
               OpSelectionMerge %674 None
               OpBranchConditional %672 %673 %685
        %673 = OpLabel
               OpLine %10 81 0
        %676 = OpLoad %uint %triangleIdx_1
               OpStore %param %676
        %678 = OpLoad %v3float %barycentrics
               OpStore %param_0 %678
        %680 = OpFunctionCall %void %loadLightSurfaceInfo_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ %param %param_0 %param_1
        %681 = OpLoad %SurfaceInfo %param_1
               OpStore %info_1 %681
               OpLine %10 82 0
        %684 = OpAccessChain %_ptr_Function_bool %info_1 %int_4
               OpStore %684 %true
               OpBranch %674
        %685 = OpLabel
               OpLine %10 85 0
        %686 = OpLoad %uint %instanceIdx_0
        %687 = OpISub %uint %686 %uint_1
               OpStore %param_2 %687
        %690 = OpLoad %uint %triangleIdx_1
               OpStore %param_3 %690
        %692 = OpLoad %v3float %barycentrics
               OpStore %param_4 %692
        %694 = OpFunctionCall %void %loadObjectSurfaceInfo_u1_u1_vf3_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ %param_2 %param_3 %param_4 %param_5
        %695 = OpLoad %SurfaceInfo %param_5
               OpStore %info_1 %695
               OpLine %10 86 0
        %697 = OpAccessChain %_ptr_Function_bool %info_1 %int_4
               OpStore %697 %false
               OpBranch %674
        %674 = OpLabel
               OpReturn
               OpFunctionEnd
               OpLine %10 90 61
%loadSurfaceInfo_struct_Intersection_vf2_u1_u11_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ = OpFunction %void None %53
     %isec_0 = OpFunctionParameter %_ptr_Function_Intersection
     %info_2 = OpFunctionParameter %_ptr_Function_SurfaceInfo
         %57 = OpLabel
    %param_6 = OpVariable %_ptr_Function_uint Function
    %param_7 = OpVariable %_ptr_Function_uint Function
    %param_8 = OpVariable %_ptr_Function_v2float Function
    %param_9 = OpVariable %_ptr_Function_SurfaceInfo Function
               OpLine %10 91 0
        %699 = OpAccessChain %_ptr_Function_uint %isec_0 %int_1
        %700 = OpLoad %uint %699
               OpStore %param_6 %700
        %702 = OpAccessChain %_ptr_Function_uint %isec_0 %int_2
        %703 = OpLoad %uint %702
               OpStore %param_7 %703
        %705 = OpAccessChain %_ptr_Function_v2float %isec_0 %int_0
        %706 = OpLoad %v2float %705
               OpStore %param_8 %706
        %708 = OpFunctionCall %void %loadSurfaceInfo_u1_u1_vf2_struct_SurfaceInfo_vf3_vf3_vf3_u1_b11_ %param_6 %param_7 %param_8 %param_9
        %709 = OpLoad %SurfaceInfo %param_9
               OpStore %info_2 %709
               OpReturn
               OpFunctionEnd
               OpLine %11 10 1
%rayQueryTraceShadow_as1_u1_u1_vf3_f1_vf3_f1_ = OpFunction %bool None %61
%topLevelAccelStructure = OpFunctionParameter %_ptr_UniformConstant_58
   %rayFlags = OpFunctionParameter %_ptr_Function_uint
    %rayMask = OpFunctionParameter %_ptr_Function_uint
     %origin = OpFunctionParameter %_ptr_Function_v3float
    %minDist = OpFunctionParameter %_ptr_Function_float
  %direction = OpFunctionParameter %_ptr_Function_v3float
    %maxDist = OpFunctionParameter %_ptr_Function_float
         %70 = OpLabel
               OpLine %11 18 0
        %713 = OpLoad %58 %topLevelAccelStructure
        %714 = OpLoad %uint %rayFlags
        %715 = OpLoad %uint %rayMask
        %716 = OpLoad %v3float %origin
        %717 = OpLoad %float %minDist
        %718 = OpLoad %v3float %direction
        %719 = OpLoad %float %maxDist
               OpRayQueryInitializeKHR %rayQuery %713 %714 %715 %716 %717 %718 %719
               OpBranch %720
        %720 = OpLabel
               OpLine %11 20 0
               OpLoopMerge %722 %723 None
               OpBranch %724
        %724 = OpLabel
               OpLine %11 20 0
        %725 = OpRayQueryProceedKHR %bool %rayQuery
               OpBranchConditional %725 %721 %722
        %721 = OpLabel
               OpLine %11 21 0
        %726 = OpRayQueryGetIntersectionTypeKHR %uint %rayQuery %int_0
        %727 = OpIEqual %bool %726 %uint_0
               OpSelectionMerge %729 None
               OpBranchConditional %727 %728 %729
        %728 = OpLabel
               OpBranch %729
        %729 = OpLabel
               OpBranch %723
        %723 = OpLabel
               OpBranch %720
        %722 = OpLabel
               OpLine %11 25 0
        %730 = OpRayQueryGetIntersectionTypeKHR %uint %rayQuery %int_1
        %731 = OpINotEqual %bool %730 %uint_0
               OpReturnValue %731
               OpFunctionEnd
               OpLine %11 32 1
%rayQueryTraceClosestHit_as1_u1_u1_vf3_f1_vf3_f1_ = OpFunction %Intersection None %71
%topLevelAccelStructure_0 = OpFunctionParameter %_ptr_UniformConstant_58
 %rayFlags_0 = OpFunctionParameter %_ptr_Function_uint
  %rayMask_0 = OpFunctionParameter %_ptr_Function_uint
   %origin_0 = OpFunctionParameter %_ptr_Function_v3float
  %minDist_0 = OpFunctionParameter %_ptr_Function_float
%direction_0 = OpFunctionParameter %_ptr_Function_v3float
  %maxDist_0 = OpFunctionParameter %_ptr_Function_float
         %80 = OpLabel
     %isec_1 = OpVariable %_ptr_Function_Intersection Function
               OpLine %11 41 0
        %735 = OpLoad %58 %topLevelAccelStructure_0
        %736 = OpLoad %uint %rayFlags_0
        %737 = OpLoad %uint %rayMask_0
        %738 = OpLoad %v3float %origin_0
        %739 = OpLoad %float %minDist_0
        %740 = OpLoad %v3float %direction_0
        %741 = OpLoad %float %maxDist_0
               OpRayQueryInitializeKHR %rayQuery_0 %735 %736 %737 %738 %739 %740 %741
               OpBranch %742
        %742 = OpLabel
               OpLine %11 43 0
               OpLoopMerge %744 %745 None
               OpBranch %746
        %746 = OpLabel
               OpLine %11 43 0
        %747 = OpRayQueryProceedKHR %bool %rayQuery_0
               OpBranchConditional %747 %743 %744
        %743 = OpLabel
               OpLine %11 44 0
        %748 = OpRayQueryGetIntersectionTypeKHR %uint %rayQuery_0 %int_0
        %749 = OpIEqual %bool %748 %uint_0
               OpSelectionMerge %751 None
               OpBranchConditional %749 %750 %751
        %750 = OpLabel
               OpBranch %751
        %751 = OpLabel
               OpBranch %745
        %745 = OpLabel
               OpBranch %742
        %744 = OpLabel
               OpLine %11 49 0
        %752 = OpRayQueryGetIntersectionTypeKHR %uint %rayQuery_0 %int_1
        %753 = OpINotEqual %bool %752 %uint_0
               OpSelectionMerge %755 None
               OpBranchConditional %753 %754 %765
        %754 = OpLabel
               OpLine %11 50 0
        %757 = OpRayQueryGetIntersectionBarycentricsKHR %v2float %rayQuery_0 %int_1
        %758 = OpAccessChain %_ptr_Function_v2float %isec_1 %int_0
               OpStore %758 %757
               OpLine %11 51 0
        %759 = OpRayQueryGetIntersectionInstanceCustomIndexKHR %int %rayQuery_0 %int_1
        %760 = OpBitcast %uint %759
        %761 = OpAccessChain %_ptr_Function_uint %isec_1 %int_1
               OpStore %761 %760
               OpLine %11 52 0
        %762 = OpRayQueryGetIntersectionPrimitiveIndexKHR %int %rayQuery_0 %int_1
        %763 = OpBitcast %uint %762
        %764 = OpAccessChain %_ptr_Function_uint %isec_1 %int_2
               OpStore %764 %763
               OpBranch %755
        %765 = OpLabel
               OpLine %11 55 0
        %766 = OpAccessChain %_ptr_Function_uint %isec_1 %int_1
               OpStore %766 %uint_4294967295
               OpBranch %755
        %755 = OpLabel
               OpLine %11 57 0
        %767 = OpLoad %Intersection %isec_1
               OpReturnValue %767
               OpFunctionEnd
               OpLine %9 23 29
%toConcentricDisk_vf2_ = OpFunction %v2float None %81
          %v = OpFunctionParameter %_ptr_Function_v2float
         %84 = OpLabel
        %r_8 = OpVariable %_ptr_Function_float Function
        %phi = OpVariable %_ptr_Function_float Function
               OpLine %9 24 0
        %770 = OpAccessChain %_ptr_Function_float %v %uint_0
        %771 = OpLoad %float %770
        %772 = OpFOrdEqual %bool %771 %float_0
               OpSelectionMerge %774 None
               OpBranchConditional %772 %773 %774
        %773 = OpLabel
               OpLine %9 24 0
        %775 = OpAccessChain %_ptr_Function_float %v %uint_1
        %776 = OpLoad %float %775
        %777 = OpFOrdEqual %bool %776 %float_0
               OpBranch %774
        %774 = OpLabel
        %778 = OpPhi %bool %772 %84 %777 %773
               OpSelectionMerge %780 None
               OpBranchConditional %778 %779 %780
        %779 = OpLabel
               OpLine %9 25 0
               OpReturnValue %781
        %780 = OpLabel
               OpLine %9 27 0
        %783 = OpLoad %v2float %v
        %785 = OpVectorTimesScalar %v2float %783 %float_2
        %786 = OpCompositeConstruct %v2float %float_1 %float_1
        %787 = OpFSub %v2float %785 %786
               OpStore %v %787
               OpLine %9 30 0
        %788 = OpAccessChain %_ptr_Function_float %v %uint_0
        %789 = OpLoad %float %788
        %790 = OpAccessChain %_ptr_Function_float %v %uint_0
        %791 = OpLoad %float %790
        %792 = OpFMul %float %789 %791
        %793 = OpAccessChain %_ptr_Function_float %v %uint_1
        %794 = OpLoad %float %793
        %795 = OpAccessChain %_ptr_Function_float %v %uint_1
        %796 = OpLoad %float %795
        %797 = OpFMul %float %794 %796
        %798 = OpFOrdGreaterThan %bool %792 %797
               OpSelectionMerge %800 None
               OpBranchConditional %798 %799 %814
        %799 = OpLabel
               OpLine %9 31 0
        %802 = OpAccessChain %_ptr_Function_float %v %uint_0
        %803 = OpLoad %float %802
               OpStore %r_8 %803
               OpLine %9 32 0
        %806 = OpAccessChain %_ptr_Function_float %v %uint_1
        %807 = OpLoad %float %806
        %808 = OpFMul %float %float_3_14159274 %807
        %809 = OpAccessChain %_ptr_Function_float %v %uint_0
        %810 = OpLoad %float %809
        %811 = OpFDiv %float %808 %810
        %813 = OpFMul %float %811 %float_0_25
               OpStore %phi %813
               OpBranch %800
        %814 = OpLabel
               OpLine %9 35 0
        %815 = OpAccessChain %_ptr_Function_float %v %uint_1
        %816 = OpLoad %float %815
               OpStore %r_8 %816
               OpLine %9 36 0
        %818 = OpAccessChain %_ptr_Function_float %v %uint_0
        %819 = OpLoad %float %818
        %820 = OpFMul %float %float_3_14159274 %819
        %821 = OpAccessChain %_ptr_Function_float %v %uint_1
        %822 = OpLoad %float %821
        %823 = OpFDiv %float %820 %822
        %824 = OpFMul %float %823 %float_0_25
        %825 = OpFSub %float %float_1_57079637 %824
               OpStore %phi %825
               OpBranch %800
        %800 = OpLabel
               OpLine %9 38 0
        %826 = OpLoad %float %r_8
        %827 = OpLoad %float %phi
        %828 = OpExtInst %float %12 Cos %827
        %829 = OpFMul %float %826 %828
        %830 = OpLoad %float %r_8
        %831 = OpLoad %float %phi
        %832 = OpExtInst %float %12 Sin %831
        %833 = OpFMul %float %830 %832
        %834 = OpCompositeConstruct %v2float %829 %833
               OpReturnValue %834
               OpFunctionEnd
               OpLine %9 41 28
%satDot_vf3_vf3_ = OpFunction %float None %85
          %a = OpFunctionParameter %_ptr_Function_v3float
          %b = OpFunctionParameter %_ptr_Function_v3float
         %89 = OpLabel
               OpLine %9 42 0
        %837 = OpLoad %v3float %a
        %838 = OpLoad %v3float %b
        %839 = OpDot %float %837 %838
        %840 = OpExtInst %float %12 FMax %839 %float_0
               OpReturnValue %840
               OpFunctionEnd
               OpLine %9 45 28
%absDot_vf3_vf3_ = OpFunction %float None %85
        %a_0 = OpFunctionParameter %_ptr_Function_v3float
        %b_0 = OpFunctionParameter %_ptr_Function_v3float
         %93 = OpLabel
               OpLine %9 46 0
        %843 = OpLoad %v3float %a_0
        %844 = OpLoad %v3float %b_0
        %845 = OpDot %float %843 %844
        %846 = OpExtInst %float %12 FAbs %845
               OpReturnValue %846
               OpFunctionEnd
               OpLine %9 69 23
%getTangent_vf3_ = OpFunction %v3float None %94
          %n = OpFunctionParameter %_ptr_Function_v3float
         %97 = OpLabel
               OpLine %9 70 0
        %849 = OpAccessChain %_ptr_Function_float %n %uint_2
        %850 = OpLoad %float %849
        %851 = OpExtInst %float %12 FAbs %850
        %853 = OpFOrdGreaterThan %bool %851 %float_0_999000013
        %856 = OpSelect %v3float %853 %854 %855
               OpReturnValue %856
               OpFunctionEnd
               OpLine %9 73 28
%matLocalToWorld_vf3_ = OpFunction %mat3v3float None %99
        %n_0 = OpFunctionParameter %_ptr_Function_v3float
        %102 = OpLabel
          %t = OpVariable %_ptr_Function_v3float Function
   %param_10 = OpVariable %_ptr_Function_v3float Function
        %b_1 = OpVariable %_ptr_Function_v3float Function
               OpLine %9 74 0
        %861 = OpLoad %v3float %n_0
               OpStore %param_10 %861
        %862 = OpFunctionCall %v3float %getTangent_vf3_ %param_10
               OpStore %t %862
               OpLine %9 75 0
        %864 = OpLoad %v3float %n_0
        %865 = OpLoad %v3float %t
        %866 = OpExtInst %v3float %12 Cross %864 %865
        %867 = OpExtInst %v3float %12 Normalize %866
               OpStore %b_1 %867
               OpLine %9 76 0
        %868 = OpLoad %v3float %b_1
        %869 = OpLoad %v3float %n_0
        %870 = OpExtInst %v3float %12 Cross %868 %869
               OpStore %t %870
               OpLine %9 77 0
        %871 = OpLoad %v3float %t
        %872 = OpLoad %v3float %b_1
        %873 = OpLoad %v3float %n_0
        %874 = OpCompositeExtract %float %871 0
        %875 = OpCompositeExtract %float %871 1
        %876 = OpCompositeExtract %float %871 2
        %877 = OpCompositeExtract %float %872 0
        %878 = OpCompositeExtract %float %872 1
        %879 = OpCompositeExtract %float %872 2
        %880 = OpCompositeExtract %float %873 0
        %881 = OpCompositeExtract %float %873 1
        %882 = OpCompositeExtract %float %873 2
        %883 = OpCompositeConstruct %v3float %874 %875 %876
        %884 = OpCompositeConstruct %v3float %877 %878 %879
        %885 = OpCompositeConstruct %v3float %880 %881 %882
        %886 = OpCompositeConstruct %mat3v3float %883 %884 %885
               OpReturnValue %886
               OpFunctionEnd
               OpLine %9 80 33
%localToWorld_vf3_vf3_ = OpFunction %v3float None %103
        %n_1 = OpFunctionParameter %_ptr_Function_v3float
        %v_0 = OpFunctionParameter %_ptr_Function_v3float
        %107 = OpLabel
   %param_11 = OpVariable %_ptr_Function_v3float Function
               OpLine %9 82 0
        %890 = OpLoad %v3float %n_1
               OpStore %param_11 %890
        %891 = OpFunctionCall %mat3v3float %matLocalToWorld_vf3_ %param_11
        %892 = OpLoad %v3float %v_0
        %893 = OpMatrixTimesVector %v3float %891 %892
        %894 = OpExtInst %v3float %12 Normalize %893
               OpReturnValue %894
               OpFunctionEnd
               OpLine %9 85 51
%sampleCosineWeightedHemisphere_vf3_vf2_ = OpFunction %v3float None %108
        %n_2 = OpFunctionParameter %_ptr_Function_v3float
          %u = OpFunctionParameter %_ptr_Function_v2float
        %112 = OpLabel
       %uv_1 = OpVariable %_ptr_Function_v2float Function
   %param_12 = OpVariable %_ptr_Function_v2float Function
          %z = OpVariable %_ptr_Function_float Function
   %param_13 = OpVariable %_ptr_Function_v3float Function
   %param_14 = OpVariable %_ptr_Function_v3float Function
               OpLine %9 86 0
        %899 = OpLoad %v2float %u
               OpStore %param_12 %899
        %900 = OpFunctionCall %v2float %toConcentricDisk_vf2_ %param_12
               OpStore %uv_1 %900
               OpLine %9 87 0
        %902 = OpLoad %v2float %uv_1
        %903 = OpLoad %v2float %uv_1
        %904 = OpDot %float %902 %903
        %905 = OpFSub %float %float_1 %904
        %906 = OpExtInst %float %12 Sqrt %905
               OpStore %z %906
               OpLine %9 88 0
        %907 = OpLoad %v2float %uv_1
        %908 = OpLoad %float %z
        %909 = OpCompositeExtract %float %907 0
        %910 = OpCompositeExtract %float %907 1
        %911 = OpCompositeConstruct %v3float %909 %910 %908
        %913 = OpLoad %v3float %n_2
               OpStore %param_13 %913
               OpStore %param_14 %911
        %915 = OpFunctionCall %v3float %localToWorld_vf3_vf3_ %param_13 %param_14
               OpReturnValue %915
               OpFunctionEnd
               OpLine %9 117 62
%sampleTriangleUniform_vf3_vf3_vf3_vf2_ = OpFunction %v3float None %113
         %va = OpFunctionParameter %_ptr_Function_v3float
         %vb = OpFunctionParameter %_ptr_Function_v3float
         %vc = OpFunctionParameter %_ptr_Function_v3float
         %uv = OpFunctionParameter %_ptr_Function_v2float
        %119 = OpLabel
        %r_9 = OpVariable %_ptr_Function_float Function
        %u_0 = OpVariable %_ptr_Function_float Function
        %v_1 = OpVariable %_ptr_Function_float Function
               OpLine %9 118 0
        %919 = OpAccessChain %_ptr_Function_float %uv %uint_1
        %920 = OpLoad %float %919
        %921 = OpExtInst %float %12 Sqrt %920
               OpStore %r_9 %921
               OpLine %9 119 0
        %923 = OpLoad %float %r_9
        %924 = OpFSub %float %float_1 %923
               OpStore %u_0 %924
               OpLine %9 120 0
        %926 = OpAccessChain %_ptr_Function_float %uv %uint_0
        %927 = OpLoad %float %926
        %928 = OpLoad %float %r_9
        %929 = OpFMul %float %927 %928
               OpStore %v_1 %929
               OpLine %9 121 0
        %930 = OpLoad %v3float %va
        %931 = OpLoad %float %u_0
        %932 = OpFSub %float %float_1 %931
        %933 = OpLoad %float %v_1
        %934 = OpFSub %float %932 %933
        %935 = OpVectorTimesScalar %v3float %930 %934
        %936 = OpLoad %v3float %vb
        %937 = OpLoad %float %u_0
        %938 = OpVectorTimesScalar %v3float %936 %937
        %939 = OpFAdd %v3float %935 %938
        %940 = OpLoad %v3float %vc
        %941 = OpLoad %float %v_1
        %942 = OpVectorTimesScalar %v3float %940 %941
        %943 = OpFAdd %v3float %939 %942
               OpReturnValue %943
               OpFunctionEnd
               OpLine %9 161 19
   %pow5_f1_ = OpFunction %float None %120
          %x = OpFunctionParameter %_ptr_Function_float
        %123 = OpLabel
         %x2 = OpVariable %_ptr_Function_float Function
               OpLine %9 162 0
        %947 = OpLoad %float %x
        %948 = OpLoad %float %x
        %949 = OpFMul %float %947 %948
               OpStore %x2 %949
               OpLine %9 163 0
        %950 = OpLoad %float %x2
        %951 = OpLoad %float %x2
        %952 = OpFMul %float %950 %951
        %953 = OpLoad %float %x
        %954 = OpFMul %float %952 %953
               OpReturnValue %954
               OpFunctionEnd
               OpLine %9 166 27
%luminance_vf3_ = OpFunction %float None %124
      %color = OpFunctionParameter %_ptr_Function_v3float
        %127 = OpLabel
               OpLine %9 167 0
        %957 = OpLoad %v3float %color
        %962 = OpDot %float %957 %961
               OpReturnValue %962
               OpFunctionEnd
               OpLine %9 174 23
%hasNan_vf3_ = OpFunction %bool None %128
    %color_0 = OpFunctionParameter %_ptr_Function_v3float
        %131 = OpLabel
               OpLine %9 175 0
        %965 = OpAccessChain %_ptr_Function_float %color_0 %uint_0
        %966 = OpLoad %float %965
        %967 = OpIsNan %bool %966
        %968 = OpLogicalNot %bool %967
               OpSelectionMerge %970 None
               OpBranchConditional %968 %969 %970
        %969 = OpLabel
               OpLine %9 175 0
        %971 = OpAccessChain %_ptr_Function_float %color_0 %uint_1
        %972 = OpLoad %float %971
        %973 = OpIsNan %bool %972
               OpBranch %970
        %970 = OpLabel
        %974 = OpPhi %bool %967 %131 %973 %969
        %975 = OpLogicalNot %bool %974
               OpSelectionMerge %977 None
               OpBranchConditional %975 %976 %977
        %976 = OpLabel
               OpLine %9 175 0
        %978 = OpAccessChain %_ptr_Function_float %color_0 %uint_2
        %979 = OpLoad %float %978
        %980 = OpIsNan %bool %979
               OpBranch %977
        %977 = OpLabel
        %981 = OpPhi %bool %974 %970 %980 %976
               OpLine %9 175 0
               OpReturnValue %981
               OpFunctionEnd
               OpLine %9 182 27
%clampColor_vf3_ = OpFunction %v3float None %94
    %color_1 = OpFunctionParameter %_ptr_Function_v3float
        %134 = OpLabel
   %param_15 = OpVariable %_ptr_Function_v3float Function
               OpLine %9 183 0
        %985 = OpLoad %v3float %color_1
               OpStore %param_15 %985
        %986 = OpFunctionCall %bool %hasNan_vf3_ %param_15
               OpSelectionMerge %988 None
               OpBranchConditional %986 %987 %988
        %987 = OpLabel
               OpLine %9 184 0
               OpReturnValue %989
        %988 = OpLabel
               OpLine %9 186 0
        %991 = OpLoad %v3float %color_1
        %994 = OpExtInst %v3float %12 FClamp %991 %989 %993
               OpReturnValue %994
               OpFunctionEnd
               OpLine %9 189 24
%colorWheel_f1_ = OpFunction %v3float None %135
        %x_0 = OpFunctionParameter %_ptr_Function_float
        %138 = OpLabel
               OpLine %9 192 0
        %997 = OpLoad %float %x_0
        %998 = OpFOrdLessThan %bool %997 %float_0_25
               OpSelectionMerge %1000 None
               OpBranchConditional %998 %999 %1005
        %999 = OpLabel
               OpLine %9 193 0
       %1001 = OpLoad %float %x_0
       %1002 = OpFDiv %float %1001 %float_0_25
       %1003 = OpCompositeConstruct %v3float %float_0 %1002 %float_1
               OpReturnValue %1003
       %1005 = OpLabel
               OpLine %9 195 0
       %1006 = OpLoad %float %x_0
       %1008 = OpFOrdLessThan %bool %1006 %float_0_5
               OpSelectionMerge %1010 None
               OpBranchConditional %1008 %1009 %1016
       %1009 = OpLabel
               OpLine %9 196 0
       %1011 = OpLoad %float %x_0
       %1012 = OpFDiv %float %1011 %float_0_25
       %1013 = OpFSub %float %float_2 %1012
       %1014 = OpCompositeConstruct %v3float %float_0 %float_1 %1013
               OpReturnValue %1014
       %1016 = OpLabel
               OpLine %9 198 0
       %1017 = OpLoad %float %x_0
       %1019 = OpFOrdLessThan %bool %1017 %float_0_75
               OpSelectionMerge %1021 None
               OpBranchConditional %1019 %1020 %1027
       %1020 = OpLabel
               OpLine %9 199 0
       %1022 = OpLoad %float %x_0
       %1023 = OpFDiv %float %1022 %float_0_25
       %1024 = OpFSub %float %1023 %float_2
       %1025 = OpCompositeConstruct %v3float %1024 %float_1 %float_0
               OpReturnValue %1025
       %1027 = OpLabel
               OpLine %9 202 0
       %1029 = OpLoad %float %x_0
       %1030 = OpFDiv %float %1029 %float_0_25
       %1031 = OpFSub %float %float_4 %1030
       %1032 = OpCompositeConstruct %v3float %float_1 %1031 %float_0
               OpReturnValue %1032
       %1021 = OpLabel
               OpUnreachable
       %1010 = OpLabel
               OpUnreachable
       %1000 = OpLabel
               OpUnreachable
               OpFunctionEnd
               OpLine %9 216 21
  %hash2_u1_ = OpFunction %uint None %139
       %seed = OpFunctionParameter %_ptr_Function_uint
        %142 = OpLabel
               OpLine %9 217 0
       %1035 = OpLoad %uint %seed
       %1037 = OpBitwiseXor %uint %1035 %uint_61
       %1038 = OpLoad %uint %seed
       %1040 = OpShiftRightLogical %uint %1038 %uint_16
       %1041 = OpBitwiseXor %uint %1037 %1040
               OpStore %seed %1041
               OpLine %9 218 0
       %1043 = OpLoad %uint %seed
       %1044 = OpIMul %uint %1043 %uint_9
               OpStore %seed %1044
               OpLine %9 219 0
       %1045 = OpLoad %uint %seed
       %1046 = OpLoad %uint %seed
       %1048 = OpShiftRightLogical %uint %1046 %uint_4
       %1049 = OpBitwiseXor %uint %1045 %1048
               OpStore %seed %1049
               OpLine %9 220 0
       %1051 = OpLoad %uint %seed
       %1052 = OpIMul %uint %1051 %uint_668265261
               OpStore %seed %1052
               OpLine %9 221 0
       %1053 = OpLoad %uint %seed
       %1054 = OpLoad %uint %seed
       %1056 = OpShiftRightLogical %uint %1054 %uint_15
       %1057 = OpBitwiseXor %uint %1053 %1056
               OpStore %seed %1057
               OpLine %9 222 0
       %1058 = OpLoad %uint %seed
               OpReturnValue %1058
               OpFunctionEnd
               OpLine %9 229 36
%makeSeed_u1_u1_ = OpFunction %uint None %143
       %rand = OpFunctionParameter %_ptr_Function_uint
      %index = OpFunctionParameter %_ptr_Function_uint
        %147 = OpLabel
   %param_16 = OpVariable %_ptr_Function_uint Function
   %param_17 = OpVariable %_ptr_Function_uint Function
               OpLine %9 230 0
       %1062 = OpLoad %uint %rand
               OpStore %param_16 %1062
       %1063 = OpFunctionCall %uint %hash2_u1_ %param_16
       %1065 = OpLoad %uint %index
               OpStore %param_17 %1065
       %1066 = OpFunctionCall %uint %hash2_u1_ %param_17
       %1067 = OpIAdd %uint %1063 %1066
               OpReturnValue %1067
               OpFunctionEnd
               OpLine %9 233 26
  %urand_u1_ = OpFunction %uint None %139
        %rng = OpFunctionParameter %_ptr_Function_uint
        %150 = OpLabel
   %param_18 = OpVariable %_ptr_Function_uint Function
               OpLine %9 234 0
       %1071 = OpLoad %uint %rng
               OpStore %param_18 %1071
       %1072 = OpFunctionCall %uint %hash2_u1_ %param_18
               OpStore %rng %1072
               OpReturnValue %1072
               OpFunctionEnd
               OpLine %9 237 30
%sample1f_u1_ = OpFunction %float None %151
      %rng_0 = OpFunctionParameter %_ptr_Function_uint
        %154 = OpLabel
   %param_19 = OpVariable %_ptr_Function_uint Function
               OpLine %9 238 0
       %1076 = OpLoad %uint %rng_0
               OpStore %param_19 %1076
       %1077 = OpFunctionCall %uint %urand_u1_ %param_19
       %1078 = OpLoad %uint %param_19
               OpStore %rng_0 %1078
       %1079 = OpConvertUToF %float %1077
       %1081 = OpFDiv %float %1079 %float_4_2949673e_09
               OpReturnValue %1081
               OpFunctionEnd
               OpLine %9 241 29
%sample2f_u1_ = OpFunction %v2float None %155
      %rng_1 = OpFunctionParameter %_ptr_Function_uint
        %158 = OpLabel
   %param_20 = OpVariable %_ptr_Function_uint Function
   %param_21 = OpVariable %_ptr_Function_uint Function
               OpLine %9 242 0
       %1085 = OpLoad %uint %rng_1
               OpStore %param_20 %1085
       %1086 = OpFunctionCall %float %sample1f_u1_ %param_20
       %1087 = OpLoad %uint %param_20
               OpStore %rng_1 %1087
       %1089 = OpLoad %uint %rng_1
               OpStore %param_21 %1089
       %1090 = OpFunctionCall %float %sample1f_u1_ %param_21
       %1091 = OpLoad %uint %param_21
               OpStore %rng_1 %1091
       %1092 = OpCompositeConstruct %v2float %1086 %1090
               OpReturnValue %1092
               OpFunctionEnd
               OpLine %9 245 29
%sample3f_u1_ = OpFunction %v3float None %159
      %rng_2 = OpFunctionParameter %_ptr_Function_uint
        %162 = OpLabel
   %param_22 = OpVariable %_ptr_Function_uint Function
   %param_23 = OpVariable %_ptr_Function_uint Function
               OpLine %9 246 0
       %1096 = OpLoad %uint %rng_2
               OpStore %param_22 %1096
       %1097 = OpFunctionCall %v2float %sample2f_u1_ %param_22
       %1098 = OpLoad %uint %param_22
               OpStore %rng_2 %1098
       %1100 = OpLoad %uint %rng_2
               OpStore %param_23 %1100
       %1101 = OpFunctionCall %float %sample1f_u1_ %param_23
       %1102 = OpLoad %uint %param_23
               OpStore %rng_2 %1102
       %1103 = OpCompositeExtract %float %1097 0
       %1104 = OpCompositeExtract %float %1097 1
       %1105 = OpCompositeConstruct %v3float %1103 %1104 %1101
               OpReturnValue %1105
               OpFunctionEnd
               OpLine %9 249 29
%sample4f_u1_ = OpFunction %v4float None %164
      %rng_3 = OpFunctionParameter %_ptr_Function_uint
        %167 = OpLabel
   %param_24 = OpVariable %_ptr_Function_uint Function
   %param_25 = OpVariable %_ptr_Function_uint Function
               OpLine %9 250 0
       %1109 = OpLoad %uint %rng_3
               OpStore %param_24 %1109
       %1110 = OpFunctionCall %v2float %sample2f_u1_ %param_24
       %1111 = OpLoad %uint %param_24
               OpStore %rng_3 %1111
       %1113 = OpLoad %uint %rng_3
               OpStore %param_25 %1113
       %1114 = OpFunctionCall %v2float %sample2f_u1_ %param_25
       %1115 = OpLoad %uint %param_25
               OpStore %rng_3 %1115
       %1116 = OpCompositeExtract %float %1110 0
       %1117 = OpCompositeExtract %float %1110 1
       %1118 = OpCompositeExtract %float %1114 0
       %1119 = OpCompositeExtract %float %1114 1
       %1120 = OpCompositeConstruct %v4float %1116 %1117 %1118 %1119
               OpReturnValue %1120
               OpFunctionEnd
               OpLine %9 253 33
%MISWeight_f1_f1_ = OpFunction %float None %168
          %f = OpFunctionParameter %_ptr_Function_float
          %g = OpFunctionParameter %_ptr_Function_float
        %172 = OpLabel
               OpLine %9 254 0
       %1123 = OpLoad %float %f
       %1124 = OpLoad %float %f
       %1125 = OpFMul %float %1123 %1124
       %1126 = OpLoad %float %f
       %1127 = OpLoad %float %f
       %1128 = OpFMul %float %1126 %1127
       %1129 = OpLoad %float %g
       %1130 = OpLoad %float %g
       %1131 = OpFMul %float %1129 %1130
       %1132 = OpFAdd %float %1128 %1131
       %1133 = OpFDiv %float %1125 %1132
               OpReturnValue %1133
               OpFunctionEnd
               OpLine %9 265 21
 %square_f1_ = OpFunction %float None %120
        %x_1 = OpFunctionParameter %_ptr_Function_float
        %175 = OpLabel
               OpLine %9 266 0
       %1136 = OpLoad %float %x_1
       %1137 = OpLoad %float %x_1
       %1138 = OpFMul %float %1136 %1137
               OpReturnValue %1138
               OpFunctionEnd
               OpLine %3 25 55
%pinholeCameraSampleRay_struct_Camera_mf44_mf44_mf44_mf44_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vf3_f1_vu2_u1_u11_vf2_vf2_ = OpFunction %Ray None %181
        %cam = OpFunctionParameter %_ptr_Function_Camera
       %uv_0 = OpFunctionParameter %_ptr_Function_v2float
          %r = OpFunctionParameter %_ptr_Function_v2float
        %186 = OpLabel
  %texelSize = OpVariable %_ptr_Function_v2float Function
%biasedCoord = OpVariable %_ptr_Function_v2float Function
        %ndc = OpVariable %_ptr_Function_v2float Function
     %aspect = OpVariable %_ptr_Function_float Function
     %tanFOV = OpVariable %_ptr_Function_float Function
%pFocusPlane = OpVariable %_ptr_Function_v3float Function
        %ori = OpVariable %_ptr_Function_v3float Function
        %dir = OpVariable %_ptr_Function_v3float Function
               OpLine %3 26 0
       %1144 = OpAccessChain %_ptr_Function_v2uint %cam %int_14
       %1145 = OpLoad %v2uint %1144
       %1146 = OpConvertUToF %v2float %1145
       %1147 = OpCompositeConstruct %v2float %float_1 %float_1
       %1148 = OpFDiv %v2float %1147 %1146
               OpStore %texelSize %1148
               OpLine %3 27 0
       %1150 = OpLoad %v2float %uv_0
       %1151 = OpLoad %v2float %texelSize
       %1152 = OpLoad %v2float %r
       %1153 = OpFMul %v2float %1151 %1152
       %1154 = OpFAdd %v2float %1150 %1153
               OpStore %biasedCoord %1154
               OpLine %3 28 0
       %1156 = OpLoad %v2float %biasedCoord
       %1157 = OpVectorTimesScalar %v2float %1156 %float_2
       %1158 = OpCompositeConstruct %v2float %float_1 %float_1
       %1159 = OpFSub %v2float %1157 %1158
               OpStore %ndc %1159
               OpLine %3 29 0
       %1161 = OpAccessChain %_ptr_Function_uint %cam %int_14 %uint_0
       %1162 = OpLoad %uint %1161
       %1163 = OpConvertUToF %float %1162
       %1164 = OpAccessChain %_ptr_Function_uint %cam %int_14 %uint_1
       %1165 = OpLoad %uint %1164
       %1166 = OpConvertUToF %float %1165
       %1167 = OpFDiv %float %1163 %1166
               OpStore %aspect %1167
               OpLine %3 30 0
       %1169 = OpAccessChain %_ptr_Function_float %cam %int_5
       %1170 = OpLoad %float %1169
       %1171 = OpFMul %float %1170 %float_0_5
       %1172 = OpExtInst %float %12 Radians %1171
       %1173 = OpExtInst %float %12 Tan %1172
               OpStore %tanFOV %1173
               OpLine %3 32 0
       %1175 = OpLoad %v2float %ndc
       %1176 = OpLoad %float %aspect
       %1177 = OpCompositeConstruct %v2float %1176 %float_1
       %1178 = OpFMul %v2float %1175 %1177
       %1179 = OpLoad %float %tanFOV
       %1180 = OpVectorTimesScalar %v2float %1178 %1179
       %1181 = OpCompositeExtract %float %1180 0
       %1182 = OpCompositeExtract %float %1180 1
       %1183 = OpCompositeConstruct %v3float %1181 %1182 %float_1
               OpStore %pFocusPlane %1183
               OpLine %3 34 0
       %1185 = OpAccessChain %_ptr_Function_v3float %cam %int_4
       %1186 = OpLoad %v3float %1185
               OpStore %ori %1186
               OpLine %3 35 0
       %1188 = OpLoad %v3float %pFocusPlane
       %1189 = OpExtInst %v3float %12 Normalize %1188
               OpStore %dir %1189
               OpLine %3 36 0
       %1191 = OpAccessChain %_ptr_Function_v3float %cam %int_10
       %1192 = OpLoad %v3float %1191
       %1193 = OpAccessChain %_ptr_Function_float %dir %uint_0
       %1194 = OpLoad %float %1193
       %1195 = OpVectorTimesScalar %v3float %1192 %1194
       %1197 = OpAccessChain %_ptr_Function_v3float %cam %int_12
       %1198 = OpLoad %v3float %1197
       %1199 = OpAccessChain %_ptr_Function_float %dir %uint_1
       %1200 = OpLoad %float %1199
       %1201 = OpVectorTimesScalar %v3float %1198 %1200
       %1202 = OpFAdd %v3float %1195 %1201
       %1204 = OpAccessChain %_ptr_Function_v3float %cam %int_8
       %1205 = OpLoad %v3float %1204
       %1206 = OpAccessChain %_ptr_Function_float %dir %uint_2
       %1207 = OpLoad %float %1206
       %1208 = OpVectorTimesScalar %v3float %1205 %1207
       %1209 = OpFAdd %v3float %1202 %1208
       %1210 = OpExtInst %v3float %12 Normalize %1209
               OpStore %dir %1210
               OpLine %3 38 0
       %1211 = OpLoad %v3float %ori
       %1212 = OpLoad %v3float %dir
       %1213 = OpCompositeConstruct %Ray %1211 %1212
               OpReturnValue %1213
               OpFunctionEnd
               OpLine %4 8 30
%unpackAlbedo_u1_ = OpFunction %v3float None %159
     %packed = OpFunctionParameter %_ptr_Function_uint
        %189 = OpLabel
               OpLine %4 9 0
       %1216 = OpLoad %uint %packed
       %1217 = OpExtInst %v4float %12 UnpackUnorm4x8 %1216
       %1218 = OpVectorShuffle %v3float %1217 %1217 0 1 2
               OpReturnValue %1218
               OpFunctionEnd
               OpLine %7 4 107
%sampleTriangleLight_struct_TriangleLight_vf3_f1_vf3_f1_vf3_f1_vf3_f11_vf3_vf3_f1_f1_vf2_ = OpFunction %v3float None %192
      %light = OpFunctionParameter %_ptr_Function_TriangleLight
        %ref = OpFunctionParameter %_ptr_Function_v3float
         %wi = OpFunctionParameter %_ptr_Function_v3float
       %dist = OpFunctionParameter %_ptr_Function_float
        %pdf = OpFunctionParameter %_ptr_Function_float
        %r_0 = OpFunctionParameter %_ptr_Function_v2float
        %200 = OpLabel
      %pos_0 = OpVariable %_ptr_Function_v3float Function
   %param_26 = OpVariable %_ptr_Function_v3float Function
   %param_27 = OpVariable %_ptr_Function_v3float Function
   %param_28 = OpVariable %_ptr_Function_v3float Function
   %param_29 = OpVariable %_ptr_Function_v2float Function
       %n_17 = OpVariable %_ptr_Function_v3float Function
   %param_30 = OpVariable %_ptr_Function_v3float Function
   %param_31 = OpVariable %_ptr_Function_v3float Function
               OpLine %7 5 0
       %1223 = OpAccessChain %_ptr_Function_v3float %light %int_0
       %1224 = OpLoad %v3float %1223
               OpStore %param_26 %1224
       %1226 = OpAccessChain %_ptr_Function_v3float %light %int_2
       %1227 = OpLoad %v3float %1226
               OpStore %param_27 %1227
       %1229 = OpAccessChain %_ptr_Function_v3float %light %int_4
       %1230 = OpLoad %v3float %1229
               OpStore %param_28 %1230
       %1232 = OpLoad %v2float %r_0
               OpStore %param_29 %1232
       %1233 = OpFunctionCall %v3float %sampleTriangleUniform_vf3_vf3_vf3_vf2_ %param_26 %param_27 %param_28 %param_29
               OpStore %pos_0 %1233
               OpLine %7 6 0
       %1234 = OpLoad %v3float %ref
       %1235 = OpLoad %v3float %pos_0
       %1236 = OpExtInst %float %12 Distance %1234 %1235
               OpStore %dist %1236
               OpLine %7 8 0
       %1238 = OpAccessChain %_ptr_Function_float %light %int_1
       %1239 = OpLoad %float %1238
       %1240 = OpAccessChain %_ptr_Function_float %light %int_3
       %1241 = OpLoad %float %1240
       %1242 = OpAccessChain %_ptr_Function_float %light %int_5
       %1243 = OpLoad %float %1242
       %1244 = OpCompositeConstruct %v3float %1239 %1241 %1243
               OpStore %n_17 %1244
               OpLine %7 9 0
       %1245 = OpLoad %v3float %pos_0
       %1246 = OpLoad %v3float %ref
       %1247 = OpFSub %v3float %1245 %1246
       %1248 = OpLoad %float %dist
       %1249 = OpCompositeConstruct %v3float %1248 %1248 %1248
       %1250 = OpFDiv %v3float %1247 %1249
               OpStore %wi %1250
               OpLine %7 10 0
       %1251 = OpLoad %float %dist
       %1252 = OpLoad %float %dist
       %1253 = OpFMul %float %1251 %1252
       %1255 = OpLoad %v3float %n_17
               OpStore %param_30 %1255
       %1257 = OpLoad %v3float %wi
               OpStore %param_31 %1257
       %1258 = OpFunctionCall %float %absDot_vf3_vf3_ %param_30 %param_31
       %1259 = OpFDiv %float %1253 %1258
       %1261 = OpAccessChain %_ptr_Function_float %light %int_7
       %1262 = OpLoad %float %1261
       %1263 = OpFDiv %float %1259 %1262
               OpStore %pdf %1263
               OpLine %7 12 0
       %1264 = OpAccessChain %_ptr_Function_v3float %light %int_6
       %1265 = OpLoad %v3float %1264
               OpReturnValue %1265
               OpFunctionEnd
               OpLine %7 29 85
%sampleLightUniform_vf3_vf3_f1_f1_vf4_ = OpFunction %v3float None %202
      %ref_0 = OpFunctionParameter %_ptr_Function_v3float
       %wi_0 = OpFunctionParameter %_ptr_Function_v3float
     %dist_0 = OpFunctionParameter %_ptr_Function_float
      %pdf_0 = OpFunctionParameter %_ptr_Function_float
        %r_1 = OpFunctionParameter %_ptr_Function_v4float
        %209 = OpLabel
  %numLights = OpVariable %_ptr_Function_uint Function
        %idx = OpVariable %_ptr_Function_uint Function
    %light_1 = OpVariable %_ptr_Function_TriangleLight Function
   %radiance = OpVariable %_ptr_Function_v3float Function
   %param_32 = OpVariable %_ptr_Function_TriangleLight Function
   %param_33 = OpVariable %_ptr_Function_v3float Function
   %param_34 = OpVariable %_ptr_Function_v3float Function
   %param_35 = OpVariable %_ptr_Function_float Function
   %param_36 = OpVariable %_ptr_Function_float Function
   %param_37 = OpVariable %_ptr_Function_v2float Function
               OpLine %7 30 0
       %1274 = OpAccessChain %_ptr_StorageBuffer_uint %__5 %int_0 %int_0 %int_1
       %1275 = OpLoad %uint %1274
               OpStore %numLights %1275
               OpLine %7 31 0
       %1277 = OpLoad %uint %numLights
       %1278 = OpConvertUToF %float %1277
       %1279 = OpAccessChain %_ptr_Function_float %r_1 %uint_0
       %1280 = OpLoad %float %1279
       %1281 = OpFMul %float %1278 %1280
       %1282 = OpConvertFToU %uint %1281
               OpStore %idx %1282
               OpLine %7 33 0
       %1284 = OpLoad %uint %idx
       %1285 = OpAccessChain %_ptr_StorageBuffer_TriangleLight_0 %_ %int_0 %1284
       %1286 = OpLoad %TriangleLight_0 %1285
       %1287 = OpCopyLogical %TriangleLight %1286
               OpStore %light_1 %1287
               OpLine %7 34 0
       %1290 = OpLoad %TriangleLight %light_1
               OpStore %param_32 %1290
       %1292 = OpLoad %v3float %ref_0
               OpStore %param_33 %1292
       %1297 = OpLoad %v4float %r_1
       %1298 = OpVectorShuffle %v2float %1297 %1297 2 3
               OpStore %param_37 %1298
       %1299 = OpFunctionCall %v3float %sampleTriangleLight_struct_TriangleLight_vf3_f1_vf3_f1_vf3_f1_vf3_f11_vf3_vf3_f1_f1_vf2_ %param_32 %param_33 %param_34 %param_35 %param_36 %param_37
       %1300 = OpLoad %v3float %param_34
               OpStore %wi_0 %1300
       %1301 = OpLoad %float %param_35
               OpStore %dist_0 %1301
       %1302 = OpLoad %float %param_36
               OpStore %pdf_0 %1302
               OpStore %radiance %1299
               OpLine %7 35 0
       %1303 = OpLoad %uint %numLights
       %1304 = OpConvertUToF %float %1303
       %1305 = OpFDiv %float %float_1 %1304
       %1306 = OpLoad %float %pdf_0
       %1307 = OpFMul %float %1306 %1305
               OpStore %pdf_0 %1307
               OpLine %7 37 0
       %1308 = OpLoad %v3float %radiance
               OpReturnValue %1308
               OpFunctionEnd
               OpLine %7 40 86
%sampleLight_vf3_vf3_f1_f1_u1_ = OpFunction %v3float None %210
      %ref_1 = OpFunctionParameter %_ptr_Function_v3float
       %wi_1 = OpFunctionParameter %_ptr_Function_v3float
     %dist_1 = OpFunctionParameter %_ptr_Function_float
      %pdf_1 = OpFunctionParameter %_ptr_Function_float
      %rng_4 = OpFunctionParameter %_ptr_Function_uint
        %217 = OpLabel
   %param_38 = OpVariable %_ptr_Function_uint Function
   %param_39 = OpVariable %_ptr_Function_v3float Function
   %param_40 = OpVariable %_ptr_Function_v3float Function
   %param_41 = OpVariable %_ptr_Function_float Function
   %param_42 = OpVariable %_ptr_Function_float Function
   %param_43 = OpVariable %_ptr_Function_v4float Function
               OpLine %7 42 0
       %1312 = OpLoad %uint %rng_4
               OpStore %param_38 %1312
       %1313 = OpFunctionCall %v4float %sample4f_u1_ %param_38
       %1314 = OpLoad %uint %param_38
               OpStore %rng_4 %1314
       %1316 = OpLoad %v3float %ref_1
               OpStore %param_39 %1316
               OpStore %param_43 %1313
       %1321 = OpFunctionCall %v3float %sampleLightUniform_vf3_vf3_f1_f1_vf4_ %param_39 %param_40 %param_41 %param_42 %param_43
       %1322 = OpLoad %v3float %param_40
               OpStore %wi_1 %1322
       %1323 = OpLoad %float %param_41
               OpStore %dist_1 %1323
       %1324 = OpLoad %float %param_42
               OpStore %pdf_1 %1324
               OpReturnValue %1321
               OpFunctionEnd
               OpLine %8 30 47
%fresnelSchlick_f1_f1_ = OpFunction %float None %168
   %cosTheta = OpFunctionParameter %_ptr_Function_float
        %ior = OpFunctionParameter %_ptr_Function_float
        %221 = OpLabel
       %f0_0 = OpVariable %_ptr_Function_float Function
   %param_44 = OpVariable %_ptr_Function_float Function
               OpLine %8 31 0
       %1328 = OpLoad %float %ior
       %1329 = OpFSub %float %float_1 %1328
       %1330 = OpExtInst %float %12 FAbs %1329
       %1331 = OpLoad %float %ior
       %1332 = OpFAdd %float %float_1 %1331
       %1333 = OpFDiv %float %1330 %1332
               OpStore %f0_0 %1333
               OpLine %8 32 0
       %1334 = OpLoad %float %f0_0
       %1335 = OpLoad %float %cosTheta
       %1336 = OpFSub %float %float_1 %1335
               OpStore %param_44 %1336
       %1338 = OpFunctionCall %float %pow5_f1_ %param_44
       %1339 = OpExtInst %float %12 FMix %1334 %float_1 %1338
               OpReturnValue %1339
               OpFunctionEnd
               OpLine %8 35 44
%fresnelSchlick_f1_vf3_ = OpFunction %v3float None %222
 %cosTheta_0 = OpFunctionParameter %_ptr_Function_float
         %f0 = OpFunctionParameter %_ptr_Function_v3float
        %226 = OpLabel
   %param_45 = OpVariable %_ptr_Function_float Function
               OpLine %8 36 0
       %1342 = OpLoad %v3float %f0
       %1344 = OpLoad %float %cosTheta_0
       %1345 = OpFSub %float %float_1 %1344
               OpStore %param_45 %1345
       %1347 = OpFunctionCall %float %pow5_f1_ %param_45
       %1348 = OpCompositeConstruct %v3float %1347 %1347 %1347
       %1349 = OpExtInst %v3float %12 FMix %1342 %1343 %1348
               OpReturnValue %1349
               OpFunctionEnd
               OpLine %8 39 37
%fresnel_f1_f1_ = OpFunction %float None %168
      %cosIn = OpFunctionParameter %_ptr_Function_float
      %ior_0 = OpFunctionParameter %_ptr_Function_float
        %230 = OpLabel
      %sinIn = OpVariable %_ptr_Function_float Function
      %sinTr = OpVariable %_ptr_Function_float Function
      %cosTr = OpVariable %_ptr_Function_float Function
   %param_46 = OpVariable %_ptr_Function_float Function
   %param_47 = OpVariable %_ptr_Function_float Function
               OpLine %8 43 0
       %1352 = OpLoad %float %cosIn
       %1353 = OpFOrdLessThan %bool %1352 %float_0
               OpSelectionMerge %1355 None
               OpBranchConditional %1353 %1354 %1355
       %1354 = OpLabel
               OpLine %8 44 0
       %1356 = OpLoad %float %ior_0
       %1357 = OpFDiv %float %float_1 %1356
               OpStore %ior_0 %1357
               OpLine %8 45 0
       %1358 = OpLoad %float %cosIn
       %1359 = OpFNegate %float %1358
               OpStore %cosIn %1359
               OpBranch %1355
       %1355 = OpLabel
               OpLine %8 47 0
       %1361 = OpLoad %float %cosIn
       %1362 = OpLoad %float %cosIn
       %1363 = OpFMul %float %1361 %1362
       %1364 = OpFSub %float %float_1 %1363
       %1365 = OpExtInst %float %12 Sqrt %1364
               OpStore %sinIn %1365
               OpLine %8 48 0
       %1367 = OpLoad %float %sinIn
       %1368 = OpLoad %float %ior_0
       %1369 = OpFDiv %float %1367 %1368
               OpStore %sinTr %1369
               OpLine %8 49 0
       %1370 = OpLoad %float %sinTr
       %1371 = OpFOrdGreaterThanEqual %bool %1370 %float_1
               OpSelectionMerge %1373 None
               OpBranchConditional %1371 %1372 %1373
       %1372 = OpLabel
               OpLine %8 50 0
               OpReturnValue %float_1
       %1373 = OpLabel
               OpLine %8 52 0
       %1376 = OpLoad %float %sinTr
       %1377 = OpLoad %float %sinTr
       %1378 = OpFMul %float %1376 %1377
       %1379 = OpFSub %float %float_1 %1378
       %1380 = OpExtInst %float %12 Sqrt %1379
               OpStore %cosTr %1380
               OpLine %8 54 0
               OpLine %8 53 0
       %1381 = OpLoad %float %cosIn
       %1382 = OpLoad %float %ior_0
       %1383 = OpLoad %float %cosTr
       %1384 = OpFMul %float %1382 %1383
       %1385 = OpFSub %float %1381 %1384
       %1386 = OpLoad %float %cosIn
       %1387 = OpLoad %float %ior_0
       %1388 = OpLoad %float %cosTr
       %1389 = OpFMul %float %1387 %1388
       %1390 = OpFAdd %float %1386 %1389
       %1391 = OpFDiv %float %1385 %1390
               OpStore %param_46 %1391
       %1393 = OpFunctionCall %float %square_f1_ %param_46
               OpLine %8 54 0
       %1394 = OpLoad %float %ior_0
       %1395 = OpLoad %float %cosIn
       %1396 = OpFMul %float %1394 %1395
       %1397 = OpLoad %float %cosTr
       %1398 = OpFSub %float %1396 %1397
       %1399 = OpLoad %float %ior_0
       %1400 = OpLoad %float %cosIn
       %1401 = OpFMul %float %1399 %1400
       %1402 = OpLoad %float %cosTr
       %1403 = OpFAdd %float %1401 %1402
       %1404 = OpFDiv %float %1398 %1403
               OpStore %param_47 %1404
       %1406 = OpFunctionCall %float %square_f1_ %param_47
       %1407 = OpFAdd %float %1393 %1406
       %1408 = OpFMul %float %1407 %float_0_5
               OpLine %8 53 0
               OpReturnValue %1408
               OpFunctionEnd
               OpLine %8 58 43
%schlickG_f1_f1_ = OpFunction %float None %168
 %cosTheta_1 = OpFunctionParameter %_ptr_Function_float
      %alpha = OpFunctionParameter %_ptr_Function_float
        %234 = OpLabel
        %a_1 = OpVariable %_ptr_Function_float Function
               OpLine %8 59 0
       %1412 = OpLoad %float %alpha
       %1413 = OpFMul %float %1412 %float_0_5
               OpStore %a_1 %1413
               OpLine %8 60 0
       %1414 = OpLoad %float %cosTheta_1
       %1415 = OpLoad %float %cosTheta_1
       %1416 = OpLoad %float %a_1
       %1417 = OpFSub %float %float_1 %1416
       %1418 = OpFMul %float %1415 %1417
       %1419 = OpLoad %float %a_1
       %1420 = OpFAdd %float %1418 %1419
       %1421 = OpFDiv %float %1414 %1420
               OpReturnValue %1421
               OpFunctionEnd
               OpLine %8 63 51
%smithG_f1_f1_f1_ = OpFunction %float None %235
      %cosWo = OpFunctionParameter %_ptr_Function_float
      %cosWi = OpFunctionParameter %_ptr_Function_float
    %alpha_0 = OpFunctionParameter %_ptr_Function_float
        %240 = OpLabel
   %param_48 = OpVariable %_ptr_Function_float Function
   %param_49 = OpVariable %_ptr_Function_float Function
   %param_50 = OpVariable %_ptr_Function_float Function
   %param_51 = OpVariable %_ptr_Function_float Function
               OpLine %8 64 0
       %1424 = OpLoad %float %cosWo
       %1425 = OpExtInst %float %12 FAbs %1424
               OpStore %param_48 %1425
       %1428 = OpLoad %float %alpha_0
               OpStore %param_49 %1428
       %1429 = OpFunctionCall %float %schlickG_f1_f1_ %param_48 %param_49
       %1430 = OpLoad %float %cosWi
       %1431 = OpExtInst %float %12 FAbs %1430
               OpStore %param_50 %1431
       %1434 = OpLoad %float %alpha_0
               OpStore %param_51 %1434
       %1435 = OpFunctionCall %float %schlickG_f1_f1_ %param_50 %param_51
       %1436 = OpFMul %float %1429 %1435
               OpReturnValue %1436
               OpFunctionEnd
               OpLine %8 67 46
%GTR2Distrib_f1_f1_ = OpFunction %float None %168
 %cosTheta_2 = OpFunctionParameter %_ptr_Function_float
    %alpha_1 = OpFunctionParameter %_ptr_Function_float
        %244 = OpLabel
         %aa = OpVariable %_ptr_Function_float Function
        %nom = OpVariable %_ptr_Function_float Function
      %denom = OpVariable %_ptr_Function_float Function
               OpLine %8 68 0
       %1439 = OpLoad %float %cosTheta_2
       %1441 = OpFOrdLessThan %bool %1439 %float_9_99999997en07
               OpSelectionMerge %1443 None
               OpBranchConditional %1441 %1442 %1443
       %1442 = OpLabel
               OpLine %8 69 0
               OpReturnValue %float_0
       %1443 = OpLabel
               OpLine %8 71 0
       %1446 = OpLoad %float %alpha_1
       %1447 = OpLoad %float %alpha_1
       %1448 = OpFMul %float %1446 %1447
               OpStore %aa %1448
               OpLine %8 72 0
       %1450 = OpLoad %float %aa
               OpStore %nom %1450
               OpLine %8 73 0
       %1452 = OpLoad %float %cosTheta_2
       %1453 = OpLoad %float %cosTheta_2
       %1454 = OpFMul %float %1452 %1453
       %1455 = OpLoad %float %aa
       %1456 = OpFSub %float %1455 %float_1
       %1457 = OpFMul %float %1454 %1456
       %1458 = OpFAdd %float %1457 %float_1
               OpStore %denom %1458
               OpLine %8 74 0
       %1459 = OpLoad %float %denom
       %1460 = OpLoad %float %denom
       %1461 = OpFMul %float %1459 %1460
       %1462 = OpFMul %float %1461 %float_3_14159274
               OpStore %denom %1462
               OpLine %8 75 0
       %1463 = OpLoad %float %nom
       %1464 = OpLoad %float %denom
       %1465 = OpFDiv %float %1463 %1464
               OpReturnValue %1465
               OpFunctionEnd
               OpLine %8 78 51
%GTR2Pdf_vf3_vf3_vf3_f1_ = OpFunction %float None %245
        %n_3 = OpFunctionParameter %_ptr_Function_v3float
          %m = OpFunctionParameter %_ptr_Function_v3float
         %wo = OpFunctionParameter %_ptr_Function_v3float
    %alpha_2 = OpFunctionParameter %_ptr_Function_float
        %251 = OpLabel
   %param_52 = OpVariable %_ptr_Function_float Function
   %param_53 = OpVariable %_ptr_Function_float Function
   %param_54 = OpVariable %_ptr_Function_float Function
   %param_55 = OpVariable %_ptr_Function_float Function
   %param_56 = OpVariable %_ptr_Function_v3float Function
   %param_57 = OpVariable %_ptr_Function_v3float Function
   %param_58 = OpVariable %_ptr_Function_v3float Function
   %param_59 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 80 0
               OpLine %8 79 0
       %1468 = OpLoad %v3float %n_3
       %1469 = OpLoad %v3float %m
       %1470 = OpDot %float %1468 %1469
               OpStore %param_52 %1470
       %1473 = OpLoad %float %alpha_2
               OpStore %param_53 %1473
       %1474 = OpFunctionCall %float %GTR2Distrib_f1_f1_ %param_52 %param_53
       %1475 = OpLoad %v3float %n_3
       %1476 = OpLoad %v3float %wo
       %1477 = OpDot %float %1475 %1476
               OpStore %param_54 %1477
       %1480 = OpLoad %float %alpha_2
               OpStore %param_55 %1480
       %1481 = OpFunctionCall %float %schlickG_f1_f1_ %param_54 %param_55
       %1482 = OpFMul %float %1474 %1481
               OpLine %8 80 0
       %1484 = OpLoad %v3float %m
               OpStore %param_56 %1484
       %1486 = OpLoad %v3float %wo
               OpStore %param_57 %1486
       %1487 = OpFunctionCall %float %absDot_vf3_vf3_ %param_56 %param_57
       %1488 = OpFMul %float %1482 %1487
       %1490 = OpLoad %v3float %n_3
               OpStore %param_58 %1490
       %1492 = OpLoad %v3float %wo
               OpStore %param_59 %1492
       %1493 = OpFunctionCall %float %absDot_vf3_vf3_ %param_58 %param_59
       %1494 = OpFDiv %float %1488 %1493
               OpLine %8 79 0
               OpReturnValue %1494
               OpFunctionEnd
               OpLine %8 83 53
%GTR2Sample_vf3_vf3_f1_vf2_ = OpFunction %v3float None %252
        %n_4 = OpFunctionParameter %_ptr_Function_v3float
       %wo_0 = OpFunctionParameter %_ptr_Function_v3float
    %alpha_3 = OpFunctionParameter %_ptr_Function_float
        %r_2 = OpFunctionParameter %_ptr_Function_v2float
        %258 = OpLabel
   %transMat = OpVariable %_ptr_Function_mat3v3float Function
   %param_60 = OpVariable %_ptr_Function_v3float Function
   %transInv = OpVariable %_ptr_Function_mat3v3float Function
         %vh = OpVariable %_ptr_Function_v3float Function
      %lenSq = OpVariable %_ptr_Function_float Function
        %t_0 = OpVariable %_ptr_Function_v3float Function
       %1529 = OpVariable %_ptr_Function_v3float Function
        %b_2 = OpVariable %_ptr_Function_v3float Function
          %p = OpVariable %_ptr_Function_v2float Function
   %param_61 = OpVariable %_ptr_Function_v2float Function
        %s_4 = OpVariable %_ptr_Function_float Function
         %wh = OpVariable %_ptr_Function_v3float Function
               OpLine %8 84 0
       %1500 = OpLoad %v3float %n_4
               OpStore %param_60 %1500
       %1501 = OpFunctionCall %mat3v3float %matLocalToWorld_vf3_ %param_60
               OpStore %transMat %1501
               OpLine %8 85 0
       %1503 = OpLoad %mat3v3float %transMat
       %1504 = OpExtInst %mat3v3float %12 MatrixInverse %1503
               OpStore %transInv %1504
               OpLine %8 87 0
       %1506 = OpLoad %mat3v3float %transInv
       %1507 = OpLoad %v3float %wo_0
       %1508 = OpMatrixTimesVector %v3float %1506 %1507
       %1509 = OpLoad %float %alpha_3
       %1510 = OpLoad %float %alpha_3
       %1511 = OpCompositeConstruct %v3float %1509 %1510 %float_1
       %1512 = OpFMul %v3float %1508 %1511
       %1513 = OpExtInst %v3float %12 Normalize %1512
               OpStore %vh %1513
               OpLine %8 89 0
       %1515 = OpAccessChain %_ptr_Function_float %vh %uint_0
       %1516 = OpLoad %float %1515
       %1517 = OpAccessChain %_ptr_Function_float %vh %uint_0
       %1518 = OpLoad %float %1517
       %1519 = OpFMul %float %1516 %1518
       %1520 = OpAccessChain %_ptr_Function_float %vh %uint_1
       %1521 = OpLoad %float %1520
       %1522 = OpAccessChain %_ptr_Function_float %vh %uint_1
       %1523 = OpLoad %float %1522
       %1524 = OpFMul %float %1521 %1523
       %1525 = OpFAdd %float %1519 %1524
               OpStore %lenSq %1525
               OpLine %8 90 0
       %1527 = OpLoad %float %lenSq
       %1528 = OpFOrdGreaterThan %bool %1527 %float_0
               OpSelectionMerge %1531 None
               OpBranchConditional %1528 %1530 %1542
       %1530 = OpLabel
               OpLine %8 90 0
       %1532 = OpAccessChain %_ptr_Function_float %vh %uint_1
       %1533 = OpLoad %float %1532
       %1534 = OpFNegate %float %1533
       %1535 = OpAccessChain %_ptr_Function_float %vh %uint_0
       %1536 = OpLoad %float %1535
       %1537 = OpCompositeConstruct %v3float %1534 %1536 %float_0
       %1538 = OpLoad %float %lenSq
       %1539 = OpExtInst %float %12 Sqrt %1538
       %1540 = OpCompositeConstruct %v3float %1539 %1539 %1539
       %1541 = OpFDiv %v3float %1537 %1540
               OpStore %1529 %1541
               OpBranch %1531
       %1542 = OpLabel
               OpStore %1529 %1543
               OpBranch %1531
       %1531 = OpLabel
       %1544 = OpLoad %v3float %1529
               OpStore %t_0 %1544
               OpLine %8 91 0
       %1546 = OpLoad %v3float %vh
       %1547 = OpLoad %v3float %t_0
       %1548 = OpExtInst %v3float %12 Cross %1546 %1547
               OpStore %b_2 %1548
               OpLine %8 93 0
       %1551 = OpLoad %v2float %r_2
               OpStore %param_61 %1551
       %1552 = OpFunctionCall %v2float %toConcentricDisk_vf2_ %param_61
               OpStore %p %1552
               OpLine %8 94 0
       %1554 = OpAccessChain %_ptr_Function_float %vh %uint_2
       %1555 = OpLoad %float %1554
       %1556 = OpFAdd %float %1555 %float_1
       %1557 = OpFMul %float %float_0_5 %1556
               OpStore %s_4 %1557
               OpLine %8 95 0
       %1558 = OpLoad %float %s_4
       %1559 = OpFSub %float %float_1 %1558
       %1560 = OpAccessChain %_ptr_Function_float %p %uint_0
       %1561 = OpLoad %float %1560
       %1562 = OpAccessChain %_ptr_Function_float %p %uint_0
       %1563 = OpLoad %float %1562
       %1564 = OpFMul %float %1561 %1563
       %1565 = OpFSub %float %float_1 %1564
       %1566 = OpExtInst %float %12 Sqrt %1565
       %1567 = OpFMul %float %1559 %1566
       %1568 = OpLoad %float %s_4
       %1569 = OpAccessChain %_ptr_Function_float %p %uint_1
       %1570 = OpLoad %float %1569
       %1571 = OpFMul %float %1568 %1570
       %1572 = OpFAdd %float %1567 %1571
       %1573 = OpAccessChain %_ptr_Function_float %p %uint_1
               OpStore %1573 %1572
               OpLine %8 97 0
       %1575 = OpLoad %v3float %t_0
       %1576 = OpAccessChain %_ptr_Function_float %p %uint_0
       %1577 = OpLoad %float %1576
       %1578 = OpVectorTimesScalar %v3float %1575 %1577
       %1579 = OpLoad %v3float %b_2
       %1580 = OpAccessChain %_ptr_Function_float %p %uint_1
       %1581 = OpLoad %float %1580
       %1582 = OpVectorTimesScalar %v3float %1579 %1581
       %1583 = OpFAdd %v3float %1578 %1582
       %1584 = OpLoad %v3float %vh
       %1585 = OpLoad %v2float %p
       %1586 = OpLoad %v2float %p
       %1587 = OpDot %float %1585 %1586
       %1588 = OpFSub %float %float_1 %1587
       %1589 = OpExtInst %float %12 FMax %float_0 %1588
       %1590 = OpExtInst %float %12 Sqrt %1589
       %1591 = OpVectorTimesScalar %v3float %1584 %1590
       %1592 = OpFAdd %v3float %1583 %1591
               OpStore %wh %1592
               OpLine %8 98 0
       %1593 = OpAccessChain %_ptr_Function_float %wh %uint_0
       %1594 = OpLoad %float %1593
       %1595 = OpLoad %float %alpha_3
       %1596 = OpFMul %float %1594 %1595
       %1597 = OpAccessChain %_ptr_Function_float %wh %uint_1
       %1598 = OpLoad %float %1597
       %1599 = OpLoad %float %alpha_3
       %1600 = OpFMul %float %1598 %1599
       %1601 = OpAccessChain %_ptr_Function_float %wh %uint_2
       %1602 = OpLoad %float %1601
       %1603 = OpExtInst %float %12 FMax %float_0 %1602
       %1604 = OpCompositeConstruct %v3float %1596 %1600 %1603
               OpStore %wh %1604
               OpLine %8 99 0
       %1605 = OpLoad %mat3v3float %transMat
       %1606 = OpLoad %v3float %wh
       %1607 = OpMatrixTimesVector %v3float %1605 %1606
       %1608 = OpExtInst %v3float %12 Normalize %1607
               OpReturnValue %1608
               OpFunctionEnd
               OpLine %8 102 39
%isGTR2Connectible_f1_ = OpFunction %bool None %259
  %roughness = OpFunctionParameter %_ptr_Function_float
        %262 = OpLabel
               OpLine %8 103 0
       %1611 = OpLoad %float %roughness
       %1613 = OpFOrdGreaterThan %bool %1611 %float_0_200000003
               OpReturnValue %1613
               OpFunctionEnd
               OpLine %8 106 33
%isGTR2Delta_f1_ = OpFunction %bool None %259
%roughness_0 = OpFunctionParameter %_ptr_Function_float
        %265 = OpLabel
               OpLine %8 107 0
       %1616 = OpLoad %float %roughness_0
       %1618 = OpFOrdLessThan %bool %1616 %float_0_00999999978
               OpReturnValue %1618
               OpFunctionEnd
               OpLine %8 110 53
%refract_vf3_vf3_f1_vf3_ = OpFunction %bool None %266
        %n_5 = OpFunctionParameter %_ptr_Function_v3float
       %wi_2 = OpFunctionParameter %_ptr_Function_v3float
      %ior_1 = OpFunctionParameter %_ptr_Function_float
         %wt = OpFunctionParameter %_ptr_Function_v3float
        %272 = OpLabel
    %cosIn_0 = OpVariable %_ptr_Function_float Function
     %sin2In = OpVariable %_ptr_Function_float Function
     %sin2Tr = OpVariable %_ptr_Function_float Function
    %cosTr_0 = OpVariable %_ptr_Function_float Function
               OpLine %8 111 0
       %1622 = OpLoad %v3float %n_5
       %1623 = OpLoad %v3float %wi_2
       %1624 = OpDot %float %1622 %1623
               OpStore %cosIn_0 %1624
               OpLine %8 112 0
       %1625 = OpLoad %float %cosIn_0
       %1626 = OpFOrdLessThan %bool %1625 %float_0
               OpSelectionMerge %1628 None
               OpBranchConditional %1626 %1627 %1628
       %1627 = OpLabel
               OpLine %8 113 0
       %1629 = OpLoad %float %ior_1
       %1630 = OpFDiv %float %float_1 %1629
               OpStore %ior_1 %1630
               OpBranch %1628
       %1628 = OpLabel
               OpLine %8 115 0
       %1632 = OpLoad %float %cosIn_0
       %1633 = OpLoad %float %cosIn_0
       %1634 = OpFMul %float %1632 %1633
       %1635 = OpFSub %float %float_1 %1634
       %1636 = OpExtInst %float %12 FMax %float_0 %1635
               OpStore %sin2In %1636
               OpLine %8 116 0
       %1638 = OpLoad %float %sin2In
       %1639 = OpLoad %float %ior_1
       %1640 = OpLoad %float %ior_1
       %1641 = OpFMul %float %1639 %1640
       %1642 = OpFDiv %float %1638 %1641
               OpStore %sin2Tr %1642
               OpLine %8 118 0
       %1643 = OpLoad %float %sin2Tr
       %1644 = OpFOrdGreaterThanEqual %bool %1643 %float_1
               OpSelectionMerge %1646 None
               OpBranchConditional %1644 %1645 %1646
       %1645 = OpLabel
               OpLine %8 119 0
               OpReturnValue %false
       %1646 = OpLabel
               OpLine %8 121 0
       %1649 = OpLoad %float %sin2Tr
       %1650 = OpFSub %float %float_1 %1649
       %1651 = OpExtInst %float %12 Sqrt %1650
               OpStore %cosTr_0 %1651
               OpLine %8 122 0
       %1652 = OpLoad %float %cosIn_0
       %1653 = OpFOrdLessThan %bool %1652 %float_0
               OpSelectionMerge %1655 None
               OpBranchConditional %1653 %1654 %1655
       %1654 = OpLabel
               OpLine %8 123 0
       %1656 = OpLoad %float %cosTr_0
       %1657 = OpFNegate %float %1656
               OpStore %cosTr_0 %1657
               OpBranch %1655
       %1655 = OpLabel
               OpLine %8 125 0
       %1658 = OpLoad %v3float %wi_2
       %1659 = OpFNegate %v3float %1658
       %1660 = OpLoad %float %ior_1
       %1661 = OpCompositeConstruct %v3float %1660 %1660 %1660
       %1662 = OpFDiv %v3float %1659 %1661
       %1663 = OpLoad %v3float %n_5
       %1664 = OpLoad %float %cosIn_0
       %1665 = OpLoad %float %ior_1
       %1666 = OpFDiv %float %1664 %1665
       %1667 = OpLoad %float %cosTr_0
       %1668 = OpFSub %float %1666 %1667
       %1669 = OpVectorTimesScalar %v3float %1663 %1668
       %1670 = OpFAdd %v3float %1662 %1669
       %1671 = OpExtInst %v3float %12 Normalize %1670
               OpStore %wt %1671
               OpLine %8 126 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 129 46
%lambertBSDF_vf3_vf3_vf3_ = OpFunction %v3float None %273
     %albedo = OpFunctionParameter %_ptr_Function_v3float
        %n_6 = OpFunctionParameter %_ptr_Function_v3float
       %wi_3 = OpFunctionParameter %_ptr_Function_v3float
        %278 = OpLabel
               OpLine %8 130 0
       %1674 = OpLoad %v3float %albedo
       %1676 = OpVectorTimesScalar %v3float %1674 %float_0_318309873
               OpReturnValue %1676
               OpFunctionEnd
               OpLine %8 137 69
%lambertSampleBSDF_vf3_vf3_vf2_struct_BSDFSample_vf3_f1_vf3_u11_ = OpFunction %bool None %281
   %albedo_0 = OpFunctionParameter %_ptr_Function_v3float
        %n_7 = OpFunctionParameter %_ptr_Function_v3float
        %r_3 = OpFunctionParameter %_ptr_Function_v2float
          %s = OpFunctionParameter %_ptr_Function_BSDFSample
        %287 = OpLabel
   %param_62 = OpVariable %_ptr_Function_v3float Function
   %param_63 = OpVariable %_ptr_Function_v2float Function
   %param_64 = OpVariable %_ptr_Function_v3float Function
   %param_65 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 138 0
       %1680 = OpLoad %v3float %n_7
               OpStore %param_62 %1680
       %1682 = OpLoad %v2float %r_3
               OpStore %param_63 %1682
       %1683 = OpFunctionCall %v3float %sampleCosineWeightedHemisphere_vf3_vf2_ %param_62 %param_63
       %1684 = OpAccessChain %_ptr_Function_v3float %s %int_0
               OpStore %1684 %1683
               OpLine %8 139 0
       %1686 = OpLoad %v3float %n_7
               OpStore %param_64 %1686
       %1688 = OpAccessChain %_ptr_Function_v3float %s %int_0
       %1689 = OpLoad %v3float %1688
               OpStore %param_65 %1689
       %1690 = OpFunctionCall %float %absDot_vf3_vf3_ %param_64 %param_65
       %1691 = OpFMul %float %1690 %float_0_318309873
       %1692 = OpAccessChain %_ptr_Function_float %s %int_1
               OpStore %1692 %1691
               OpLine %8 140 0
       %1693 = OpLoad %v3float %albedo_0
       %1694 = OpVectorTimesScalar %v3float %1693 %float_0_318309873
       %1695 = OpAccessChain %_ptr_Function_v3float %s %int_2
               OpStore %1695 %1694
               OpLine %8 141 0
       %1697 = OpAccessChain %_ptr_Function_uint %s %int_3
               OpStore %1697 %uint_17
               OpLine %8 142 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 145 95
%dielectricSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ = OpFunction %bool None %290
        %mat = OpFunctionParameter %_ptr_Function_Material
   %albedo_1 = OpFunctionParameter %_ptr_Function_v3float
        %n_8 = OpFunctionParameter %_ptr_Function_v3float
       %wo_1 = OpFunctionParameter %_ptr_Function_v3float
        %r_4 = OpFunctionParameter %_ptr_Function_v3float
        %s_0 = OpFunctionParameter %_ptr_Function_BSDFSample
        %298 = OpLabel
 %pdfReflect = OpVariable %_ptr_Function_float Function
   %param_66 = OpVariable %_ptr_Function_float Function
   %param_67 = OpVariable %_ptr_Function_float Function
   %param_68 = OpVariable %_ptr_Function_v3float Function
   %param_69 = OpVariable %_ptr_Function_v3float Function
   %param_70 = OpVariable %_ptr_Function_float Function
   %param_71 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 146 0
       %1701 = OpLoad %v3float %n_8
       %1702 = OpLoad %v3float %wo_1
       %1703 = OpDot %float %1701 %1702
               OpStore %param_66 %1703
       %1706 = OpAccessChain %_ptr_Function_float %mat %int_5
       %1707 = OpLoad %float %1706
               OpStore %param_67 %1707
       %1708 = OpFunctionCall %float %fresnel_f1_f1_ %param_66 %param_67
               OpStore %pdfReflect %1708
               OpLine %8 147 0
       %1709 = OpLoad %v3float %albedo_1
       %1710 = OpAccessChain %_ptr_Function_v3float %s_0 %int_2
               OpStore %1710 %1709
               OpLine %8 149 0
       %1711 = OpAccessChain %_ptr_Function_float %r_4 %uint_2
       %1712 = OpLoad %float %1711
       %1713 = OpLoad %float %pdfReflect
       %1714 = OpFOrdLessThan %bool %1712 %1713
               OpSelectionMerge %1716 None
               OpBranchConditional %1714 %1715 %1725
       %1715 = OpLabel
               OpLine %8 150 0
       %1717 = OpLoad %v3float %wo_1
       %1718 = OpFNegate %v3float %1717
       %1719 = OpLoad %v3float %n_8
       %1720 = OpExtInst %v3float %12 Reflect %1718 %1719
       %1721 = OpAccessChain %_ptr_Function_v3float %s_0 %int_0
               OpStore %1721 %1720
               OpLine %8 151 0
       %1723 = OpAccessChain %_ptr_Function_uint %s_0 %int_3
               OpStore %1723 %uint_20
               OpLine %8 152 0
       %1724 = OpAccessChain %_ptr_Function_float %s_0 %int_1
               OpStore %1724 %float_1
               OpBranch %1716
       %1725 = OpLabel
               OpLine %8 155 0
       %1727 = OpLoad %v3float %n_8
               OpStore %param_68 %1727
       %1729 = OpLoad %v3float %wo_1
               OpStore %param_69 %1729
       %1731 = OpAccessChain %_ptr_Function_float %mat %int_5
       %1732 = OpLoad %float %1731
               OpStore %param_70 %1732
       %1734 = OpFunctionCall %bool %refract_vf3_vf3_f1_vf3_ %param_68 %param_69 %param_70 %param_71
       %1735 = OpLoad %v3float %param_71
       %1736 = OpAccessChain %_ptr_Function_v3float %s_0 %int_0
               OpStore %1736 %1735
       %1737 = OpLogicalNot %bool %1734
               OpSelectionMerge %1739 None
               OpBranchConditional %1737 %1738 %1739
       %1738 = OpLabel
               OpLine %8 156 0
       %1741 = OpAccessChain %_ptr_Function_uint %s_0 %int_3
               OpStore %1741 %uint_2147483648
               OpLine %8 157 0
               OpReturnValue %false
       %1739 = OpLabel
               OpLine %8 159 0
       %1743 = OpLoad %v3float %n_8
       %1744 = OpLoad %v3float %wo_1
       %1745 = OpDot %float %1743 %1744
       %1746 = OpFOrdLessThan %bool %1745 %float_0
               OpSelectionMerge %1748 None
               OpBranchConditional %1746 %1747 %1748
       %1747 = OpLabel
               OpLine %8 160 0
       %1749 = OpAccessChain %_ptr_Function_float %mat %int_5
       %1750 = OpLoad %float %1749
       %1751 = OpFDiv %float %float_1 %1750
       %1752 = OpAccessChain %_ptr_Function_float %mat %int_5
               OpStore %1752 %1751
               OpBranch %1748
       %1748 = OpLabel
               OpLine %8 162 0
       %1753 = OpAccessChain %_ptr_Function_float %mat %int_5
       %1754 = OpLoad %float %1753
       %1755 = OpAccessChain %_ptr_Function_float %mat %int_5
       %1756 = OpLoad %float %1755
       %1757 = OpFMul %float %1754 %1756
       %1758 = OpAccessChain %_ptr_Function_v3float %s_0 %int_2
       %1759 = OpLoad %v3float %1758
       %1760 = OpCompositeConstruct %v3float %1757 %1757 %1757
       %1761 = OpFDiv %v3float %1759 %1760
       %1762 = OpAccessChain %_ptr_Function_v3float %s_0 %int_2
               OpStore %1762 %1761
               OpLine %8 163 0
       %1764 = OpAccessChain %_ptr_Function_uint %s_0 %int_3
               OpStore %1764 %uint_36
               OpLine %8 164 0
       %1765 = OpAccessChain %_ptr_Function_float %s_0 %int_1
               OpStore %1765 %float_1
               OpBranch %1716
       %1716 = OpLabel
               OpLine %8 166 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 169 78
%metallicWorkflowBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ = OpFunction %v3float None %299
      %mat_0 = OpFunctionParameter %_ptr_Function_Material
   %albedo_2 = OpFunctionParameter %_ptr_Function_v3float
        %n_9 = OpFunctionParameter %_ptr_Function_v3float
       %wo_2 = OpFunctionParameter %_ptr_Function_v3float
       %wi_4 = OpFunctionParameter %_ptr_Function_v3float
        %306 = OpLabel
    %alpha_4 = OpVariable %_ptr_Function_float Function
   %param_72 = OpVariable %_ptr_Function_float Function
       %wh_0 = OpVariable %_ptr_Function_v3float Function
       %cosO = OpVariable %_ptr_Function_float Function
       %cosI = OpVariable %_ptr_Function_float Function
        %f_0 = OpVariable %_ptr_Function_v3float Function
   %param_73 = OpVariable %_ptr_Function_float Function
   %param_74 = OpVariable %_ptr_Function_v3float Function
        %g_0 = OpVariable %_ptr_Function_float Function
   %param_75 = OpVariable %_ptr_Function_float Function
   %param_76 = OpVariable %_ptr_Function_float Function
   %param_77 = OpVariable %_ptr_Function_float Function
          %d = OpVariable %_ptr_Function_float Function
   %param_78 = OpVariable %_ptr_Function_float Function
   %param_79 = OpVariable %_ptr_Function_float Function
               OpLine %8 170 0
       %1770 = OpAccessChain %_ptr_Function_float %mat_0 %int_4
       %1771 = OpLoad %float %1770
               OpStore %param_72 %1771
       %1772 = OpFunctionCall %float %square_f1_ %param_72
               OpStore %alpha_4 %1772
               OpLine %8 171 0
       %1774 = OpLoad %v3float %wo_2
       %1775 = OpLoad %v3float %wi_4
       %1776 = OpFAdd %v3float %1774 %1775
       %1777 = OpExtInst %v3float %12 Normalize %1776
               OpStore %wh_0 %1777
               OpLine %8 173 0
       %1779 = OpLoad %v3float %n_9
       %1780 = OpLoad %v3float %wo_2
       %1781 = OpDot %float %1779 %1780
               OpStore %cosO %1781
               OpLine %8 174 0
       %1783 = OpLoad %v3float %n_9
       %1784 = OpLoad %v3float %wi_4
       %1785 = OpDot %float %1783 %1784
               OpStore %cosI %1785
               OpLine %8 176 0
       %1786 = OpLoad %float %cosI
       %1787 = OpLoad %float %cosO
       %1788 = OpFMul %float %1786 %1787
       %1790 = OpFOrdLessThan %bool %1788 %float_1_00000001en07
               OpSelectionMerge %1792 None
               OpBranchConditional %1790 %1791 %1792
       %1791 = OpLabel
               OpLine %8 177 0
               OpReturnValue %989
       %1792 = OpLabel
               OpLine %8 180 0
       %1795 = OpLoad %v3float %wh_0
       %1796 = OpLoad %v3float %wo_2
       %1797 = OpDot %float %1795 %1796
       %1800 = OpLoad %v3float %albedo_2
       %1801 = OpAccessChain %_ptr_Function_float %mat_0 %int_3
       %1802 = OpLoad %float %1801
       %1803 = OpCompositeConstruct %v3float %1802 %1802 %1802
       %1804 = OpExtInst %v3float %12 FMix %1799 %1800 %1803
               OpStore %param_73 %1797
               OpStore %param_74 %1804
       %1807 = OpFunctionCall %v3float %fresnelSchlick_f1_vf3_ %param_73 %param_74
               OpStore %f_0 %1807
               OpLine %8 181 0
       %1810 = OpLoad %float %cosO
               OpStore %param_75 %1810
       %1812 = OpLoad %float %cosI
               OpStore %param_76 %1812
       %1814 = OpLoad %float %alpha_4
               OpStore %param_77 %1814
       %1815 = OpFunctionCall %float %smithG_f1_f1_f1_ %param_75 %param_76 %param_77
               OpStore %g_0 %1815
               OpLine %8 182 0
       %1817 = OpLoad %v3float %n_9
       %1818 = OpLoad %v3float %wh_0
       %1819 = OpDot %float %1817 %1818
               OpStore %param_78 %1819
       %1822 = OpLoad %float %alpha_4
               OpStore %param_79 %1822
       %1823 = OpFunctionCall %float %GTR2Distrib_f1_f1_ %param_78 %param_79
               OpStore %d %1823
               OpLine %8 184 0
       %1824 = OpLoad %v3float %albedo_2
       %1825 = OpVectorTimesScalar %v3float %1824 %float_0_318309873
       %1826 = OpAccessChain %_ptr_Function_float %mat_0 %int_3
       %1827 = OpLoad %float %1826
       %1828 = OpFSub %float %float_1 %1827
       %1829 = OpVectorTimesScalar %v3float %1825 %1828
       %1830 = OpLoad %float %g_0
       %1831 = OpLoad %float %d
       %1832 = OpFMul %float %1830 %1831
       %1833 = OpLoad %float %cosI
       %1834 = OpFMul %float %float_4 %1833
       %1835 = OpLoad %float %cosO
       %1836 = OpFMul %float %1834 %1835
       %1837 = OpFDiv %float %1832 %1836
       %1838 = OpCompositeConstruct %v3float %1837 %1837 %1837
       %1839 = OpLoad %v3float %f_0
       %1840 = OpExtInst %v3float %12 FMix %1829 %1838 %1839
               OpReturnValue %1840
               OpFunctionEnd
               OpLine %8 187 65
%metallicWorkflowPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ = OpFunction %float None %307
      %mat_1 = OpFunctionParameter %_ptr_Function_Material
       %n_10 = OpFunctionParameter %_ptr_Function_v3float
       %wo_3 = OpFunctionParameter %_ptr_Function_v3float
       %wi_5 = OpFunctionParameter %_ptr_Function_v3float
        %313 = OpLabel
       %wh_1 = OpVariable %_ptr_Function_v3float Function
   %param_80 = OpVariable %_ptr_Function_v3float Function
   %param_81 = OpVariable %_ptr_Function_v3float Function
   %param_82 = OpVariable %_ptr_Function_float Function
   %param_83 = OpVariable %_ptr_Function_v3float Function
   %param_84 = OpVariable %_ptr_Function_v3float Function
   %param_85 = OpVariable %_ptr_Function_v3float Function
   %param_86 = OpVariable %_ptr_Function_float Function
   %param_87 = OpVariable %_ptr_Function_v3float Function
   %param_88 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 188 0
       %1844 = OpLoad %v3float %wo_3
       %1845 = OpLoad %v3float %wi_5
       %1846 = OpFAdd %v3float %1844 %1845
       %1847 = OpExtInst %v3float %12 Normalize %1846
               OpStore %wh_1 %1847
               OpLine %8 191 0
       %1849 = OpLoad %v3float %n_10
               OpStore %param_80 %1849
       %1851 = OpLoad %v3float %wi_5
               OpStore %param_81 %1851
       %1852 = OpFunctionCall %float %satDot_vf3_vf3_ %param_80 %param_81
       %1853 = OpFMul %float %1852 %float_0_318309873
               OpLine %8 194 0
               OpLine %8 192 0
       %1855 = OpAccessChain %_ptr_Function_float %mat_1 %int_4
       %1856 = OpLoad %float %1855
               OpStore %param_82 %1856
       %1857 = OpFunctionCall %float %square_f1_ %param_82
       %1859 = OpLoad %v3float %n_10
               OpStore %param_83 %1859
       %1861 = OpLoad %v3float %wh_1
               OpStore %param_84 %1861
       %1863 = OpLoad %v3float %wo_3
               OpStore %param_85 %1863
               OpStore %param_86 %1857
       %1865 = OpFunctionCall %float %GTR2Pdf_vf3_vf3_vf3_f1_ %param_83 %param_84 %param_85 %param_86
       %1867 = OpLoad %v3float %wh_1
               OpStore %param_87 %1867
       %1869 = OpLoad %v3float %wo_3
               OpStore %param_88 %1869
       %1870 = OpFunctionCall %float %absDot_vf3_vf3_ %param_87 %param_88
       %1871 = OpFMul %float %float_4 %1870
       %1872 = OpFDiv %float %1865 %1871
               OpLine %8 194 0
               OpLine %8 193 0
       %1873 = OpAccessChain %_ptr_Function_float %mat_1 %int_3
       %1874 = OpLoad %float %1873
       %1875 = OpFSub %float %float_2 %1874
       %1876 = OpFDiv %float %float_1 %1875
               OpLine %8 194 0
       %1877 = OpExtInst %float %12 FMix %1853 %1872 %1876
               OpLine %8 190 0
               OpReturnValue %1877
               OpFunctionEnd
               OpLine %8 197 101
%metallicWorkflowSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ = OpFunction %bool None %290
      %mat_2 = OpFunctionParameter %_ptr_Function_Material
   %albedo_3 = OpFunctionParameter %_ptr_Function_v3float
       %n_11 = OpFunctionParameter %_ptr_Function_v3float
       %wo_4 = OpFunctionParameter %_ptr_Function_v3float
        %r_5 = OpFunctionParameter %_ptr_Function_v3float
        %s_1 = OpFunctionParameter %_ptr_Function_BSDFSample
        %321 = OpLabel
    %alpha_5 = OpVariable %_ptr_Function_float Function
   %param_89 = OpVariable %_ptr_Function_float Function
   %param_90 = OpVariable %_ptr_Function_v3float Function
   %param_91 = OpVariable %_ptr_Function_v2float Function
       %wh_2 = OpVariable %_ptr_Function_v3float Function
   %param_92 = OpVariable %_ptr_Function_v3float Function
   %param_93 = OpVariable %_ptr_Function_v3float Function
   %param_94 = OpVariable %_ptr_Function_float Function
   %param_95 = OpVariable %_ptr_Function_v2float Function
   %param_96 = OpVariable %_ptr_Function_float Function
   %param_97 = OpVariable %_ptr_Function_Material Function
   %param_98 = OpVariable %_ptr_Function_v3float Function
   %param_99 = OpVariable %_ptr_Function_v3float Function
  %param_100 = OpVariable %_ptr_Function_v3float Function
  %param_101 = OpVariable %_ptr_Function_v3float Function
  %param_102 = OpVariable %_ptr_Function_Material Function
  %param_103 = OpVariable %_ptr_Function_v3float Function
  %param_104 = OpVariable %_ptr_Function_v3float Function
  %param_105 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 198 0
       %1882 = OpAccessChain %_ptr_Function_float %mat_2 %int_4
       %1883 = OpLoad %float %1882
               OpStore %param_89 %1883
       %1884 = OpFunctionCall %float %square_f1_ %param_89
               OpStore %alpha_5 %1884
               OpLine %8 199 0
       %1885 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
               OpStore %1885 %uint_16
               OpLine %8 201 0
       %1886 = OpAccessChain %_ptr_Function_float %r_5 %uint_2
       %1887 = OpLoad %float %1886
       %1888 = OpAccessChain %_ptr_Function_float %mat_2 %int_3
       %1889 = OpLoad %float %1888
       %1890 = OpFSub %float %float_2 %1889
       %1891 = OpFDiv %float %float_1 %1890
       %1892 = OpFOrdGreaterThan %bool %1887 %1891
               OpSelectionMerge %1894 None
               OpBranchConditional %1892 %1893 %1906
       %1893 = OpLabel
               OpLine %8 202 0
       %1896 = OpLoad %v3float %n_11
               OpStore %param_90 %1896
       %1898 = OpLoad %v3float %r_5
       %1899 = OpVectorShuffle %v2float %1898 %1898 0 1
               OpStore %param_91 %1899
       %1900 = OpFunctionCall %v3float %sampleCosineWeightedHemisphere_vf3_vf2_ %param_90 %param_91
       %1901 = OpAccessChain %_ptr_Function_v3float %s_1 %int_0
               OpStore %1901 %1900
               OpLine %8 203 0
       %1902 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
       %1903 = OpLoad %uint %1902
       %1904 = OpBitwiseOr %uint %1903 %uint_1
       %1905 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
               OpStore %1905 %1904
               OpBranch %1894
       %1906 = OpLabel
               OpLine %8 206 0
       %1908 = OpLoad %v3float %r_5
       %1909 = OpCompositeExtract %float %1908 0
       %1910 = OpCompositeExtract %float %1908 1
       %1911 = OpCompositeConstruct %v2float %1909 %1910
       %1913 = OpLoad %v3float %n_11
               OpStore %param_92 %1913
       %1915 = OpLoad %v3float %wo_4
               OpStore %param_93 %1915
       %1917 = OpLoad %float %alpha_5
               OpStore %param_94 %1917
               OpStore %param_95 %1911
       %1919 = OpFunctionCall %v3float %GTR2Sample_vf3_vf3_f1_vf2_ %param_92 %param_93 %param_94 %param_95
               OpStore %wh_2 %1919
               OpLine %8 207 0
       %1920 = OpLoad %v3float %wo_4
       %1921 = OpLoad %v3float %wh_2
       %1922 = OpExtInst %v3float %12 Reflect %1920 %1921
       %1923 = OpFNegate %v3float %1922
       %1924 = OpAccessChain %_ptr_Function_v3float %s_1 %int_0
               OpStore %1924 %1923
               OpLine %8 208 0
       %1926 = OpAccessChain %_ptr_Function_float %mat_2 %int_4
       %1927 = OpLoad %float %1926
               OpStore %param_96 %1927
       %1928 = OpFunctionCall %bool %isGTR2Delta_f1_ %param_96
       %1929 = OpSelect %uint %1928 %uint_4 %uint_2
       %1930 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
       %1931 = OpLoad %uint %1930
       %1932 = OpBitwiseOr %uint %1931 %1929
       %1933 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
               OpStore %1933 %1932
               OpBranch %1894
       %1894 = OpLabel
               OpLine %8 211 0
       %1934 = OpLoad %v3float %n_11
       %1935 = OpAccessChain %_ptr_Function_v3float %s_1 %int_0
       %1936 = OpLoad %v3float %1935
       %1937 = OpDot %float %1934 %1936
       %1938 = OpFOrdLessThan %bool %1937 %float_0
               OpSelectionMerge %1940 None
               OpBranchConditional %1938 %1939 %1943
       %1939 = OpLabel
               OpLine %8 212 0
       %1941 = OpAccessChain %_ptr_Function_uint %s_1 %int_3
               OpStore %1941 %uint_2147483648
               OpLine %8 213 0
               OpReturnValue %false
       %1943 = OpLabel
               OpLine %8 216 0
       %1945 = OpLoad %Material %mat_2
               OpStore %param_97 %1945
       %1947 = OpLoad %v3float %albedo_3
               OpStore %param_98 %1947
       %1949 = OpLoad %v3float %n_11
               OpStore %param_99 %1949
       %1951 = OpLoad %v3float %wo_4
               OpStore %param_100 %1951
       %1953 = OpAccessChain %_ptr_Function_v3float %s_1 %int_0
       %1954 = OpLoad %v3float %1953
               OpStore %param_101 %1954
       %1955 = OpFunctionCall %v3float %metallicWorkflowBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ %param_97 %param_98 %param_99 %param_100 %param_101
       %1956 = OpAccessChain %_ptr_Function_v3float %s_1 %int_2
               OpStore %1956 %1955
               OpLine %8 217 0
       %1958 = OpLoad %Material %mat_2
               OpStore %param_102 %1958
       %1960 = OpLoad %v3float %n_11
               OpStore %param_103 %1960
       %1962 = OpLoad %v3float %wo_4
               OpStore %param_104 %1962
       %1964 = OpAccessChain %_ptr_Function_v3float %s_1 %int_0
       %1965 = OpLoad %v3float %1964
               OpStore %param_105 %1965
       %1966 = OpFunctionCall %float %metallicWorkflowPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ %param_102 %param_103 %param_104 %param_105
       %1967 = OpAccessChain %_ptr_Function_float %s_1 %int_1
               OpStore %1967 %1966
               OpBranch %1940
       %1940 = OpLabel
               OpLine %8 219 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 222 67
%metalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ = OpFunction %v3float None %299
      %mat_3 = OpFunctionParameter %_ptr_Function_Material
   %albedo_4 = OpFunctionParameter %_ptr_Function_v3float
       %n_12 = OpFunctionParameter %_ptr_Function_v3float
       %wo_5 = OpFunctionParameter %_ptr_Function_v3float
       %wi_6 = OpFunctionParameter %_ptr_Function_v3float
        %328 = OpLabel
  %param_106 = OpVariable %_ptr_Function_float Function
    %alpha_6 = OpVariable %_ptr_Function_float Function
  %param_107 = OpVariable %_ptr_Function_float Function
       %wh_3 = OpVariable %_ptr_Function_v3float Function
     %cosO_0 = OpVariable %_ptr_Function_float Function
     %cosI_0 = OpVariable %_ptr_Function_float Function
        %f_1 = OpVariable %_ptr_Function_float Function
  %param_108 = OpVariable %_ptr_Function_v3float Function
  %param_109 = OpVariable %_ptr_Function_v3float Function
  %param_110 = OpVariable %_ptr_Function_float Function
  %param_111 = OpVariable %_ptr_Function_float Function
        %g_1 = OpVariable %_ptr_Function_float Function
  %param_112 = OpVariable %_ptr_Function_float Function
  %param_113 = OpVariable %_ptr_Function_float Function
  %param_114 = OpVariable %_ptr_Function_float Function
        %d_0 = OpVariable %_ptr_Function_float Function
  %param_115 = OpVariable %_ptr_Function_float Function
  %param_116 = OpVariable %_ptr_Function_float Function
               OpLine %8 223 0
       %1971 = OpAccessChain %_ptr_Function_float %mat_3 %int_4
       %1972 = OpLoad %float %1971
               OpStore %param_106 %1972
       %1973 = OpFunctionCall %bool %isGTR2Delta_f1_ %param_106
               OpSelectionMerge %1975 None
               OpBranchConditional %1973 %1974 %1975
       %1974 = OpLabel
               OpLine %8 224 0
               OpReturnValue %989
       %1975 = OpLabel
               OpLine %8 227 0
       %1979 = OpAccessChain %_ptr_Function_float %mat_3 %int_4
       %1980 = OpLoad %float %1979
               OpStore %param_107 %1980
       %1981 = OpFunctionCall %float %square_f1_ %param_107
               OpStore %alpha_6 %1981
               OpLine %8 228 0
       %1983 = OpLoad %v3float %wo_5
       %1984 = OpLoad %v3float %wi_6
       %1985 = OpFAdd %v3float %1983 %1984
       %1986 = OpExtInst %v3float %12 Normalize %1985
               OpStore %wh_3 %1986
               OpLine %8 230 0
       %1988 = OpLoad %v3float %n_12
       %1989 = OpLoad %v3float %wo_5
       %1990 = OpDot %float %1988 %1989
               OpStore %cosO_0 %1990
               OpLine %8 231 0
       %1992 = OpLoad %v3float %n_12
       %1993 = OpLoad %v3float %wi_6
       %1994 = OpDot %float %1992 %1993
               OpStore %cosI_0 %1994
               OpLine %8 233 0
       %1995 = OpLoad %float %cosI_0
       %1996 = OpLoad %float %cosO_0
       %1997 = OpFMul %float %1995 %1996
       %1998 = OpFOrdLessThan %bool %1997 %float_1_00000001en07
               OpSelectionMerge %2000 None
               OpBranchConditional %1998 %1999 %2000
       %1999 = OpLabel
               OpLine %8 234 0
               OpReturnValue %989
       %2000 = OpLabel
               OpLine %8 237 0
       %2004 = OpLoad %v3float %wh_3
               OpStore %param_108 %2004
       %2006 = OpLoad %v3float %wo_5
               OpStore %param_109 %2006
       %2007 = OpFunctionCall %float %absDot_vf3_vf3_ %param_108 %param_109
               OpStore %param_110 %2007
       %2010 = OpAccessChain %_ptr_Function_float %mat_3 %int_5
       %2011 = OpLoad %float %2010
               OpStore %param_111 %2011
       %2012 = OpFunctionCall %float %fresnelSchlick_f1_f1_ %param_110 %param_111
               OpStore %f_1 %2012
               OpLine %8 238 0
       %2015 = OpLoad %float %cosO_0
               OpStore %param_112 %2015
       %2017 = OpLoad %float %cosI_0
               OpStore %param_113 %2017
       %2019 = OpLoad %float %alpha_6
               OpStore %param_114 %2019
       %2020 = OpFunctionCall %float %smithG_f1_f1_f1_ %param_112 %param_113 %param_114
               OpStore %g_1 %2020
               OpLine %8 239 0
       %2022 = OpLoad %v3float %n_12
       %2023 = OpLoad %v3float %wh_3
       %2024 = OpDot %float %2022 %2023
               OpStore %param_115 %2024
       %2027 = OpLoad %float %alpha_6
               OpStore %param_116 %2027
       %2028 = OpFunctionCall %float %GTR2Distrib_f1_f1_ %param_115 %param_116
               OpStore %d_0 %2028
               OpLine %8 241 0
       %2029 = OpLoad %v3float %albedo_4
       %2030 = OpLoad %float %f_1
       %2031 = OpVectorTimesScalar %v3float %2029 %2030
       %2032 = OpLoad %float %g_1
       %2033 = OpVectorTimesScalar %v3float %2031 %2032
       %2034 = OpLoad %float %d_0
       %2035 = OpVectorTimesScalar %v3float %2033 %2034
       %2036 = OpLoad %float %cosI_0
       %2037 = OpFMul %float %float_4 %2036
       %2038 = OpLoad %float %cosO_0
       %2039 = OpFMul %float %2037 %2038
       %2040 = OpCompositeConstruct %v3float %2039 %2039 %2039
       %2041 = OpFDiv %v3float %2035 %2040
               OpReturnValue %2041
               OpFunctionEnd
               OpLine %8 244 54
%metalPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ = OpFunction %float None %307
      %mat_4 = OpFunctionParameter %_ptr_Function_Material
       %n_13 = OpFunctionParameter %_ptr_Function_v3float
       %wo_6 = OpFunctionParameter %_ptr_Function_v3float
       %wi_7 = OpFunctionParameter %_ptr_Function_v3float
        %334 = OpLabel
       %wh_4 = OpVariable %_ptr_Function_v3float Function
  %param_117 = OpVariable %_ptr_Function_float Function
  %param_118 = OpVariable %_ptr_Function_v3float Function
  %param_119 = OpVariable %_ptr_Function_v3float Function
  %param_120 = OpVariable %_ptr_Function_v3float Function
  %param_121 = OpVariable %_ptr_Function_float Function
  %param_122 = OpVariable %_ptr_Function_v3float Function
  %param_123 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 245 0
       %2045 = OpLoad %v3float %wo_6
       %2046 = OpLoad %v3float %wi_7
       %2047 = OpFAdd %v3float %2045 %2046
       %2048 = OpExtInst %v3float %12 Normalize %2047
               OpStore %wh_4 %2048
               OpLine %8 246 0
       %2050 = OpAccessChain %_ptr_Function_float %mat_4 %int_4
       %2051 = OpLoad %float %2050
               OpStore %param_117 %2051
       %2052 = OpFunctionCall %float %square_f1_ %param_117
       %2054 = OpLoad %v3float %n_13
               OpStore %param_118 %2054
       %2056 = OpLoad %v3float %wh_4
               OpStore %param_119 %2056
       %2058 = OpLoad %v3float %wo_6
               OpStore %param_120 %2058
               OpStore %param_121 %2052
       %2060 = OpFunctionCall %float %GTR2Pdf_vf3_vf3_vf3_f1_ %param_118 %param_119 %param_120 %param_121
       %2062 = OpLoad %v3float %wh_4
               OpStore %param_122 %2062
       %2064 = OpLoad %v3float %wo_6
               OpStore %param_123 %2064
       %2065 = OpFunctionCall %float %absDot_vf3_vf3_ %param_122 %param_123
       %2066 = OpFMul %float %float_4 %2065
       %2067 = OpFDiv %float %2060 %2066
               OpReturnValue %2067
               OpFunctionEnd
               OpLine %8 249 90
%metalSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ = OpFunction %bool None %290
      %mat_5 = OpFunctionParameter %_ptr_Function_Material
   %albedo_5 = OpFunctionParameter %_ptr_Function_v3float
       %n_14 = OpFunctionParameter %_ptr_Function_v3float
       %wo_7 = OpFunctionParameter %_ptr_Function_v3float
        %r_6 = OpFunctionParameter %_ptr_Function_v3float
        %s_2 = OpFunctionParameter %_ptr_Function_BSDFSample
        %342 = OpLabel
    %alpha_7 = OpVariable %_ptr_Function_float Function
  %param_124 = OpVariable %_ptr_Function_float Function
    %isDelta = OpVariable %_ptr_Function_bool Function
  %param_125 = OpVariable %_ptr_Function_float Function
       %wh_5 = OpVariable %_ptr_Function_v3float Function
  %param_126 = OpVariable %_ptr_Function_v3float Function
  %param_127 = OpVariable %_ptr_Function_v3float Function
  %param_128 = OpVariable %_ptr_Function_float Function
  %param_129 = OpVariable %_ptr_Function_v2float Function
       %2116 = OpVariable %_ptr_Function_v3float Function
  %param_130 = OpVariable %_ptr_Function_v3float Function
  %param_131 = OpVariable %_ptr_Function_v3float Function
  %param_132 = OpVariable %_ptr_Function_float Function
  %param_133 = OpVariable %_ptr_Function_float Function
  %param_134 = OpVariable %_ptr_Function_Material Function
  %param_135 = OpVariable %_ptr_Function_v3float Function
  %param_136 = OpVariable %_ptr_Function_v3float Function
  %param_137 = OpVariable %_ptr_Function_v3float Function
  %param_138 = OpVariable %_ptr_Function_v3float Function
       %2147 = OpVariable %_ptr_Function_float Function
  %param_139 = OpVariable %_ptr_Function_Material Function
  %param_140 = OpVariable %_ptr_Function_v3float Function
  %param_141 = OpVariable %_ptr_Function_v3float Function
  %param_142 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 250 0
       %2072 = OpAccessChain %_ptr_Function_float %mat_5 %int_4
       %2073 = OpLoad %float %2072
               OpStore %param_124 %2073
       %2074 = OpFunctionCall %float %square_f1_ %param_124
               OpStore %alpha_7 %2074
               OpLine %8 252 0
       %2077 = OpAccessChain %_ptr_Function_float %mat_5 %int_4
       %2078 = OpLoad %float %2077
               OpStore %param_125 %2078
       %2079 = OpFunctionCall %bool %isGTR2Delta_f1_ %param_125
               OpStore %isDelta %2079
       %2080 = OpLoad %bool %isDelta
               OpSelectionMerge %2082 None
               OpBranchConditional %2080 %2081 %2088
       %2081 = OpLabel
               OpLine %8 255 0
       %2083 = OpLoad %v3float %wo_7
       %2084 = OpLoad %v3float %n_14
       %2085 = OpExtInst %v3float %12 Reflect %2083 %2084
       %2086 = OpFNegate %v3float %2085
       %2087 = OpAccessChain %_ptr_Function_v3float %s_2 %int_0
               OpStore %2087 %2086
               OpBranch %2082
       %2088 = OpLabel
               OpLine %8 258 0
       %2091 = OpLoad %v3float %n_14
               OpStore %param_126 %2091
       %2093 = OpLoad %v3float %wo_7
               OpStore %param_127 %2093
       %2095 = OpLoad %float %alpha_7
               OpStore %param_128 %2095
       %2097 = OpLoad %v3float %r_6
       %2098 = OpVectorShuffle %v2float %2097 %2097 0 1
               OpStore %param_129 %2098
       %2099 = OpFunctionCall %v3float %GTR2Sample_vf3_vf3_f1_vf2_ %param_126 %param_127 %param_128 %param_129
               OpStore %wh_5 %2099
               OpLine %8 259 0
       %2100 = OpLoad %v3float %wo_7
       %2101 = OpLoad %v3float %wh_5
       %2102 = OpExtInst %v3float %12 Reflect %2100 %2101
       %2103 = OpFNegate %v3float %2102
       %2104 = OpAccessChain %_ptr_Function_v3float %s_2 %int_0
               OpStore %2104 %2103
               OpBranch %2082
       %2082 = OpLabel
               OpLine %8 262 0
       %2105 = OpLoad %v3float %n_14
       %2106 = OpAccessChain %_ptr_Function_v3float %s_2 %int_0
       %2107 = OpLoad %v3float %2106
       %2108 = OpDot %float %2105 %2107
       %2109 = OpFOrdLessThan %bool %2108 %float_0
               OpSelectionMerge %2111 None
               OpBranchConditional %2109 %2110 %2114
       %2110 = OpLabel
               OpLine %8 263 0
       %2112 = OpAccessChain %_ptr_Function_uint %s_2 %int_3
               OpStore %2112 %uint_2147483648
               OpLine %8 264 0
               OpReturnValue %false
       %2114 = OpLabel
               OpLine %8 267 0
       %2115 = OpLoad %bool %isDelta
               OpSelectionMerge %2118 None
               OpBranchConditional %2115 %2117 %2131
       %2117 = OpLabel
               OpLine %8 267 0
       %2120 = OpLoad %v3float %n_14
               OpStore %param_130 %2120
       %2122 = OpLoad %v3float %wo_7
               OpStore %param_131 %2122
       %2123 = OpFunctionCall %float %absDot_vf3_vf3_ %param_130 %param_131
               OpStore %param_132 %2123
       %2126 = OpAccessChain %_ptr_Function_float %mat_5 %int_5
       %2127 = OpLoad %float %2126
               OpStore %param_133 %2127
       %2128 = OpFunctionCall %float %fresnelSchlick_f1_f1_ %param_132 %param_133
       %2129 = OpLoad %v3float %albedo_5
       %2130 = OpVectorTimesScalar %v3float %2129 %2128
               OpStore %2116 %2130
               OpBranch %2118
       %2131 = OpLabel
               OpLine %8 267 0
       %2133 = OpLoad %Material %mat_5
               OpStore %param_134 %2133
       %2135 = OpLoad %v3float %albedo_5
               OpStore %param_135 %2135
       %2137 = OpLoad %v3float %n_14
               OpStore %param_136 %2137
       %2139 = OpLoad %v3float %wo_7
               OpStore %param_137 %2139
       %2141 = OpAccessChain %_ptr_Function_v3float %s_2 %int_0
       %2142 = OpLoad %v3float %2141
               OpStore %param_138 %2142
       %2143 = OpFunctionCall %v3float %metalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ %param_134 %param_135 %param_136 %param_137 %param_138
               OpStore %2116 %2143
               OpBranch %2118
       %2118 = OpLabel
       %2144 = OpLoad %v3float %2116
       %2145 = OpAccessChain %_ptr_Function_v3float %s_2 %int_2
               OpStore %2145 %2144
               OpLine %8 268 0
       %2146 = OpLoad %bool %isDelta
               OpSelectionMerge %2149 None
               OpBranchConditional %2146 %2148 %2150
       %2148 = OpLabel
               OpStore %2147 %float_1
               OpBranch %2149
       %2150 = OpLabel
               OpLine %8 268 0
       %2152 = OpLoad %Material %mat_5
               OpStore %param_139 %2152
       %2154 = OpLoad %v3float %n_14
               OpStore %param_140 %2154
       %2156 = OpLoad %v3float %wo_7
               OpStore %param_141 %2156
       %2158 = OpAccessChain %_ptr_Function_v3float %s_2 %int_0
       %2159 = OpLoad %v3float %2158
               OpStore %param_142 %2159
       %2160 = OpFunctionCall %float %metalPdf_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_ %param_139 %param_140 %param_141 %param_142
               OpStore %2147 %2160
               OpBranch %2149
       %2149 = OpLabel
       %2161 = OpLoad %float %2147
       %2162 = OpAccessChain %_ptr_Function_float %s_2 %int_1
               OpStore %2162 %2161
               OpLine %8 269 0
       %2163 = OpLoad %bool %isDelta
       %2164 = OpSelect %uint %2163 %uint_4 %uint_2
       %2165 = OpBitwiseOr %uint %uint_16 %2164
       %2166 = OpAccessChain %_ptr_Function_uint %s_2 %int_3
               OpStore %2166 %2165
               OpBranch %2111
       %2111 = OpLabel
               OpLine %8 271 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 274 66
%evalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ = OpFunction %v3float None %299
      %mat_6 = OpFunctionParameter %_ptr_Function_Material
   %albedo_6 = OpFunctionParameter %_ptr_Function_v3float
       %n_15 = OpFunctionParameter %_ptr_Function_v3float
       %wo_8 = OpFunctionParameter %_ptr_Function_v3float
       %wi_8 = OpFunctionParameter %_ptr_Function_v3float
        %349 = OpLabel
  %param_143 = OpVariable %_ptr_Function_v3float Function
  %param_144 = OpVariable %_ptr_Function_v3float Function
  %param_145 = OpVariable %_ptr_Function_v3float Function
  %param_146 = OpVariable %_ptr_Function_Material Function
  %param_147 = OpVariable %_ptr_Function_v3float Function
  %param_148 = OpVariable %_ptr_Function_v3float Function
  %param_149 = OpVariable %_ptr_Function_v3float Function
  %param_150 = OpVariable %_ptr_Function_v3float Function
  %param_151 = OpVariable %_ptr_Function_Material Function
  %param_152 = OpVariable %_ptr_Function_v3float Function
  %param_153 = OpVariable %_ptr_Function_v3float Function
  %param_154 = OpVariable %_ptr_Function_v3float Function
  %param_155 = OpVariable %_ptr_Function_v3float Function
               OpLine %8 275 0
       %2169 = OpAccessChain %_ptr_Function_uint %mat_6 %int_1
       %2170 = OpLoad %uint %2169
               OpSelectionMerge %2175 None
               OpSwitch %2170 %2175 1 %2171 2 %2172 3 %2173 4 %2174
       %2171 = OpLabel
               OpLine %8 277 0
       %2177 = OpLoad %v3float %albedo_6
               OpStore %param_143 %2177
       %2179 = OpLoad %v3float %n_15
               OpStore %param_144 %2179
       %2181 = OpLoad %v3float %wi_8
               OpStore %param_145 %2181
       %2182 = OpFunctionCall %v3float %lambertBSDF_vf3_vf3_vf3_ %param_143 %param_144 %param_145
               OpReturnValue %2182
       %2172 = OpLabel
               OpLine %8 279 0
       %2185 = OpLoad %Material %mat_6
               OpStore %param_146 %2185
       %2187 = OpLoad %v3float %albedo_6
               OpStore %param_147 %2187
       %2189 = OpLoad %v3float %n_15
               OpStore %param_148 %2189
       %2191 = OpLoad %v3float %wo_8
               OpStore %param_149 %2191
       %2193 = OpLoad %v3float %wi_8
               OpStore %param_150 %2193
       %2194 = OpFunctionCall %v3float %metallicWorkflowBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ %param_146 %param_147 %param_148 %param_149 %param_150
               OpReturnValue %2194
       %2173 = OpLabel
               OpLine %8 281 0
       %2197 = OpLoad %Material %mat_6
               OpStore %param_151 %2197
       %2199 = OpLoad %v3float %albedo_6
               OpStore %param_152 %2199
       %2201 = OpLoad %v3float %n_15
               OpStore %param_153 %2201
       %2203 = OpLoad %v3float %wo_8
               OpStore %param_154 %2203
       %2205 = OpLoad %v3float %wi_8
               OpStore %param_155 %2205
       %2206 = OpFunctionCall %v3float %metalBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_ %param_151 %param_152 %param_153 %param_154 %param_155
               OpReturnValue %2206
       %2174 = OpLabel
               OpLine %8 283 0
               OpReturnValue %989
       %2175 = OpLabel
               OpLine %8 285 0
               OpReturnValue %989
               OpFunctionEnd
               OpLine %8 302 85
%sampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ = OpFunction %bool None %290
      %mat_7 = OpFunctionParameter %_ptr_Function_Material
   %albedo_7 = OpFunctionParameter %_ptr_Function_v3float
       %n_16 = OpFunctionParameter %_ptr_Function_v3float
       %wo_9 = OpFunctionParameter %_ptr_Function_v3float
        %r_7 = OpFunctionParameter %_ptr_Function_v3float
        %s_3 = OpFunctionParameter %_ptr_Function_BSDFSample
        %357 = OpLabel
  %param_156 = OpVariable %_ptr_Function_v3float Function
  %param_157 = OpVariable %_ptr_Function_v3float Function
  %param_158 = OpVariable %_ptr_Function_v2float Function
  %param_159 = OpVariable %_ptr_Function_BSDFSample Function
  %param_160 = OpVariable %_ptr_Function_Material Function
  %param_161 = OpVariable %_ptr_Function_v3float Function
  %param_162 = OpVariable %_ptr_Function_v3float Function
  %param_163 = OpVariable %_ptr_Function_v3float Function
  %param_164 = OpVariable %_ptr_Function_v3float Function
  %param_165 = OpVariable %_ptr_Function_BSDFSample Function
  %param_166 = OpVariable %_ptr_Function_Material Function
  %param_167 = OpVariable %_ptr_Function_v3float Function
  %param_168 = OpVariable %_ptr_Function_v3float Function
  %param_169 = OpVariable %_ptr_Function_v3float Function
  %param_170 = OpVariable %_ptr_Function_v3float Function
  %param_171 = OpVariable %_ptr_Function_BSDFSample Function
  %param_172 = OpVariable %_ptr_Function_Material Function
  %param_173 = OpVariable %_ptr_Function_v3float Function
  %param_174 = OpVariable %_ptr_Function_v3float Function
  %param_175 = OpVariable %_ptr_Function_v3float Function
  %param_176 = OpVariable %_ptr_Function_v3float Function
  %param_177 = OpVariable %_ptr_Function_BSDFSample Function
               OpLine %8 303 0
       %2212 = OpAccessChain %_ptr_Function_uint %mat_7 %int_1
       %2213 = OpLoad %uint %2212
               OpSelectionMerge %2218 None
               OpSwitch %2213 %2218 1 %2214 2 %2215 3 %2216 4 %2217
       %2214 = OpLabel
               OpLine %8 305 0
       %2220 = OpLoad %v3float %albedo_7
               OpStore %param_156 %2220
       %2222 = OpLoad %v3float %n_16
               OpStore %param_157 %2222
       %2224 = OpLoad %v3float %r_7
       %2225 = OpVectorShuffle %v2float %2224 %2224 0 1
               OpStore %param_158 %2225
       %2227 = OpFunctionCall %bool %lambertSampleBSDF_vf3_vf3_vf2_struct_BSDFSample_vf3_f1_vf3_u11_ %param_156 %param_157 %param_158 %param_159
       %2228 = OpLoad %BSDFSample %param_159
               OpStore %s_3 %2228
               OpReturnValue %2227
       %2215 = OpLabel
               OpLine %8 307 0
       %2231 = OpLoad %Material %mat_7
               OpStore %param_160 %2231
       %2233 = OpLoad %v3float %albedo_7
               OpStore %param_161 %2233
       %2235 = OpLoad %v3float %n_16
               OpStore %param_162 %2235
       %2237 = OpLoad %v3float %wo_9
               OpStore %param_163 %2237
       %2239 = OpLoad %v3float %r_7
               OpStore %param_164 %2239
       %2241 = OpFunctionCall %bool %metallicWorkflowSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ %param_160 %param_161 %param_162 %param_163 %param_164 %param_165
       %2242 = OpLoad %BSDFSample %param_165
               OpStore %s_3 %2242
               OpReturnValue %2241
       %2216 = OpLabel
               OpLine %8 309 0
       %2245 = OpLoad %Material %mat_7
               OpStore %param_166 %2245
       %2247 = OpLoad %v3float %albedo_7
               OpStore %param_167 %2247
       %2249 = OpLoad %v3float %n_16
               OpStore %param_168 %2249
       %2251 = OpLoad %v3float %wo_9
               OpStore %param_169 %2251
       %2253 = OpLoad %v3float %r_7
               OpStore %param_170 %2253
       %2255 = OpFunctionCall %bool %metalSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ %param_166 %param_167 %param_168 %param_169 %param_170 %param_171
       %2256 = OpLoad %BSDFSample %param_171
               OpStore %s_3 %2256
               OpReturnValue %2255
       %2217 = OpLabel
               OpLine %8 311 0
       %2259 = OpLoad %Material %mat_7
               OpStore %param_172 %2259
       %2261 = OpLoad %v3float %albedo_7
               OpStore %param_173 %2261
       %2263 = OpLoad %v3float %n_16
               OpStore %param_174 %2263
       %2265 = OpLoad %v3float %wo_9
               OpStore %param_175 %2265
       %2267 = OpLoad %v3float %r_7
               OpStore %param_176 %2267
       %2269 = OpFunctionCall %bool %dielectricSampleBSDF_struct_Material_vf3_u1_u1_f1_f1_f11_vf3_vf3_vf3_vf3_struct_BSDFSample_vf3_f1_vf3_u11_ %param_172 %param_173 %param_174 %param_175 %param_176 %param_177
       %2270 = OpLoad %BSDFSample %param_177
               OpStore %s_3 %2270
               OpReturnValue %2269
       %2218 = OpLabel
               OpLine %8 313 0
               OpReturnValue %false
               OpFunctionEnd
               OpLine %8 316 30
%isBSDFDelta_struct_Material_vf3_u1_u1_f1_f1_f11_ = OpFunction %bool None %358
      %mat_8 = OpFunctionParameter %_ptr_Function_Material
        %361 = OpLabel
  %param_178 = OpVariable %_ptr_Function_float Function
  %param_179 = OpVariable %_ptr_Function_float Function
               OpLine %8 317 0
       %2275 = OpAccessChain %_ptr_Function_uint %mat_8 %int_1
       %2276 = OpLoad %uint %2275
               OpSelectionMerge %2281 None
               OpSwitch %2276 %2281 1 %2277 2 %2278 3 %2279 4 %2280
       %2277 = OpLabel
               OpLine %8 319 0
               OpReturnValue %false
       %2278 = OpLabel
               OpLine %8 321 0
       %2284 = OpAccessChain %_ptr_Function_float %mat_8 %int_4
       %2285 = OpLoad %float %2284
               OpStore %param_178 %2285
       %2286 = OpFunctionCall %bool %isGTR2Delta_f1_ %param_178
               OpSelectionMerge %2288 None
               OpBranchConditional %2286 %2287 %2288
       %2287 = OpLabel
               OpLine %8 321 0
       %2289 = OpAccessChain %_ptr_Function_float %mat_8 %int_3
       %2290 = OpLoad %float %2289
       %2292 = OpFOrdGreaterThan %bool %2290 %float_0_949999988
               OpBranch %2288
       %2288 = OpLabel
       %2293 = OpPhi %bool %2286 %2278 %2292 %2287
               OpLine %8 321 0
               OpReturnValue %2293
       %2279 = OpLabel
               OpLine %8 323 0
       %2296 = OpAccessChain %_ptr_Function_float %mat_8 %int_4
       %2297 = OpLoad %float %2296
               OpStore %param_179 %2297
       %2298 = OpFunctionCall %bool %isGTR2Delta_f1_ %param_179
               OpReturnValue %2298
       %2280 = OpLabel
               OpLine %8 325 0
               OpReturnValue %true
       %2281 = OpLabel
               OpLine %8 327 0
               OpReturnValue %true
               OpFunctionEnd
               OpLine %8 330 36
%isBSDFConnectible_struct_Material_vf3_u1_u1_f1_f1_f11_ = OpFunction %bool None %358
      %mat_9 = OpFunctionParameter %_ptr_Function_Material
        %364 = OpLabel
  %param_180 = OpVariable %_ptr_Function_float Function
  %param_181 = OpVariable %_ptr_Function_float Function
               OpLine %8 331 0
       %2304 = OpAccessChain %_ptr_Function_uint %mat_9 %int_1
       %2305 = OpLoad %uint %2304
               OpSelectionMerge %2310 None
               OpSwitch %2305 %2310 1 %2306 2 %2307 3 %2308 4 %2309
       %2306 = OpLabel
               OpLine %8 333 0
               OpReturnValue %true
       %2307 = OpLabel
               OpLine %8 335 0
       %2313 = OpAccessChain %_ptr_Function_float %mat_9 %int_4
       %2314 = OpLoad %float %2313
               OpStore %param_180 %2314
       %2315 = OpFunctionCall %bool %isGTR2Connectible_f1_ %param_180
       %2316 = OpLogicalNot %bool %2315
               OpSelectionMerge %2318 None
               OpBranchConditional %2316 %2317 %2318
       %2317 = OpLabel
               OpLine %8 335 0
       %2319 = OpAccessChain %_ptr_Function_float %mat_9 %int_3
       %2320 = OpLoad %float %2319
       %2321 = OpFOrdLessThan %bool %2320 %float_0_949999988
               OpBranch %2318
       %2318 = OpLabel
       %2322 = OpPhi %bool %2315 %2307 %2321 %2317
               OpLine %8 335 0
               OpReturnValue %2322
       %2308 = OpLabel
               OpLine %8 337 0
       %2325 = OpAccessChain %_ptr_Function_float %mat_9 %int_4
       %2326 = OpLoad %float %2325
               OpStore %param_181 %2326
       %2327 = OpFunctionCall %bool %isGTR2Connectible_f1_ %param_181
               OpReturnValue %2327
       %2309 = OpLabel
               OpLine %8 339 0
               OpReturnValue %false
       %2310 = OpLabel
               OpLine %8 341 0
               OpReturnValue %false
               OpFunctionEnd
               OpLine %8 344 33
%isSampleTypeDelta_u1_ = OpFunction %bool None %365
       %type = OpFunctionParameter %_ptr_Function_uint
        %368 = OpLabel
               OpLine %8 345 0
       %2333 = OpLoad %uint %type
       %2334 = OpBitwiseAnd %uint %2333 %uint_4
       %2335 = OpIEqual %bool %2334 %uint_4
               OpReturnValue %2335
               OpFunctionEnd
               OpLine %5 15 43
%GRISPathFlagsGetRcVertexId_u1_ = OpFunction %uint None %139
      %flags = OpFunctionParameter %_ptr_Function_uint
        %371 = OpLabel
               OpLine %5 16 0
       %2338 = OpLoad %uint %flags
       %2340 = OpBitwiseAnd %uint %2338 %uint_255
               OpReturnValue %2340
               OpFunctionEnd
               OpLine %5 23 58
%GRISPathFlagsSetRcVertexId_u1_u1_ = OpFunction %void None %372
    %flags_0 = OpFunctionParameter %_ptr_Function_uint
         %id = OpFunctionParameter %_ptr_Function_uint
        %376 = OpLabel
               OpLine %5 24 0
       %2343 = OpLoad %uint %flags_0
       %2345 = OpBitwiseAnd %uint %2343 %uint_4294967040
       %2346 = OpLoad %uint %id
       %2347 = OpBitwiseAnd %uint %2346 %uint_255
       %2348 = OpBitwiseOr %uint %2345 %2347
               OpStore %flags_0 %2348
               OpReturn
               OpFunctionEnd
