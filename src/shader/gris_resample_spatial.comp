#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_ray_query : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : enable

#include "HostDevice.h"

layout(local_size_x = RayQueryBlockSizeX, local_size_y = RayQueryBlockSizeY) in;

#include "ray_query.glsl"
#include "gris_resample_spatial.glsl"

void main() {
    uvec2 index = gl_GlobalInvocationID.xy;
    uvec2 launchDim = uCamera.filmSize;

    if (index.x >= launchDim.x || index.y >= launchDim.y) {
        return;
    }
    vec3 color = spatialReuse(index, launchDim);

    float frameCount = float(uCamera.frameIndex & CameraFrameIndexMask);
    vec3 accumulatedColor = imageLoad(uIndirectOutput, ivec2(index)).rgb;
    accumulatedColor = (accumulatedColor * frameCount + color) / (frameCount + 1.0);

    imageStore(uIndirectOutput, ivec2(index), vec4(accumulatedColor, 1.0));
}